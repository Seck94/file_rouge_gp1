<?php //%255BApp%255CEntity%255CGroupecompetence%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        clone ($p['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
    ],
    null,
    [
        'stdClass' => [
            'fields' => [
                'libelle',
            ],
            'groups' => [
                [
                    'Default',
                ],
            ],
            'collectionOperations' => [
                1 => [
                    'add_groupecompetence' => [
                        'method' => 'POST',
                        'path' => 'admin/groupecompetences',
                        'security_post_denormalize' => 'is_granted(\'EDIT\', object)',
                        'security_post_denormalize_message' => 'Vous n\'avez pas ce privilege.',
                    ],
                    'show_groupecompetence' => [
                        'method' => 'GET',
                        'security' => 'is_granted(\'ROLE_CM\')',
                        'security_message' => 'Vous n\'avez pas acces a cette ressource.',
                        'path' => 'admin/groupecompetences',
                    ],
                    'show_groupecompetence_competence' => [
                        'method' => 'GET',
                        'security' => 'is_granted(\'ROLE_CM\')',
                        'security_message' => 'Vous n\'avez pas acces a cette ressource.',
                        'path' => 'admin/groupecompetences/competences',
                        'normalization_context' => [
                            'groups' => [
                                'Grpcompetence_competence_read',
                            ],
                            'enable_max_depth' => true,
                        ],
                    ],
                ],
            ],
            'itemOperations' => [
                1 => [
                    'get' => [
                        'security' => 'is_granted(\'VIEW\',object)',
                        'security_message' => 'Vous n\'avez pas ce privilege.',
                        'path' => 'admin/groupecompetences/{id}',
                    ],
                    'delete' => [
                        'security' => 'is_granted(\'DELETE\',object)',
                        'security_message' => 'Seul le proprietaite....',
                        'path' => 'admin/groupecompetences/{id}',
                    ],
                    'update_groupecompetence' => [
                        'method' => 'PUT',
                        'security_post_denormalize' => 'is_granted(\'EDIT\', object)',
                        'security_post_denormalize_message' => 'Vous n\'avez pas ce privilege.',
                        'path' => 'admin/groupecompetences/{id}',
                    ],
                ],
            ],
            'attributes' => [
                1 => [
                    'pagination_items_per_page' => 10,
                    'normalization_context' => [
                        'groups' => [
                            'Grpcompetence_read',
                        ],
                        'enable_max_depth' => true,
                    ],
                ],
            ],
            'repositoryClass' => [
                2 => 'App\\Repository\\GroupecompetenceRepository',
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
    ],
    []
); }];
