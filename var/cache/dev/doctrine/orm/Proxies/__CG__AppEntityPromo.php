<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Promo extends \App\Entity\Promo implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'langue', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'titre', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'lieu', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'referenceAgate', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'dateDebut', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'dateFinProvisoire', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'fabrique', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'dateFinReelle', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'etat', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'formateurs', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'groupes', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'referentiel'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'langue', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'titre', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'lieu', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'referenceAgate', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'dateDebut', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'dateFinProvisoire', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'fabrique', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'dateFinReelle', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'etat', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'formateurs', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'groupes', '' . "\0" . 'App\\Entity\\Promo' . "\0" . 'referentiel'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Promo $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLangue(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLangue', []);

        return parent::getLangue();
    }

    /**
     * {@inheritDoc}
     */
    public function setLangue(string $langue): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLangue', [$langue]);

        return parent::setLangue($langue);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitre(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitre', []);

        return parent::getTitre();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitre(string $titre): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitre', [$titre]);

        return parent::setTitre($titre);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(string $description): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getLieu(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLieu', []);

        return parent::getLieu();
    }

    /**
     * {@inheritDoc}
     */
    public function setLieu(string $lieu): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLieu', [$lieu]);

        return parent::setLieu($lieu);
    }

    /**
     * {@inheritDoc}
     */
    public function getReferenceAgate(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReferenceAgate', []);

        return parent::getReferenceAgate();
    }

    /**
     * {@inheritDoc}
     */
    public function setReferenceAgate(string $referenceAgate): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReferenceAgate', [$referenceAgate]);

        return parent::setReferenceAgate($referenceAgate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDebut(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDebut', []);

        return parent::getDateDebut();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDebut(\DateTimeInterface $dateDebut): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDebut', [$dateDebut]);

        return parent::setDateDebut($dateDebut);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFinProvisoire(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFinProvisoire', []);

        return parent::getDateFinProvisoire();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFinProvisoire(\DateTimeInterface $dateFinProvisoire): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFinProvisoire', [$dateFinProvisoire]);

        return parent::setDateFinProvisoire($dateFinProvisoire);
    }

    /**
     * {@inheritDoc}
     */
    public function getFabrique(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFabrique', []);

        return parent::getFabrique();
    }

    /**
     * {@inheritDoc}
     */
    public function setFabrique(string $fabrique): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFabrique', [$fabrique]);

        return parent::setFabrique($fabrique);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFinReelle(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFinReelle', []);

        return parent::getDateFinReelle();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFinReelle(\DateTimeInterface $dateFinReelle): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFinReelle', [$dateFinReelle]);

        return parent::setDateFinReelle($dateFinReelle);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', []);

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat(string $etat): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', [$etat]);

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormateurs(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormateurs', []);

        return parent::getFormateurs();
    }

    /**
     * {@inheritDoc}
     */
    public function addFormateur(\App\Entity\Formateur $formateur): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFormateur', [$formateur]);

        return parent::addFormateur($formateur);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFormateur(\App\Entity\Formateur $formateur): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFormateur', [$formateur]);

        return parent::removeFormateur($formateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(?\App\Entity\User $user): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupes', []);

        return parent::getGroupes();
    }

    /**
     * {@inheritDoc}
     */
    public function addGroupe(\App\Entity\Groupe $groupe): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGroupe', [$groupe]);

        return parent::addGroupe($groupe);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGroupe(\App\Entity\Groupe $groupe): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGroupe', [$groupe]);

        return parent::removeGroupe($groupe);
    }

    /**
     * {@inheritDoc}
     */
    public function getReferentiel(): ?\App\Entity\Referentiel
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReferentiel', []);

        return parent::getReferentiel();
    }

    /**
     * {@inheritDoc}
     */
    public function setReferentiel(?\App\Entity\Referentiel $referentiel): \App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReferentiel', [$referentiel]);

        return parent::setReferentiel($referentiel);
    }

}
