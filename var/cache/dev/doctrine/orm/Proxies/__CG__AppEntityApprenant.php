<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Apprenant extends \App\Entity\Apprenant implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'profilsortie', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'groupe', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'livrables', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'livrableRendus', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'statistiquesCompetences', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'promo', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'promoBriefApprenants'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'profilsortie', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'groupe', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'livrables', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'livrableRendus', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'statistiquesCompetences', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'promo', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'promoBriefApprenants'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Apprenant $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getProfilsortie(): ?\App\Entity\Profilsortie
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfilsortie', []);

        return parent::getProfilsortie();
    }

    /**
     * {@inheritDoc}
     */
    public function setProfilsortie(?\App\Entity\Profilsortie $profilsortie): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfilsortie', [$profilsortie]);

        return parent::setProfilsortie($profilsortie);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupe(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupe', []);

        return parent::getGroupe();
    }

    /**
     * {@inheritDoc}
     */
    public function addGroupe(\App\Entity\Groupe $groupe): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGroupe', [$groupe]);

        return parent::addGroupe($groupe);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGroupe(\App\Entity\Groupe $groupe): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGroupe', [$groupe]);

        return parent::removeGroupe($groupe);
    }

    /**
     * {@inheritDoc}
     */
    public function getLivrables(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLivrables', []);

        return parent::getLivrables();
    }

    /**
     * {@inheritDoc}
     */
    public function addLivrable(\App\Entity\Livrable $livrable): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLivrable', [$livrable]);

        return parent::addLivrable($livrable);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLivrable(\App\Entity\Livrable $livrable): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLivrable', [$livrable]);

        return parent::removeLivrable($livrable);
    }

    /**
     * {@inheritDoc}
     */
    public function getLivrableRendus(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLivrableRendus', []);

        return parent::getLivrableRendus();
    }

    /**
     * {@inheritDoc}
     */
    public function addLivrableRendu(\App\Entity\LivrableRendu $livrableRendu): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLivrableRendu', [$livrableRendu]);

        return parent::addLivrableRendu($livrableRendu);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLivrableRendu(\App\Entity\LivrableRendu $livrableRendu): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLivrableRendu', [$livrableRendu]);

        return parent::removeLivrableRendu($livrableRendu);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatistiquesCompetences(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatistiquesCompetences', []);

        return parent::getStatistiquesCompetences();
    }

    /**
     * {@inheritDoc}
     */
    public function addStatistiquesCompetence(\App\Entity\StatistiquesCompetences $statistiquesCompetence): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStatistiquesCompetence', [$statistiquesCompetence]);

        return parent::addStatistiquesCompetence($statistiquesCompetence);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStatistiquesCompetence(\App\Entity\StatistiquesCompetences $statistiquesCompetence): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStatistiquesCompetence', [$statistiquesCompetence]);

        return parent::removeStatistiquesCompetence($statistiquesCompetence);
    }

    /**
     * {@inheritDoc}
     */
    public function getPromo(): ?\App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPromo', []);

        return parent::getPromo();
    }

    /**
     * {@inheritDoc}
     */
    public function setPromo(?\App\Entity\Promo $promo): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPromo', [$promo]);

        return parent::setPromo($promo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPromoBriefApprenants(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPromoBriefApprenants', []);

        return parent::getPromoBriefApprenants();
    }

    /**
     * {@inheritDoc}
     */
    public function addPromoBriefApprenant(\App\Entity\PromoBriefApprenant $promoBriefApprenant): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPromoBriefApprenant', [$promoBriefApprenant]);

        return parent::addPromoBriefApprenant($promoBriefApprenant);
    }

    /**
     * {@inheritDoc}
     */
    public function removePromoBriefApprenant(\App\Entity\PromoBriefApprenant $promoBriefApprenant): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePromoBriefApprenant', [$promoBriefApprenant]);

        return parent::removePromoBriefApprenant($promoBriefApprenant);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername(string $username): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvatar($avatar): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvatar', [$avatar]);

        return parent::setAvatar($avatar);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', []);

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom(string $prenom): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', [$prenom]);

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom(string $nom): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatut(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatut', []);

        return parent::getStatut();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatut(string $statut): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatut', [$statut]);

        return parent::setStatut($statut);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfil(): ?\App\Entity\Profil
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfil', []);

        return parent::getProfil();
    }

    /**
     * {@inheritDoc}
     */
    public function setProfil(?\App\Entity\Profil $profil): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfil', [$profil]);

        return parent::setProfil($profil);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupecompetence(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupecompetence', []);

        return parent::getGroupecompetence();
    }

    /**
     * {@inheritDoc}
     */
    public function addGroupecompetence(\App\Entity\Groupecompetence $groupecompetence): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGroupecompetence', [$groupecompetence]);

        return parent::addGroupecompetence($groupecompetence);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGroupecompetence(\App\Entity\Groupecompetence $groupecompetence): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGroupecompetence', [$groupecompetence]);

        return parent::removeGroupecompetence($groupecompetence);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLogin(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLogin', []);

        return parent::getLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLogin(?\DateTimeInterface $lastLogin): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLogin', [$lastLogin]);

        return parent::setLastLogin($lastLogin);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentaireGenerals(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentaireGenerals', []);

        return parent::getCommentaireGenerals();
    }

    /**
     * {@inheritDoc}
     */
    public function addCommentaireGeneral(\App\Entity\CommentaireGeneral $commentaireGeneral): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCommentaireGeneral', [$commentaireGeneral]);

        return parent::addCommentaireGeneral($commentaireGeneral);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCommentaireGeneral(\App\Entity\CommentaireGeneral $commentaireGeneral): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCommentaireGeneral', [$commentaireGeneral]);

        return parent::removeCommentaireGeneral($commentaireGeneral);
    }

}
