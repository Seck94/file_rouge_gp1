[2020-07-28T13:53:04.365277+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T13:53:04.368099+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T13:53:04.368138+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:53:04.368211+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:53:04.368508+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:53:04.368695+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:53:28.583494+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T13:53:28.583954+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T13:53:28.583986+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:53:28.584018+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:53:28.584436+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:53:28.589461+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T13:53:28.591068+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T13:53:28.591372+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:53:28.591448+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:53:28.591477+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:53:28.728474+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-28T13:53:28.728731+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"ldab_admin2","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"[resource(stream)]","4":"Ldab","5":"Dabo","6":"ldab@gmail.com","7":"actif","8":1,"9":"user"} []
[2020-07-28T13:53:28.739028+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-07-28T13:53:28.744125+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\UniqueConstraintViolationException: "An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)' with params ["ldab_admin2", "$argon2id$v=19$m=65536,t=4,p=1$B4v3bgsKEQWN\/JQixYjt0A$XBv+QhiJ3hkcKwhZc8OxhDtIIQdp4AJVWhRb7ZVoYsc", Resource id #44, "Ldab", "Dabo", "ldab@gmail.com", "actif", 1, "user"]:  SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677'" at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 55 {"exception":"[object] (Doctrine\\DBAL\\Exception\\UniqueConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)' with params [\"ldab_admin2\", \"$argon2id$v=19$m=65536,t=4,p=1$B4v3bgsKEQWN\\/JQixYjt0A$XBv+QhiJ3hkcKwhZc8OxhDtIIQdp4AJVWhRb7ZVoYsc\", Resource id #44, \"Ldab\", \"Dabo\", \"ldab@gmail.com\", \"actif\", 1, \"user\"]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:55)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-07-28T13:54:23.356422+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T13:54:23.365715+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T13:54:23.365763+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:54:23.365799+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:54:23.369262+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:54:23.406321+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T13:54:23.416124+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T13:54:23.416790+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:54:23.417001+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:54:23.417029+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:54:23.572061+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-28T13:54:23.572779+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"ldab_admin2","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"[resource(stream)]","4":"Ldab","5":"Dabo","6":"ldab@gmail.com","7":"actif","8":1,"9":"user"} []
[2020-07-28T13:54:23.584255+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-07-28T13:54:23.593452+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\UniqueConstraintViolationException: "An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)' with params ["ldab_admin2", "$argon2id$v=19$m=65536,t=4,p=1$0gA0zNmzytdvi4SrnJMt0Q$USizbdY0L8VFVLklGJWdbQM5NPLhTqKI82lsDMCIIPw", Resource id #855, "Ldab", "Dabo", "ldab@gmail.com", "actif", 1, "user"]:  SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677'" at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 55 {"exception":"[object] (Doctrine\\DBAL\\Exception\\UniqueConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)' with params [\"ldab_admin2\", \"$argon2id$v=19$m=65536,t=4,p=1$0gA0zNmzytdvi4SrnJMt0Q$USizbdY0L8VFVLklGJWdbQM5NPLhTqKI82lsDMCIIPw\", Resource id #855, \"Ldab\", \"Dabo\", \"ldab@gmail.com\", \"actif\", 1, \"user\"]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:55)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-07-28T13:55:38.267963+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T13:55:38.268683+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T13:55:38.268717+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:55:38.268749+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:55:38.269509+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:55:38.270564+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:55:46.165694+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T13:55:46.166323+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T13:55:46.166357+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:55:46.166391+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:55:46.166871+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:55:46.169393+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T13:55:46.171038+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T13:55:46.171318+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:55:46.171396+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:55:46.171421+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:55:46.238393+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T13:55:46.251893+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T13:55:46.252688+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T13:55:46.253292+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T13:55:46.254894+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T13:57:17.483143+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T13:57:17.483842+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T13:57:17.483876+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:57:17.483910+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:57:17.484380+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:57:17.486979+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T13:57:17.488678+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T13:57:17.489068+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:57:17.489158+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:57:17.489184+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T13:57:17.498662+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T13:57:17.502038+00:00] request.CRITICAL: Uncaught PHP Exception ApiPlatform\Core\Exception\InvalidArgumentException: "Unable to generate an IRI for "App\Entity\Formateur"." at /opt/lampp/htdocs/file_rouge_gp1/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php line 155 {"exception":"[object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): Unable to generate an IRI for \"App\\Entity\\Formateur\". at /opt/lampp/htdocs/file_rouge_gp1/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php:155)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\InvalidParameterException(code: 0): Parameter \"id\" for route \"api_formateurs_get_item\" must match \"[^/]++\" (\"\" given) to generate a corresponding URL. at /opt/lampp/htdocs/file_rouge_gp1/vendor/symfony/routing/Generator/UrlGenerator.php:193)"} []
[2020-07-28T14:04:08.494266+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T14:04:08.495225+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:04:08.495259+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:04:08.495294+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:04:08.495755+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:04:08.496411+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:04:08.497717+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:04:08.498077+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:04:08.498147+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:04:08.498171+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:04:08.503419+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T14:04:08.510088+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T14:04:08.511092+00:00] php.CRITICAL: Uncaught Error: Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:139)"} []
[2020-07-28T14:04:08.512516+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned" at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php line 139 {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:139)"} []
[2020-07-28T14:05:11.273149+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T14:05:11.274053+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:05:11.274085+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:05:11.274120+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:05:11.274603+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:05:11.275232+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:05:11.276720+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:05:11.277088+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:05:11.277161+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:05:11.277185+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:05:11.281918+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T14:05:11.288392+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T14:05:11.289089+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [22] []
[2020-07-28T14:05:11.289521+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T14:05:11.290428+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [22] []
[2020-07-28T14:05:11.290822+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [25] []
[2020-07-28T14:05:11.291160+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [25] []
[2020-07-28T14:05:11.291553+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [25] []
[2020-07-28T14:05:11.291926+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [26] []
[2020-07-28T14:05:11.292233+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [26] []
[2020-07-28T14:05:11.292597+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [26] []
[2020-07-28T14:05:11.293268+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T14:06:54.957475+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T14:06:54.958362+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:06:54.958394+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:06:54.958429+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:06:54.958910+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:06:54.959514+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:06:54.960723+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:06:54.961072+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:06:54.961139+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:06:54.961164+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:06:54.965949+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T14:06:54.972935+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T14:06:54.973452+00:00] php.CRITICAL: Uncaught Error: Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:139)"} []
[2020-07-28T14:06:54.973770+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned" at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php line 139 {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:139)"} []
[2020-07-28T14:07:26.383407+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T14:07:26.385042+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:07:26.385076+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:07:26.385111+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:07:26.385613+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:07:26.390081+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:07:26.391783+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:07:26.392145+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:07:26.392228+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:07:26.392253+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:07:26.396953+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T14:07:26.398528+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T14:07:26.399196+00:00] php.CRITICAL: Uncaught Error: Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:139)"} []
[2020-07-28T14:07:26.399801+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned" at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php line 139 {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:139)"} []
[2020-07-28T14:07:27.447333+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T14:07:27.447793+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:07:27.447828+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:07:27.447861+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:07:27.448244+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:07:27.451563+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:07:27.453422+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:07:27.453896+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:07:27.453969+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:07:27.453994+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:07:27.455916+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T14:07:27.457097+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T14:07:27.457515+00:00] php.CRITICAL: Uncaught Error: Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:139)"} []
[2020-07-28T14:07:27.457716+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned" at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php line 139 {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:139)"} []
[2020-07-28T14:08:55.796765+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T14:08:55.797846+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:08:55.797880+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:08:55.797915+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:08:55.798399+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:08:55.799082+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:08:55.800389+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:08:55.800753+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:08:55.800827+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:08:55.800852+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:08:55.805586+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T14:08:55.812385+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T14:08:55.813013+00:00] php.CRITICAL: Uncaught Error: Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, none returned {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, none returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:140)"} []
[2020-07-28T14:08:55.813366+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, none returned" at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php line 140 {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, none returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:140)"} []
[2020-07-28T14:09:03.527381+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T14:09:03.528686+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:09:03.528724+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:09:03.528765+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:09:03.529386+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:09:03.530060+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:09:03.531384+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:09:03.531747+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:09:03.531821+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:09:03.531847+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:09:03.536589+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T14:09:03.543033+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T14:09:03.543530+00:00] php.CRITICAL: Uncaught Error: Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:139)"} []
[2020-07-28T14:09:03.543889+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned" at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php line 139 {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:139)"} []
[2020-07-28T14:09:39.169719+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T14:09:39.170681+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:09:39.170717+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:09:39.170753+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:09:39.171293+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:09:39.171960+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:09:39.173341+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:09:39.173742+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:09:39.173815+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:09:39.173840+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:09:39.179374+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T14:09:39.185988+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T14:09:39.186439+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [22] []
[2020-07-28T14:09:39.186833+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T14:09:39.187708+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [22] []
[2020-07-28T14:09:39.188112+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [25] []
[2020-07-28T14:09:39.188453+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [25] []
[2020-07-28T14:09:39.188851+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [25] []
[2020-07-28T14:09:39.189203+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [26] []
[2020-07-28T14:09:39.189480+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [26] []
[2020-07-28T14:09:39.189818+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [26] []
[2020-07-28T14:09:39.190431+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T14:26:40.685743+00:00] request.INFO: Matched route "formateur_liste". {"route":"formateur_liste","route_parameters":{"_route":"formateur_liste","_controller":"App\\Controller\\FormateurController::getFormateur","_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get_formateurs"},"request_uri":"http://127.0.0.1:8000/api/formateurs","method":"GET"} []
[2020-07-28T14:26:40.688107+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:26:40.688173+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:26:40.688230+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:26:40.689055+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:26:40.694661+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:26:40.696422+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:26:40.696773+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:26:40.696854+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:26:40.696879+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:26:40.706288+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id INNER JOIN profil p3_ ON u0_.profil_id = p3_.id WHERE p3_.libelle = ? ORDER BY u0_.id ASC ["FORMATEUR"] []
[2020-07-28T14:26:40.717047+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T14:26:40.717956+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [4] []
[2020-07-28T14:26:40.718350+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [4] []
[2020-07-28T14:26:40.719338+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Serializer\Exception\UnexpectedValueException: "Unexpected non-iterable value for to-many relation." at /opt/lampp/htdocs/file_rouge_gp1/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php line 534 {"exception":"[object] (Symfony\\Component\\Serializer\\Exception\\UnexpectedValueException(code: 0): Unexpected non-iterable value for to-many relation. at /opt/lampp/htdocs/file_rouge_gp1/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php:534)"} []
[2020-07-28T14:27:27.590381+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T14:27:27.591046+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:27:27.591080+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:27.591112+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:27.591578+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:27.595397+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:27:27.597165+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:27:27.597538+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:27.597616+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:27.597639+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:27.601080+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T14:27:27.602815+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T14:27:27.603465+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [22] []
[2020-07-28T14:27:27.603833+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T14:27:27.604392+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [22] []
[2020-07-28T14:27:27.604784+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [25] []
[2020-07-28T14:27:27.605103+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [25] []
[2020-07-28T14:27:27.605463+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [25] []
[2020-07-28T14:27:27.605807+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [26] []
[2020-07-28T14:27:27.606111+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [26] []
[2020-07-28T14:27:27.606473+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [26] []
[2020-07-28T14:27:27.607001+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T14:27:43.882639+00:00] request.INFO: Matched route "api_formateurs_get_item". {"route":"api_formateurs_get_item","route_parameters":{"_route":"api_formateurs_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_item_operation_name":"get","id":"2"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs/2","method":"GET"} []
[2020-07-28T14:27:43.883593+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:27:43.883633+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:43.883668+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:43.884251+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:43.888295+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:27:43.889982+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:27:43.890336+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:43.890420+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:43.890444+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:43.892878+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id WHERE u0_.id = ? [2] []
[2020-07-28T14:27:43.893705+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /opt/lampp/htdocs/file_rouge_gp1/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /opt/lampp/htdocs/file_rouge_gp1/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-07-28T14:27:51.609878+00:00] request.INFO: Matched route "api_formateurs_get_item". {"route":"api_formateurs_get_item","route_parameters":{"_route":"api_formateurs_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_item_operation_name":"get","id":"200"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs/200","method":"GET"} []
[2020-07-28T14:27:51.610543+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:27:51.610579+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:51.610613+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:51.611102+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:51.614902+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:27:51.616655+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:27:51.617066+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:51.617155+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:51.617181+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:27:51.618759+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id WHERE u0_.id = ? [200] []
[2020-07-28T14:27:51.619351+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /opt/lampp/htdocs/file_rouge_gp1/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /opt/lampp/htdocs/file_rouge_gp1/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-07-28T14:28:07.053350+00:00] request.INFO: Matched route "api_formateurs_get_item". {"route":"api_formateurs_get_item","route_parameters":{"_route":"api_formateurs_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_item_operation_name":"get","id":"22"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs/22","method":"GET"} []
[2020-07-28T14:28:07.053948+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:28:07.053980+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:28:07.054014+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:28:07.054491+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:28:07.058258+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:28:07.059916+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:28:07.060215+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:28:07.060294+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:28:07.060319+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:28:07.061966+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id WHERE u0_.id = ? [22] []
[2020-07-28T14:28:07.073511+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T14:28:07.074230+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [22] []
[2020-07-28T14:28:07.074533+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T14:28:07.075011+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [22] []
[2020-07-28T14:29:05.725326+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T14:29:05.725917+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:29:05.725950+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:05.725982+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:05.726481+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:05.730843+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:29:05.732721+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:29:05.733033+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:05.733115+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:05.733139+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:05.868130+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-28T14:29:05.868388+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"ldab_admin2","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"[resource(stream)]","4":"Ldab","5":"Dabo","6":"ldab@gmail.com","7":"actif","8":1,"9":"user"} []
[2020-07-28T14:29:05.878851+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-07-28T14:29:05.884245+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\UniqueConstraintViolationException: "An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)' with params ["ldab_admin2", "$argon2id$v=19$m=65536,t=4,p=1$ivwcGUTtYG1fZ8WOqVBpEA$B5c3mhx\/sn9LAtpNzcHwttx9XmPDNmbet4sPbPnl\/VI", Resource id #26, "Ldab", "Dabo", "ldab@gmail.com", "actif", 1, "user"]:  SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677'" at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 55 {"exception":"[object] (Doctrine\\DBAL\\Exception\\UniqueConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)' with params [\"ldab_admin2\", \"$argon2id$v=19$m=65536,t=4,p=1$ivwcGUTtYG1fZ8WOqVBpEA$B5c3mhx\\/sn9LAtpNzcHwttx9XmPDNmbet4sPbPnl\\/VI\", Resource id #26, \"Ldab\", \"Dabo\", \"ldab@gmail.com\", \"actif\", 1, \"user\"]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:55)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-07-28T14:29:11.686232+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T14:29:11.686824+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:29:11.686859+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:11.686892+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:11.687360+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:11.691187+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:29:11.692959+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:29:11.693327+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:11.693415+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:11.693440+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:11.826063+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-28T14:29:11.826389+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"ldab_admin2","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"[resource(stream)]","4":"Ldab","5":"Dabo","6":"ldab@gmail.com","7":"actif","8":1,"9":"user"} []
[2020-07-28T14:29:11.836820+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-07-28T14:29:11.843996+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\UniqueConstraintViolationException: "An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)' with params ["ldab_admin2", "$argon2id$v=19$m=65536,t=4,p=1$+RpRGtgbYeOpuOKrLQMmzw$Uhpx7NbZ8MohHqrnUO9ngPSBtd+xQPxC9T20rwoPX+8", Resource id #23, "Ldab", "Dabo", "ldab@gmail.com", "actif", 1, "user"]:  SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677'" at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 55 {"exception":"[object] (Doctrine\\DBAL\\Exception\\UniqueConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)' with params [\"ldab_admin2\", \"$argon2id$v=19$m=65536,t=4,p=1$+RpRGtgbYeOpuOKrLQMmzw$Uhpx7NbZ8MohHqrnUO9ngPSBtd+xQPxC9T20rwoPX+8\", Resource id #23, \"Ldab\", \"Dabo\", \"ldab@gmail.com\", \"actif\", 1, \"user\"]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:55)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-07-28T14:29:12.949287+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T14:29:12.949793+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:29:12.949825+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:12.949858+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:12.950225+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:12.954146+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:29:12.956643+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:29:12.957145+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:12.957271+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:12.957308+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:13.091078+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-28T14:29:13.091404+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"ldab_admin2","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"[resource(stream)]","4":"Ldab","5":"Dabo","6":"ldab@gmail.com","7":"actif","8":1,"9":"user"} []
[2020-07-28T14:29:13.101725+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-07-28T14:29:13.107824+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\UniqueConstraintViolationException: "An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)' with params ["ldab_admin2", "$argon2id$v=19$m=65536,t=4,p=1$hCP+KEkhX+C+XVWj7eaWeA$0DEod5Gb3KeDeh+wrxy7RbGYD18rJSDGiUZC7hFi1NU", Resource id #23, "Ldab", "Dabo", "ldab@gmail.com", "actif", 1, "user"]:  SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677'" at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 55 {"exception":"[object] (Doctrine\\DBAL\\Exception\\UniqueConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)' with params [\"ldab_admin2\", \"$argon2id$v=19$m=65536,t=4,p=1$hCP+KEkhX+C+XVWj7eaWeA$0DEod5Gb3KeDeh+wrxy7RbGYD18rJSDGiUZC7hFi1NU\", Resource id #23, \"Ldab\", \"Dabo\", \"ldab@gmail.com\", \"actif\", 1, \"user\"]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:55)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'ldab_admin2' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-07-28T14:29:40.896160+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T14:29:40.896752+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:29:40.896786+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:40.896818+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:40.897282+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:40.901074+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:29:40.902833+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:29:40.903177+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:40.903254+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:40.903278+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:29:41.035698+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-28T14:29:41.036025+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"ldab_admin3","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"[resource(stream)]","4":"Ldab","5":"Dabo","6":"ldab@gmail.com","7":"actif","8":1,"9":"user"} []
[2020-07-28T14:29:41.046388+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-28T14:29:41.052437+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Serializer\Exception\UnexpectedValueException: "Unexpected non-iterable value for to-many relation." at /opt/lampp/htdocs/file_rouge_gp1/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php line 534 {"exception":"[object] (Symfony\\Component\\Serializer\\Exception\\UnexpectedValueException(code: 0): Unexpected non-iterable value for to-many relation. at /opt/lampp/htdocs/file_rouge_gp1/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php:534)"} []
[2020-07-28T14:35:28.257258+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/formateurs","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_formateurs_get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs/","method":"GET"} []
[2020-07-28T14:35:28.257938+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:35:28.257971+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:35:28.258005+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:35:28.258499+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:35:28.262509+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:35:28.264437+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:35:28.264921+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:35:28.265040+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:35:28.265076+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:35:28.278542+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T14:35:28.278966+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:35:28.278999+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:35:28.279031+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:35:28.279384+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:35:28.282841+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:35:28.284439+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:35:28.284730+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:35:28.284795+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:35:28.284820+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:35:28.286802+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T14:35:28.288058+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T14:35:28.288586+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [22] []
[2020-07-28T14:35:28.288876+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T14:35:28.289343+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [22] []
[2020-07-28T14:35:28.289650+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [25] []
[2020-07-28T14:35:28.289906+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [25] []
[2020-07-28T14:35:28.290217+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [25] []
[2020-07-28T14:35:28.290531+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [26] []
[2020-07-28T14:35:28.290796+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [26] []
[2020-07-28T14:35:28.291113+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [26] []
[2020-07-28T14:35:28.291582+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T14:46:59.455278+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T14:46:59.455897+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:46:59.455930+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:46:59.455964+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:46:59.456289+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:46:59.456469+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:47:05.913163+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-07-28T14:47:05.918253+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:47:06.050446+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:47:06.050972+00:00] security.INFO: User has been authenticated successfully. {"username":"michelle muller"} []
[2020-07-28T14:47:20.323850+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T14:47:20.324378+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:47:20.324417+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:47:20.324450+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:47:20.324898+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:47:20.328556+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:47:20.330309+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:47:20.330680+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:47:20.330758+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:47:20.330782+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:51:20.730447+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T14:51:20.731490+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:51:20.731524+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:51:20.731560+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:51:20.732059+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:51:20.732758+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:51:20.734139+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:51:20.734502+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:51:20.734583+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:51:20.734608+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:02.168804+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T14:52:02.169726+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:52:02.169759+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:02.169794+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:02.170290+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:02.171020+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:52:02.172403+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:52:02.172770+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:02.172841+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:02.172864+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:30.883041+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T14:52:30.883992+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:52:30.884026+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:30.884066+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:30.884563+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:30.885235+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:52:30.886590+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:52:30.886977+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:30.887072+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:30.887105+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:32.199382+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T14:52:32.200694+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:52:32.200732+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:32.200769+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:32.201142+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:32.207413+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:52:32.209064+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:52:32.209421+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:32.209490+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:52:32.209514+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:53:14.379396+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T14:53:14.380340+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T14:53:14.380374+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:53:14.380409+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:53:14.380909+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:53:14.381618+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T14:53:14.383700+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T14:53:14.384055+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:53:14.384135+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T14:53:14.384161+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:19:35.808456+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/formateurs","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_formateurs_get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs/","method":"GET"} []
[2020-07-28T15:19:35.809442+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:19:35.809478+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:19:35.809520+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:19:35.809836+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:19:35.810027+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:19:41.330470+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-07-28T15:19:41.343030+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:19:41.484634+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:19:41.485154+00:00] security.INFO: User has been authenticated successfully. {"username":"michelle muller"} []
[2020-07-28T15:20:04.492137+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/formateurs","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_formateurs_get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs/","method":"GET"} []
[2020-07-28T15:20:04.493582+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:20:04.493625+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:04.493662+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:04.494383+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:04.501878+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:20:04.503795+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:20:04.504177+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:04.504269+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:04.504293+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:04.521624+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T15:20:04.522031+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:20:04.522063+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:04.522094+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:04.522468+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:04.527918+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:20:04.529516+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:20:04.529875+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:04.529942+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:04.529966+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:04.539894+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T15:20:04.550949+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T15:20:04.551704+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [22] []
[2020-07-28T15:20:04.552098+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T15:20:04.553224+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [22] []
[2020-07-28T15:20:04.553656+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [25] []
[2020-07-28T15:20:04.554035+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [25] []
[2020-07-28T15:20:04.554446+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [25] []
[2020-07-28T15:20:04.554902+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [26] []
[2020-07-28T15:20:04.555287+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [26] []
[2020-07-28T15:20:04.555696+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [26] []
[2020-07-28T15:20:04.556294+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T15:20:14.334030+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T15:20:14.334751+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:20:14.334788+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:14.334824+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:14.335363+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:14.341226+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:20:14.343050+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:20:14.343411+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:14.343502+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:14.343525+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:14.359739+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T15:20:14.360170+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:20:14.360203+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:14.360244+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:14.360610+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:14.365936+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:20:14.367553+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:20:14.367940+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:14.368031+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:14.368081+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:14.377571+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T15:20:14.389634+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T15:20:14.390740+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T15:20:14.391515+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T15:20:14.392361+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T15:20:54.391871+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T15:20:54.392828+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:20:54.392860+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:54.392895+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:54.393386+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:54.394056+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:20:54.395508+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:20:54.395903+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:54.395978+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:54.396002+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:54.413189+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T15:20:54.414061+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:20:54.414095+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:54.414133+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:54.414500+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:54.420132+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:20:54.421699+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:20:54.422093+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:54.422163+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:54.422187+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:20:54.431865+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T15:20:54.443259+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T15:20:54.444064+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T15:20:54.444708+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T15:20:54.445367+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T15:22:06.918849+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T15:22:06.920112+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:22:06.920197+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:06.920281+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:06.920834+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:06.921514+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:22:06.922823+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:22:06.923174+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:06.923248+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:06.923273+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:06.940449+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T15:22:06.941315+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:22:06.941349+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:06.941382+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:06.941738+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:06.947327+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:22:06.948910+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:22:06.949261+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:06.949322+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:06.949345+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:06.959152+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T15:22:06.970820+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T15:22:06.971665+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T15:22:06.972336+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T15:22:06.973003+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T15:22:08.774851+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T15:22:08.776147+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:22:08.776180+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:08.776214+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:08.776574+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:08.782434+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:22:08.784100+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:22:08.784488+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:08.784560+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:08.784584+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:08.799097+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T15:22:08.799508+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:22:08.799540+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:08.799572+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:08.799934+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:08.805427+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:22:08.806986+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:22:08.807296+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:08.807364+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:08.807395+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:08.809764+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T15:22:08.811071+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T15:22:08.811692+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T15:22:08.812247+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T15:22:08.812736+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T15:22:17.309036+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T15:22:17.313763+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:22:17.313798+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:17.313831+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:17.314308+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:17.318105+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:22:17.320376+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:22:17.320845+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:17.320942+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:17.320967+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:17.342134+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T15:22:17.342547+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:22:17.342588+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:17.342622+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:17.342988+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:17.348171+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:22:17.349681+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:22:17.349979+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:17.350047+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:17.350071+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:22:17.438445+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T15:22:17.446706+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T15:22:17.447335+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T15:22:17.447887+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T15:22:17.448433+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T15:23:12.820158+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T15:23:12.821191+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:23:12.821235+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:12.821276+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:12.821847+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:12.822544+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:23:12.823965+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:23:12.824327+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:12.824401+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:12.824425+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:12.842745+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T15:23:12.843630+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:23:12.843664+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:12.843698+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:12.844067+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:12.849573+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:23:12.851298+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:23:12.851678+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:12.851750+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:12.851775+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:12.861004+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T15:23:12.873067+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T15:23:12.873791+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T15:23:12.874379+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T15:23:12.874980+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T15:23:13.895583+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T15:23:13.896450+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:23:13.896485+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:13.896518+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:13.896872+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:13.902661+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:23:13.904251+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:23:13.904594+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:13.904697+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:13.904730+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:13.918739+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T15:23:13.919619+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:23:13.919652+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:13.919685+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:13.920055+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:13.925837+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:23:13.927342+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:23:13.927649+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:13.927711+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:13.927734+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:13.931066+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T15:23:13.932461+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T15:23:13.933186+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T15:23:13.933949+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T15:23:13.934663+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T15:23:20.144440+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T15:23:20.152067+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:23:20.152109+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:20.152146+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:20.152661+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:20.156614+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:23:20.158451+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:23:20.158767+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:20.158846+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:20.158870+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:20.181177+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T15:23:20.181591+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:23:20.181623+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:20.181656+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:20.182005+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:20.187423+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:23:20.189012+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:23:20.189362+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:20.189430+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:20.189453+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:20.276301+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T15:23:20.284927+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T15:23:20.285755+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T15:23:20.286404+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T15:23:20.287057+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T15:23:21.329694+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T15:23:21.330127+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:23:21.330161+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:21.330194+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:21.330605+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:21.337986+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:23:21.339554+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:23:21.339904+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:21.339980+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:21.340004+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:21.352493+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T15:23:21.352906+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:23:21.352938+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:21.352971+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:21.353328+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:21.358814+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:23:21.360311+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:23:21.360587+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:21.360650+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:21.360674+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:23:21.362571+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T15:23:21.363866+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T15:23:21.364428+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T15:23:21.364979+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T15:23:21.365539+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T15:24:01.862272+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T15:24:01.863264+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:24:01.863299+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:01.863334+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:01.863869+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:01.864703+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:24:01.866537+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:24:01.867072+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:01.867151+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:01.867176+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:01.885403+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T15:24:01.886308+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:24:01.886342+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:01.886376+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:01.886769+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:01.892382+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:24:01.893958+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:24:01.894286+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:01.894353+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:01.894377+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:01.904663+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T15:24:01.916619+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T15:24:01.917377+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T15:24:01.917925+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T15:24:01.918575+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T15:24:03.050185+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T15:24:03.051523+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:24:03.051558+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:03.051592+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:03.051971+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:03.057782+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:24:03.059333+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:24:03.059681+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:03.059763+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:03.059787+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:03.075826+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T15:24:03.076254+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:24:03.076287+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:03.076319+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:03.076671+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:03.082002+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:24:03.083715+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:24:03.084095+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:03.084168+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:03.084192+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:03.086587+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T15:24:03.087994+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T15:24:03.088673+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T15:24:03.089280+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T15:24:03.089837+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T15:24:09.518792+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T15:24:09.523564+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:24:09.523601+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:09.523634+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:09.524117+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:09.527477+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:24:09.529081+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:24:09.529375+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:09.529472+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:09.529497+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:09.549770+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T15:24:09.550209+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T15:24:09.550242+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:09.550275+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:09.550673+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:09.556017+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T15:24:09.557569+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T15:24:09.557918+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:09.557983+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:09.558008+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T15:24:09.645332+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T15:24:09.653921+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T15:24:09.654695+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T15:24:09.655357+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T15:24:09.656005+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T16:17:15.718890+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T16:17:15.719603+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:17:15.719638+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:15.719684+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:15.720183+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:15.726574+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:17:15.728279+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:17:15.728637+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:15.728719+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:15.728744+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:15.741971+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T16:17:15.742376+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:17:15.742410+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:15.742442+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:15.742835+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:15.748079+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:17:15.749616+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:17:15.749921+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:15.749987+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:15.750011+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:15.752208+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:17:15.754071+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:17:15.754746+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T16:17:15.755444+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T16:17:15.756155+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T16:17:16.987076+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T16:17:16.987564+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:17:16.987600+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:16.987635+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:16.988020+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:16.993342+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:17:16.994974+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:17:16.995366+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:16.995434+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:16.995457+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:17.008580+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T16:17:17.009209+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:17:17.009250+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:17.009297+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:17.009712+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:17.014896+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:17:17.016381+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:17:17.016726+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:17.016792+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:17.016816+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:17.018801+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:17:17.020229+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:17:17.021030+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T16:17:17.021740+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T16:17:17.022372+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T16:17:35.979590+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/formateurs","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_formateurs_get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs/","method":"GET"} []
[2020-07-28T16:17:35.980238+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:17:35.980271+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:35.980304+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:35.980787+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:35.987480+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:17:35.989587+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:17:35.989930+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:35.990015+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:35.990040+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:36.004712+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:17:36.005143+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:17:36.005177+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:36.005209+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:36.005580+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:36.010894+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:17:36.012457+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:17:36.012761+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:36.012835+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:36.012860+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:17:36.021918+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:17:36.032897+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T16:17:36.033626+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [22] []
[2020-07-28T16:17:36.033970+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:17:36.034476+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [22] []
[2020-07-28T16:17:36.034809+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [25] []
[2020-07-28T16:17:36.035080+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [25] []
[2020-07-28T16:17:36.035445+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [25] []
[2020-07-28T16:17:36.035844+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [26] []
[2020-07-28T16:17:36.036113+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [26] []
[2020-07-28T16:17:36.036439+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [26] []
[2020-07-28T16:17:36.036975+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T16:19:09.312722+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/formateurs","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_formateurs_get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs/","method":"GET"} []
[2020-07-28T16:19:09.313705+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:19:09.313737+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:09.313771+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:09.314266+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:09.315001+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:19:09.316946+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:19:09.317472+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:09.317614+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:09.317638+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:09.335835+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:19:09.336710+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:19:09.336744+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:09.336778+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:09.337162+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:09.342884+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:19:09.344478+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:19:09.344833+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:09.344902+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:09.344932+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:09.354896+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:19:09.364621+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T16:19:09.365419+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [22] []
[2020-07-28T16:19:09.365880+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:19:09.367215+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [22] []
[2020-07-28T16:19:09.367766+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [25] []
[2020-07-28T16:19:09.368133+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [25] []
[2020-07-28T16:19:09.368545+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [25] []
[2020-07-28T16:19:09.368923+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [26] []
[2020-07-28T16:19:09.369256+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [26] []
[2020-07-28T16:19:09.369661+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [26] []
[2020-07-28T16:19:09.370317+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T16:19:10.413784+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/formateurs","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_formateurs_get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs/","method":"GET"} []
[2020-07-28T16:19:10.414974+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:19:10.415030+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:10.415070+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:10.415516+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:10.423034+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:19:10.424930+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:19:10.425317+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:10.425397+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:10.425421+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:10.439559+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:19:10.440427+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:19:10.440461+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:10.440494+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:10.440852+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:10.446423+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:19:10.448105+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:19:10.448517+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:10.448600+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:10.448625+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:10.452268+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:19:10.453553+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T16:19:10.454192+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [22] []
[2020-07-28T16:19:10.454524+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:19:10.455071+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [22] []
[2020-07-28T16:19:10.455409+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [25] []
[2020-07-28T16:19:10.455639+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [25] []
[2020-07-28T16:19:10.455988+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [25] []
[2020-07-28T16:19:10.456357+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [26] []
[2020-07-28T16:19:10.456692+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [26] []
[2020-07-28T16:19:10.457094+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [26] []
[2020-07-28T16:19:10.457610+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T16:19:11.478052+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/formateurs","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_formateurs_get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs/","method":"GET"} []
[2020-07-28T16:19:11.479558+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:19:11.479594+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:11.479627+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:11.480104+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:11.487279+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:19:11.489131+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:19:11.489623+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:11.489714+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:11.489740+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:11.505077+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:19:11.505504+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:19:11.505537+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:11.505570+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:11.505932+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:11.511237+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:19:11.512809+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:19:11.513152+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:11.513217+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:11.513241+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:11.515775+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:19:11.517418+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T16:19:11.518109+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [22] []
[2020-07-28T16:19:11.518476+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:19:11.519031+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [22] []
[2020-07-28T16:19:11.519420+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [25] []
[2020-07-28T16:19:11.519717+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [25] []
[2020-07-28T16:19:11.520034+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [25] []
[2020-07-28T16:19:11.520375+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [26] []
[2020-07-28T16:19:11.520711+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [26] []
[2020-07-28T16:19:11.521088+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [26] []
[2020-07-28T16:19:11.521620+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T16:19:23.873265+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T16:19:23.873949+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:19:23.873982+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:23.874015+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:23.874522+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:23.880665+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:19:23.883079+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:19:23.883717+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:23.883812+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:23.883837+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:23.902933+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T16:19:23.903347+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:19:23.903379+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:23.903412+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:23.903782+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:23.909015+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:19:23.910584+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:19:23.910943+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:23.911008+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:23.911032+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:23.921464+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:19:23.933208+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:19:23.933999+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T16:19:23.934731+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T16:19:23.935392+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T16:19:25.441001+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T16:19:25.441587+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:19:25.441634+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:25.441691+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:25.442310+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:25.448098+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:19:25.449978+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:19:25.450466+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:25.450544+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:25.450570+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:25.463015+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T16:19:25.463466+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:19:25.463503+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:25.463549+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:25.463969+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:25.469781+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:19:25.471627+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:19:25.472301+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:25.472386+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:25.472414+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:19:25.474335+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:19:25.475613+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:19:25.476162+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T16:19:25.476673+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T16:19:25.477120+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T16:22:49.919583+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T16:22:49.920587+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:22:49.920626+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:22:49.920674+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:22:49.920972+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:22:49.921156+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:22:54.121433+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-07-28T16:22:54.129715+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:22:54.263695+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:22:54.264197+00:00] security.INFO: User has been authenticated successfully. {"username":"michelle muller"} []
[2020-07-28T16:23:20.594850+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T16:23:20.595937+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:23:20.595972+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:20.596005+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:20.596456+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:20.602649+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:23:20.604485+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:23:20.604894+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:20.604984+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:20.605010+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:20.621191+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T16:23:20.621633+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:23:20.621667+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:20.621700+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:20.622063+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:20.627893+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:23:20.629404+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:23:20.629717+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:20.629778+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:20.629801+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:20.639702+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:23:20.652524+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [1] []
[2020-07-28T16:23:20.653025+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [1] []
[2020-07-28T16:23:20.653633+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Serializer\Exception\UnexpectedValueException: "Unexpected non-iterable value for to-many relation." at /opt/lampp/htdocs/file_rouge_gp1/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php line 534 {"exception":"[object] (Symfony\\Component\\Serializer\\Exception\\UnexpectedValueException(code: 0): Unexpected non-iterable value for to-many relation. at /opt/lampp/htdocs/file_rouge_gp1/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php:534)"} []
[2020-07-28T16:23:50.569641+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T16:23:50.570744+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:23:50.570783+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:50.570821+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:50.571404+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:50.572300+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:23:50.573639+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:23:50.573978+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:50.574049+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:50.574073+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:50.591543+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T16:23:50.592419+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:23:50.592453+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:50.592486+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:50.592858+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:50.598363+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:23:50.599858+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:23:50.600141+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:50.600203+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:50.600226+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:23:50.610324+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:23:50.622298+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:23:50.623249+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T16:23:50.623922+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T16:23:50.624510+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T16:25:46.242974+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T16:25:46.243948+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:25:46.243981+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:46.244016+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:46.244555+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:46.245203+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:25:46.246598+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:25:46.246964+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:46.247037+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:46.247061+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:46.271108+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T16:25:46.271975+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:25:46.272008+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:46.272042+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:46.272401+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:46.278086+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:25:46.279671+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:25:46.280058+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:46.280127+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:46.280151+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:46.289898+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:25:46.301591+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:25:46.302417+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T16:25:46.303090+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T16:25:46.303757+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T16:25:47.546711+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T16:25:47.547589+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:25:47.547623+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:47.547662+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:47.548013+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:47.554200+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:25:47.555802+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:25:47.556157+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:47.556224+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:47.556249+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:47.571391+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T16:25:47.572261+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:25:47.572295+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:47.572327+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:47.572725+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:47.578233+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:25:47.579726+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:25:47.580024+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:47.580087+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:47.580110+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:47.583681+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:25:47.585384+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:25:47.586059+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T16:25:47.586606+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T16:25:47.587172+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T16:25:48.792277+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T16:25:48.793800+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:25:48.793841+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:48.793875+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:48.794368+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:48.801489+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:25:48.803360+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:25:48.803742+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:48.803829+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:48.803854+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:48.819994+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T16:25:48.820451+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:25:48.820483+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:48.820517+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:48.820921+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:48.826350+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:25:48.827966+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:25:48.828328+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:48.828404+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:48.828429+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:25:48.830807+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:25:48.832238+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:25:48.832943+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T16:25:48.833636+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T16:25:48.834420+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T16:26:08.512560+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T16:26:08.517629+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:26:08.517670+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:08.517706+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:08.518195+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:08.521702+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:26:08.523463+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:26:08.523866+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:08.523958+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:08.523984+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:08.544694+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T16:26:08.545097+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:26:08.545129+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:08.545162+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:08.545526+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:08.551037+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:26:08.552652+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:26:08.553005+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:08.553072+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:08.553096+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:08.639021+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:26:08.647147+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [1] []
[2020-07-28T16:26:08.647701+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [2] []
[2020-07-28T16:26:08.648178+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [3] []
[2020-07-28T16:26:08.648588+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:26:08.649038+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [4] []
[2020-07-28T16:26:08.649490+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [5] []
[2020-07-28T16:26:08.649906+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [6] []
[2020-07-28T16:26:08.650238+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T16:26:08.650578+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [7] []
[2020-07-28T16:26:08.650992+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [8] []
[2020-07-28T16:26:08.651397+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [9] []
[2020-07-28T16:26:08.651766+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T16:26:08.652107+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [10] []
[2020-07-28T16:26:08.652667+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T16:26:31.231929+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T16:26:31.233041+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:26:31.233077+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:31.233145+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:31.233635+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:31.234289+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:26:31.235624+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:26:31.235973+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:31.236047+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:31.236071+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:31.253146+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T16:26:31.254032+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:26:31.254066+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:31.254099+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:31.254462+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:31.260050+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:26:31.261576+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:26:31.261927+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:31.261994+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:31.262018+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:31.271991+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:26:31.284023+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [1] []
[2020-07-28T16:26:31.284657+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [2] []
[2020-07-28T16:26:31.285144+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [3] []
[2020-07-28T16:26:31.285563+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:26:31.285977+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [4] []
[2020-07-28T16:26:31.286426+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [5] []
[2020-07-28T16:26:31.286838+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [6] []
[2020-07-28T16:26:31.287199+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T16:26:31.287575+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [7] []
[2020-07-28T16:26:31.287987+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [8] []
[2020-07-28T16:26:31.288393+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [9] []
[2020-07-28T16:26:31.288741+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T16:26:31.289079+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [10] []
[2020-07-28T16:26:31.289594+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T16:26:40.611268+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T16:26:40.617234+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:26:40.617275+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:40.617311+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:40.617805+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:40.621945+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:26:40.623735+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:26:40.624096+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:40.624217+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:40.624254+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:40.647352+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T16:26:40.647909+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:26:40.647955+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:40.647995+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:40.648416+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:40.653806+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:26:40.655358+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:26:40.655729+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:40.655797+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:40.655821+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:26:40.744135+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:26:40.753005+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:26:40.753782+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T16:26:40.754443+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T16:26:40.755125+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T16:27:05.237162+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T16:27:05.237715+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:27:05.237747+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:27:05.237780+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:27:05.238091+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:27:05.238286+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:27:22.642989+00:00] request.INFO: Matched route "app_user_adduser". {"route":"app_user_adduser","route_parameters":{"_route":"app_user_adduser","__controller":"App\\Controller\\UserController::addUser","__api_resource_class":"App\\Entity\\User","__api_collection_operation_name":"add_user","_controller":"App\\Controller\\UserController::addUser"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"POST"} []
[2020-07-28T16:27:22.643482+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:27:22.643514+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:27:22.643547+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:27:22.643982+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:27:22.650204+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:27:22.652006+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:27:22.652335+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:27:22.652421+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:27:22.652447+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:29:42.549241+00:00] request.INFO: Matched route "app_formateur_addformateur". {"route":"app_formateur_addformateur","route_parameters":{"_route":"app_formateur_addformateur","__controller":"App\\Controller\\FormateurController::addFormateur","__api_resource_class":"Formateur","__api_collection_operation_name":"add_formateur","_controller":"App\\Controller\\FormateurController::addFormateur"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"POST"} []
[2020-07-28T16:29:42.549831+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:29:42.549864+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:29:42.549897+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:29:42.550418+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:29:42.556313+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:29:42.558339+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:29:42.558903+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:29:42.558993+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:29:42.559027+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:29:42.560492+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:29:42.695726+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-28T16:29:42.696094+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"formator4","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"[resource(stream)]","4":"Formator","5":"formator","6":"ldab@gmail.com","7":"actif","8":2,"9":"formateur"} []
[2020-07-28T16:29:42.706513+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":42} []
[2020-07-28T16:29:42.706908+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-28T16:29:42.719978+00:00] php.CRITICAL: Uncaught Error: Return value of App\Entity\User::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\User::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/User.php:351)"} []
[2020-07-28T16:29:42.720238+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Return value of App\Entity\User::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned" at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/User.php line 351 {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\User::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/User.php:351)"} []
[2020-07-28T16:30:28.675567+00:00] request.INFO: Matched route "app_formateur_addformateur". {"route":"app_formateur_addformateur","route_parameters":{"_route":"app_formateur_addformateur","__controller":"App\\Controller\\FormateurController::addFormateur","__api_resource_class":"Formateur","__api_collection_operation_name":"add_formateur","_controller":"App\\Controller\\FormateurController::addFormateur"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"POST"} []
[2020-07-28T16:30:28.676534+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:30:28.676570+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:30:28.676609+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:30:28.677134+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:30:28.677855+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:30:28.679396+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:30:28.679741+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:30:28.679811+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:30:28.679835+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:30:28.681168+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:30:28.811969+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-28T16:30:28.812318+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"formator4","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"[resource(stream)]","4":"Formator","5":"formator","6":"ldab@gmail.com","7":"actif","8":2,"9":"formateur"} []
[2020-07-28T16:30:28.822996+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-07-28T16:30:28.828845+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\UniqueConstraintViolationException: "An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)' with params ["formator4", "$argon2id$v=19$m=65536,t=4,p=1$bzkbqaXewN1ECPm\/fxM84w$IrBG0OH7bj20RvjL+s176kPnCRi+\/faatI+JUkJF5TY", Resource id #1245, "Formator", "formator", "ldab@gmail.com", "actif", 2, "formateur"]:  SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'formator4' for key 'UNIQ_8D93D649F85E0677'" at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 55 {"exception":"[object] (Doctrine\\DBAL\\Exception\\UniqueConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)' with params [\"formator4\", \"$argon2id$v=19$m=65536,t=4,p=1$bzkbqaXewN1ECPm\\/fxM84w$IrBG0OH7bj20RvjL+s176kPnCRi+\\/faatI+JUkJF5TY\", Resource id #1245, \"Formator\", \"formator\", \"ldab@gmail.com\", \"actif\", 2, \"formateur\"]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'formator4' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:55)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'formator4' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'formator4' for key 'UNIQ_8D93D649F85E0677' at /opt/lampp/htdocs/file_rouge_gp1/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)"} []
[2020-07-28T16:31:05.616404+00:00] request.INFO: Matched route "app_formateur_addformateur". {"route":"app_formateur_addformateur","route_parameters":{"_route":"app_formateur_addformateur","__controller":"App\\Controller\\FormateurController::addFormateur","__api_resource_class":"Formateur","__api_collection_operation_name":"add_formateur","_controller":"App\\Controller\\FormateurController::addFormateur"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"POST"} []
[2020-07-28T16:31:05.617794+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:31:05.617827+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:31:05.617860+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:31:05.618345+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:31:05.625046+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:31:05.626768+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:31:05.627076+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:31:05.627156+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:31:05.627181+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:31:05.629037+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:31:05.763163+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-28T16:31:05.763439+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"formator5","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"[resource(stream)]","4":"Formator","5":"formator","6":"ldab@gmail.com","7":"actif","8":2,"9":"formateur"} []
[2020-07-28T16:31:05.773622+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":44} []
[2020-07-28T16:31:05.780742+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-28T16:31:05.794351+00:00] php.CRITICAL: Uncaught Error: Return value of App\Entity\User::getGroupecompetence() must implement interface Doctrine\Common\Collections\Collection, null returned {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\User::getGroupecompetence() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/User.php:382)"} []
[2020-07-28T16:31:05.794805+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Return value of App\Entity\User::getGroupecompetence() must implement interface Doctrine\Common\Collections\Collection, null returned" at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/User.php line 382 {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\User::getGroupecompetence() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/User.php:382)"} []
[2020-07-28T16:37:49.593913+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/users","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_users_get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users/","method":"GET"} []
[2020-07-28T16:37:49.595147+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:37:49.595182+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:37:49.595219+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:37:49.595730+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:37:49.596429+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:37:49.597868+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:37:49.598271+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:37:49.598346+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:37:49.598371+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:37:49.616672+00:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/users","method":"GET"} []
[2020-07-28T16:37:49.617544+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:37:49.617579+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:37:49.617612+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:37:49.617965+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:37:49.623969+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:37:49.625519+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:37:49.625865+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:37:49.625933+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:37:49.625958+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:37:49.635337+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:37:49.647615+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:37:49.648427+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-07-28T16:37:49.649098+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T16:37:49.649813+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ LEFT JOIN apprenant a1_ ON u0_.id = a1_.id LEFT JOIN formateur f2_ ON u0_.id = f2_.id [] []
[2020-07-28T16:38:01.224107+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:38:01.225600+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:38:01.225646+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:01.225690+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:01.226345+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:01.232771+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:38:01.234660+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:38:01.235005+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:01.235086+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:01.235111+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:01.252073+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:38:01.255299+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T16:38:02.676863+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:38:02.677525+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:38:02.677579+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:02.677629+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:02.678248+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:02.683945+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:38:02.685479+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:38:02.685759+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:02.685834+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:02.685858+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:02.688046+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:38:02.689697+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T16:38:34.104434+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:38:34.105411+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:38:34.105447+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:34.105489+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:34.105996+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:34.106693+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:38:34.107923+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:38:34.108230+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:34.108300+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:34.108329+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:34.114480+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:38:34.116691+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T16:38:35.174400+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:38:35.176220+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:38:35.176264+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:35.176313+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:35.176957+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:35.183241+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:38:35.184746+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:38:35.185069+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:35.185155+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:35.185192+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:35.189441+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:38:35.191253+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T16:38:36.017032+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:38:36.017692+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:38:36.017725+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:36.017758+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:36.018247+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:36.024970+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:38:36.026772+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:38:36.027155+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:36.027239+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:36.027265+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:36.030425+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:38:36.032003+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T16:38:36.724921+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:38:36.725346+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:38:36.725379+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:36.725412+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:36.725774+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:36.730865+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:38:36.732427+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:38:36.732798+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:36.732863+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:36.732887+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:36.735620+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:38:36.738749+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T16:38:37.372668+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:38:37.373172+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:38:37.373221+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:37.373254+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:37.373615+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:37.378677+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:38:37.380198+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:38:37.380544+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:37.380606+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:37.380630+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:37.382539+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:38:37.384089+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T16:38:58.937600+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:38:58.938610+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:38:58.938644+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:58.938681+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:58.939177+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:58.939860+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:38:58.941185+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:38:58.941542+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:58.941618+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:58.941642+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:38:58.948069+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:38:58.950299+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T16:39:09.815234+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:39:09.816173+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:39:09.816207+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:39:09.816241+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:39:09.816735+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:39:09.817466+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:39:09.819568+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:39:09.820059+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:39:09.820139+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:39:09.820164+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:39:09.824851+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:39:09.832042+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T16:39:09.832723+00:00] php.CRITICAL: Uncaught Error: Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:140)"} []
[2020-07-28T16:39:09.833076+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned" at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php line 140 {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:140)"} []
[2020-07-28T16:39:42.753827+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:39:42.754772+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:39:42.754806+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:39:42.754840+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:39:42.755319+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:39:42.755955+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:39:42.757224+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:39:42.757561+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:39:42.757630+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:39:42.757654+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:39:42.762226+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:39:42.769399+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T16:39:42.770054+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [22] []
[2020-07-28T16:39:42.770495+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:39:42.771676+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [22] []
[2020-07-28T16:39:42.772182+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [25] []
[2020-07-28T16:39:42.772551+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [25] []
[2020-07-28T16:39:42.772975+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [25] []
[2020-07-28T16:39:42.773376+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [26] []
[2020-07-28T16:39:42.773711+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [26] []
[2020-07-28T16:39:42.774108+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [26] []
[2020-07-28T16:39:42.774436+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [42] []
[2020-07-28T16:39:42.774733+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [42] []
[2020-07-28T16:39:42.775062+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [42] []
[2020-07-28T16:39:42.775370+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [44] []
[2020-07-28T16:39:42.775682+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [44] []
[2020-07-28T16:39:42.776070+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [44] []
[2020-07-28T16:39:42.776675+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id [] []
[2020-07-28T16:40:11.767899+00:00] request.INFO: Matched route "app_formateur_addformateur". {"route":"app_formateur_addformateur","route_parameters":{"_route":"app_formateur_addformateur","__controller":"App\\Controller\\FormateurController::addFormateur","__api_resource_class":"Formateur","__api_collection_operation_name":"add_formateur","_controller":"App\\Controller\\FormateurController::addFormateur"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"POST"} []
[2020-07-28T16:40:11.769325+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:40:11.769361+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:40:11.769396+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:40:11.769897+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:40:11.776332+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:40:11.778134+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:40:11.778482+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:40:11.778592+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:40:11.778617+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:40:11.780610+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-07-28T16:40:11.915756+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-28T16:40:11.916125+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"formator6","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"[resource(stream)]","4":"Formator","5":"formator","6":"ldab@gmail.com","7":"actif","8":2,"9":"formateur"} []
[2020-07-28T16:40:11.926270+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":45} []
[2020-07-28T16:40:11.926474+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-28T16:40:11.932671+00:00] php.CRITICAL: Uncaught Error: Return value of App\Entity\User::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\User::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/User.php:322)"} []
[2020-07-28T16:40:11.933175+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Return value of App\Entity\User::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned" at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/User.php line 322 {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\User::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/User.php:322)"} []
[2020-07-28T16:42:39.825075+00:00] request.INFO: Matched route "app_apprenant_addapprenant". {"route":"app_apprenant_addapprenant","route_parameters":{"_route":"app_apprenant_addapprenant","__controller":"App\\Controller\\ApprenantController::addApprenant","__api_resource_class":"Apprenant","__api_collection_operation_name":"add_apprenant","_controller":"App\\Controller\\ApprenantController::addApprenant"},"request_uri":"http://127.0.0.1:8000/api/admin/apprenants","method":"POST"} []
[2020-07-28T16:42:39.826320+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:42:39.826377+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:42:39.826439+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:42:39.827120+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:42:39.827868+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:42:39.829301+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:42:39.829737+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:42:39.829817+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:42:39.829843+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:42:39.831277+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T16:42:39.962265+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-28T16:42:39.962592+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"apprenant1","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"[resource(stream)]","4":"Apprenant","5":"apprenant","6":"ldab@gmail.com","7":"actif","8":4,"9":"apprenant"} []
[2020-07-28T16:42:39.973185+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":46,"2":null} []
[2020-07-28T16:42:39.973465+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-28T16:42:39.981556+00:00] request.CRITICAL: Uncaught PHP Exception ApiPlatform\Core\Exception\InvalidArgumentException: "Unable to generate an IRI for "App\Entity\Apprenant"." at /opt/lampp/htdocs/file_rouge_gp1/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php line 155 {"exception":"[object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): Unable to generate an IRI for \"App\\Entity\\Apprenant\". at /opt/lampp/htdocs/file_rouge_gp1/vendor/api-platform/core/src/Bridge/Symfony/Routing/IriConverter.php:155)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\InvalidParameterException(code: 0): Parameter \"id\" for route \"api_apprenants_get_item\" must match \"[^/]++\" (\"\" given) to generate a corresponding URL. at /opt/lampp/htdocs/file_rouge_gp1/vendor/symfony/routing/Generator/UrlGenerator.php:193)"} []
[2020-07-28T16:44:44.926900+00:00] request.INFO: Matched route "app_apprenant_addapprenant". {"route":"app_apprenant_addapprenant","route_parameters":{"_route":"app_apprenant_addapprenant","__controller":"App\\Controller\\ApprenantController::addApprenant","__api_resource_class":"Apprenant","__api_collection_operation_name":"add_apprenant","_controller":"App\\Controller\\ApprenantController::addApprenant"},"request_uri":"http://127.0.0.1:8000/api/admin/apprenants","method":"POST"} []
[2020-07-28T16:44:44.927780+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:44:44.927815+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:44:44.927851+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:44:44.928313+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:44:44.928934+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:44:44.930260+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:44:44.930590+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:44:44.930661+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:44:44.930690+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:44:44.931966+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T16:44:45.062944+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-07-28T16:44:45.063318+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"apprenant2","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"[resource(stream)]","4":"Apprenant","5":"apprenant","6":"ldab@gmail.com","7":"actif","8":4,"9":"apprenant"} []
[2020-07-28T16:44:45.073606+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":47,"2":null} []
[2020-07-28T16:44:45.073905+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-07-28T16:44:45.082130+00:00] php.CRITICAL: Uncaught Error: Return value of App\Entity\User::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\User::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/User.php:322)"} []
[2020-07-28T16:44:45.082475+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Return value of App\Entity\User::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned" at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/User.php line 322 {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\User::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/User.php:322)"} []
[2020-07-28T16:47:13.397627+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:47:13.399461+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:47:13.399516+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:13.399568+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:13.400205+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:13.406676+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:47:13.408362+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:47:13.408736+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:13.408835+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:13.408860+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:13.421735+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:47:13.433381+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T16:47:13.434020+00:00] php.CRITICAL: Uncaught Error: Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:140)"} []
[2020-07-28T16:47:13.434418+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned" at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php line 140 {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:140)"} []
[2020-07-28T16:47:20.051114+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:47:20.052133+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:47:20.052177+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:20.052223+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:20.052986+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:20.059188+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:47:20.060922+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:47:20.061299+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:20.061386+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:20.061413+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:20.063829+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:47:20.066220+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T16:47:20.066838+00:00] php.CRITICAL: Uncaught Error: Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:140)"} []
[2020-07-28T16:47:20.067082+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned" at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php line 140 {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:140)"} []
[2020-07-28T16:47:21.022288+00:00] request.INFO: Matched route "api_formateurs_get_collection". {"route":"api_formateurs_get_collection","route_parameters":{"_route":"api_formateurs_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Formateur","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/formateurs","method":"GET"} []
[2020-07-28T16:47:21.022717+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:47:21.022751+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:21.022783+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:21.023137+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:21.028591+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:47:21.030226+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:47:21.030596+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:21.030662+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:21.030685+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:21.032603+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9 FROM formateur f1_ INNER JOIN user u0_ ON f1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:47:21.034355+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN formateur_groupe ON t0.id = formateur_groupe.groupe_id WHERE formateur_groupe.formateur_id = ? [22] []
[2020-07-28T16:47:21.034845+00:00] php.CRITICAL: Uncaught Error: Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:140)"} []
[2020-07-28T16:47:21.035037+00:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Return value of App\Entity\Formateur::getPromo() must implement interface Doctrine\Common\Collections\Collection, null returned" at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php line 140 {"exception":"[object] (TypeError(code: 0): Return value of App\\Entity\\Formateur::getPromo() must implement interface Doctrine\\Common\\Collections\\Collection, null returned at /opt/lampp/htdocs/file_rouge_gp1/src/Entity/Formateur.php:140)"} []
[2020-07-28T16:47:30.299293+00:00] request.INFO: Matched route "api_apprenants_get_collection". {"route":"api_apprenants_get_collection","route_parameters":{"_route":"api_apprenants_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/apprenants","method":"GET"} []
[2020-07-28T16:47:30.299976+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-07-28T16:47:30.300010+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:30.300044+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:30.300538+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:30.306471+00:00] doctrine.DEBUG: SELECT t0.id AS id_3, t0.username AS username_4, t0.password AS password_5, t0.avatar AS avatar_6, t0.prenom AS prenom_7, t0.nom AS nom_8, t0.email AS email_9, t0.statut AS statut_10, t0.profil_id AS profil_id_11, t0.type, t1.profilsortie_id AS profilsortie_id_12 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id WHERE t0.username = ? LIMIT 1 ["michelle muller"] []
[2020-07-28T16:47:30.308278+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [1] []
[2020-07-28T16:47:30.308715+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"michelle muller\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:30.308800+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:30.308825+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-07-28T16:47:30.319176+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.type AS type_8, u0_.profil_id AS profil_id_9, a1_.profilsortie_id AS profilsortie_id_10 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id ORDER BY u0_.id ASC LIMIT 10 [] []
[2020-07-28T16:47:30.330899+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN apprenant_groupe ON t0.id = apprenant_groupe.groupe_id WHERE apprenant_groupe.apprenant_id = ? [27] []
[2020-07-28T16:47:30.331525+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-07-28T16:47:30.332383+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [27] []
[2020-07-28T16:47:30.332816+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [27] []
[2020-07-28T16:47:30.333232+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN apprenant_groupe ON t0.id = apprenant_groupe.groupe_id WHERE apprenant_groupe.apprenant_id = ? [32] []
[2020-07-28T16:47:30.333627+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [32] []
[2020-07-28T16:47:30.333957+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [32] []
[2020-07-28T16:47:30.334369+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN apprenant_groupe ON t0.id = apprenant_groupe.groupe_id WHERE apprenant_groupe.apprenant_id = ? [46] []
[2020-07-28T16:47:30.334772+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [46] []
[2020-07-28T16:47:30.335096+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [46] []
[2020-07-28T16:47:30.335437+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN apprenant_groupe ON t0.id = apprenant_groupe.groupe_id WHERE apprenant_groupe.apprenant_id = ? [47] []
[2020-07-28T16:47:30.335811+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [47] []
[2020-07-28T16:47:30.336094+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [47] []
[2020-07-28T16:47:30.336627+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id [] []
