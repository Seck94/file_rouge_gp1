[2020-08-06T19:04:48.204473+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-08-06T19:04:48.220081+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-06T19:04:48.220143+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:04:48.220175+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:04:48.225144+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-06T19:05:05.606699+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"GET"} []
[2020-08-06T19:05:05.633574+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["patrick le pinto"] []
[2020-08-06T19:05:05.784862+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-08-06T19:05:05.786254+02:00] security.INFO: User has been authenticated successfully. {"username":"patrick le pinto"} []
[2020-08-06T19:05:24.286635+02:00] request.INFO: Matched route "app_groupecompetence_showgroupecompetence". {"route":"app_groupecompetence_showgroupecompetence","route_parameters":{"_route":"app_groupecompetence_showgroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"show_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences","method":"GET"} []
[2020-08-06T19:05:24.287536+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-06T19:05:24.287594+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:05:24.287649+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:05:24.291801+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:05:24.305057+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["patrick le pinto"] []
[2020-08-06T19:05:24.309352+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-08-06T19:05:24.310122+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"patrick le pinto\", authenticated=true, roles=\"ROLE_CM\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:05:24.310232+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:05:24.310262+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:05:24.314113+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 [] []
[2020-08-06T19:05:24.314916+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.id = ? [12] []
[2020-08-06T19:05:24.326859+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 INNER JOIN groupecompetence_competence ON t0.id = groupecompetence_competence.competence_id WHERE groupecompetence_competence.groupecompetence_id = ? [1] []
[2020-08-06T19:05:24.332217+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-06T19:05:24.334388+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [2] []
[2020-08-06T19:05:24.335455+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [3] []
[2020-08-06T19:05:35.674133+02:00] request.INFO: Matched route "api_competences_show_groupecompetence_collection". {"route":"api_competences_show_groupecompetence_collection","route_parameters":{"_route":"api_competences_show_groupecompetence_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Competence","_api_collection_operation_name":"show_groupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"GET"} []
[2020-08-06T19:05:35.675099+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-06T19:05:35.675155+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:05:35.675212+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:05:35.675963+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:05:35.682723+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["patrick le pinto"] []
[2020-08-06T19:05:35.685403+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-08-06T19:05:35.685852+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"patrick le pinto\", authenticated=true, roles=\"ROLE_CM\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:05:35.685945+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:05:35.685972+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:05:35.744833+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id ORDER BY c0_.id ASC LIMIT 10 [] []
[2020-08-06T19:05:35.748548+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.libelle AS libelle_1, n1_.id AS id_2, n1_.libelle AS libelle_3, n1_.critere_evaluation AS critere_evaluation_4, n1_.groupe_action AS groupe_action_5, n1_.competence_id AS competence_id_6 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3]] []
[2020-08-06T19:05:35.755158+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id [] []
[2020-08-06T19:05:52.510807+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /api/admin/tags"" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /api/admin/tags\" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/admin/tags/\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-06T19:15:03.873176+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-08-06T19:15:03.874149+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-06T19:15:03.874191+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:15:03.874220+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:15:03.874489+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-06T19:15:15.836131+02:00] request.INFO: Matched route "api_tags_show_tags_collection". {"route":"api_tags_show_tags_collection","route_parameters":{"_route":"api_tags_show_tags_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_collection_operation_name":"show_tags"},"request_uri":"http://127.0.0.1:8000/api/admin/tags","method":"GET"} []
[2020-08-06T19:15:15.838331+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-06T19:15:15.838405+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:15:15.838467+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:15:15.839244+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:15:15.850527+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["patrick le pinto"] []
[2020-08-06T19:15:15.854204+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-08-06T19:15:15.854684+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"patrick le pinto\", authenticated=true, roles=\"ROLE_CM\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:15:15.854808+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:15:15.854848+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:15:15.872578+02:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ ORDER BY t0_.id ASC LIMIT 10 [] []
[2020-08-06T19:15:15.876235+02:00] doctrine.DEBUG: SELECT count(t0_.id) AS sclr_0 FROM tag t0_ [] []
[2020-08-06T19:17:10.255861+02:00] request.INFO: Matched route "api_tags_show_tags_collection". {"route":"api_tags_show_tags_collection","route_parameters":{"_route":"api_tags_show_tags_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_collection_operation_name":"show_tags"},"request_uri":"http://127.0.0.1:8000/api/admin/tags","method":"GET"} []
[2020-08-06T19:17:10.256929+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-06T19:17:10.256973+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:17:10.257026+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:17:10.257545+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:17:10.258245+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["patrick le pinto"] []
[2020-08-06T19:17:10.259613+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-08-06T19:17:10.259985+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"patrick le pinto\", authenticated=true, roles=\"ROLE_CM\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:17:10.260062+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:17:10.260087+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:17:10.265844+02:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ ORDER BY t0_.id ASC LIMIT 10 [] []
[2020-08-06T19:17:10.267416+02:00] doctrine.DEBUG: SELECT count(t0_.id) AS sclr_0 FROM tag t0_ [] []
[2020-08-06T19:19:13.099909+02:00] request.INFO: Matched route "api_tags_show_tags_collection". {"route":"api_tags_show_tags_collection","route_parameters":{"_route":"api_tags_show_tags_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_collection_operation_name":"show_tags"},"request_uri":"http://127.0.0.1:8000/api/admin/tags","method":"GET"} []
[2020-08-06T19:19:13.102092+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-06T19:19:13.102160+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:19:13.102218+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:19:13.102951+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:19:13.114829+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["patrick le pinto"] []
[2020-08-06T19:19:13.117527+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-08-06T19:19:13.118015+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"patrick le pinto\", authenticated=true, roles=\"ROLE_CM\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:19:13.118113+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:19:13.118154+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T19:19:13.242780+02:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ ORDER BY t0_.id ASC LIMIT 10 [] []
[2020-08-06T19:19:13.245431+02:00] doctrine.DEBUG: SELECT count(t0_.id) AS sclr_0 FROM tag t0_ [] []
[2020-08-06T20:38:16.378087+02:00] console.ERROR: Error thrown while running command "'make:migrations'". Message: "Command "make:migrations" is not defined.  Did you mean one of these?     doctrine:migrations:current     doctrine:migrations:diff     doctrine:migrations:dump-schema     doctrine:migrations:execute     doctrine:migrations:generate     doctrine:migrations:latest     doctrine:migrations:list     doctrine:migrations:migrate     doctrine:migrations:rollup     doctrine:migrations:status     doctrine:migrations:sync-metadata-storage     doctrine:migrations:up-to-date     doctrine:migrations:version     make:auth     make:command     make:controller     make:crud     make:docker:database     make:entity     make:fixtures     make:form     make:functional-test     make:message     make:messenger-middleware     make:migration     make:registration-form     make:reset-password     make:serializer:encoder     make:serializer:normalizer     make:subscriber     make:twig-extension     make:unit-test     make:user     make:validator     make:voter" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"make:migrations\" is not defined.\n\nDid you mean one of these?\n    doctrine:migrations:current\n    doctrine:migrations:diff\n    doctrine:migrations:dump-schema\n    doctrine:migrations:execute\n    doctrine:migrations:generate\n    doctrine:migrations:latest\n    doctrine:migrations:list\n    doctrine:migrations:migrate\n    doctrine:migrations:rollup\n    doctrine:migrations:status\n    doctrine:migrations:sync-metadata-storage\n    doctrine:migrations:up-to-date\n    doctrine:migrations:version\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:docker:database\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:message\n    make:messenger-middleware\n    make:migration\n    make:registration-form\n    make:reset-password\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/console/Application.php:644)","command":"'make:migrations'","message":"Command \"make:migrations\" is not defined.\n\nDid you mean one of these?\n    doctrine:migrations:current\n    doctrine:migrations:diff\n    doctrine:migrations:dump-schema\n    doctrine:migrations:execute\n    doctrine:migrations:generate\n    doctrine:migrations:latest\n    doctrine:migrations:list\n    doctrine:migrations:migrate\n    doctrine:migrations:rollup\n    doctrine:migrations:status\n    doctrine:migrations:sync-metadata-storage\n    doctrine:migrations:up-to-date\n    doctrine:migrations:version\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:docker:database\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:message\n    make:messenger-middleware\n    make:migration\n    make:registration-form\n    make:reset-password\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter"} []
[2020-08-06T20:38:17.685428+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-06T20:38:17.687453+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-06T20:38:17.688949+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-06T20:38:31.568695+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-06T20:38:31.575335+02:00] doctrine.DEBUG: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.583135+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-06T20:38:31.583548+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-06T20:38:31.584471+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-06T20:38:31.585382+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-06T20:38:31.585877+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-06T20:38:31.586135+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-06T20:38:31.586676+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-06T20:38:31.586994+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-06T20:38:31.587164+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-06T20:38:31.587326+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-06T20:38:31.587841+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-06T20:38:31.588073+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-06T20:38:31.588300+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-06T20:38:31.588514+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-06T20:38:31.588673+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-06T20:38:31.588814+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-06T20:38:31.588982+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-06T20:38:31.589463+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-06T20:38:31.589694+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-06T20:38:31.589899+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-06T20:38:31.590097+02:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-06T20:38:31.596405+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-06T20:38:31.618349+02:00] doctrine.DEBUG: CREATE TABLE apprenant (id INT NOT NULL, profilsortie_id INT DEFAULT NULL, INDEX IDX_C4EB462EFE5BE99E (profilsortie_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.623646+02:00] doctrine.DEBUG: CREATE TABLE apprenant_groupe (apprenant_id INT NOT NULL, groupe_id INT NOT NULL, INDEX IDX_1D224F8DC5697D6D (apprenant_id), INDEX IDX_1D224F8D7A45358C (groupe_id), PRIMARY KEY(apprenant_id, groupe_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.630108+02:00] doctrine.DEBUG: CREATE TABLE cm (id INT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.634580+02:00] doctrine.DEBUG: CREATE TABLE competence (id INT AUTO_INCREMENT NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.638819+02:00] doctrine.DEBUG: CREATE TABLE formateur (id INT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.643520+02:00] doctrine.DEBUG: CREATE TABLE formateur_groupe (formateur_id INT NOT NULL, groupe_id INT NOT NULL, INDEX IDX_2C668E09155D8F51 (formateur_id), INDEX IDX_2C668E097A45358C (groupe_id), PRIMARY KEY(formateur_id, groupe_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.648793+02:00] doctrine.DEBUG: CREATE TABLE groupe (id INT AUTO_INCREMENT NOT NULL, promo_id INT NOT NULL, nom VARCHAR(255) NOT NULL, date_creation DATE NOT NULL, statut VARCHAR(255) DEFAULT NULL, type VARCHAR(255) DEFAULT NULL, INDEX IDX_4B98C21D0C07AFF (promo_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.654020+02:00] doctrine.DEBUG: CREATE TABLE groupecompetence (id INT AUTO_INCREMENT NOT NULL, user_id INT NOT NULL, libelle VARCHAR(255) NOT NULL, descriptif VARCHAR(255) NOT NULL, INDEX IDX_89DC1A55A76ED395 (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.658787+02:00] doctrine.DEBUG: CREATE TABLE groupecompetence_competence (groupecompetence_id INT NOT NULL, competence_id INT NOT NULL, INDEX IDX_70BDD49C337E4DC6 (groupecompetence_id), INDEX IDX_70BDD49C15761DAB (competence_id), PRIMARY KEY(groupecompetence_id, competence_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.664383+02:00] doctrine.DEBUG: CREATE TABLE groupetag (id INT AUTO_INCREMENT NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.668636+02:00] doctrine.DEBUG: CREATE TABLE groupetag_tag (groupetag_id INT NOT NULL, tag_id INT NOT NULL, INDEX IDX_905A3638654741DD (groupetag_id), INDEX IDX_905A3638BAD26311 (tag_id), PRIMARY KEY(groupetag_id, tag_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.674539+02:00] doctrine.DEBUG: CREATE TABLE niveau (id INT AUTO_INCREMENT NOT NULL, competence_id INT DEFAULT NULL, libelle VARCHAR(255) NOT NULL, critere_evaluation VARCHAR(255) NOT NULL, groupe_action VARCHAR(255) NOT NULL, INDEX IDX_4BDFF36B15761DAB (competence_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.679266+02:00] doctrine.DEBUG: CREATE TABLE profil (id INT AUTO_INCREMENT NOT NULL, libelle VARCHAR(255) NOT NULL, last_update DATETIME DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.683187+02:00] doctrine.DEBUG: CREATE TABLE profilsortie (id INT AUTO_INCREMENT NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.687018+02:00] doctrine.DEBUG: CREATE TABLE promo (id INT AUTO_INCREMENT NOT NULL, user_id INT DEFAULT NULL, referentiel_id INT NOT NULL, langue VARCHAR(255) NOT NULL, titre VARCHAR(255) NOT NULL, description VARCHAR(255) NOT NULL, lieu VARCHAR(255) NOT NULL, reference_agate VARCHAR(255) NOT NULL, date_debut DATE NOT NULL, date_fin_provisoire DATE NOT NULL, fabrique VARCHAR(255) NOT NULL, date_fin_reelle DATE DEFAULT NULL, etat VARCHAR(255) NOT NULL, INDEX IDX_B0139AFBA76ED395 (user_id), INDEX IDX_B0139AFB805DB139 (referentiel_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.693127+02:00] doctrine.DEBUG: CREATE TABLE referentiel (id INT AUTO_INCREMENT NOT NULL, libelle VARCHAR(255) NOT NULL, presentation VARCHAR(255) NOT NULL, programme VARCHAR(255) NOT NULL, critere_admission VARCHAR(255) NOT NULL, critere_evaluation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.697864+02:00] doctrine.DEBUG: CREATE TABLE referentiel_groupecompetence (referentiel_id INT NOT NULL, groupecompetence_id INT NOT NULL, INDEX IDX_32944F2A805DB139 (referentiel_id), INDEX IDX_32944F2A337E4DC6 (groupecompetence_id), PRIMARY KEY(referentiel_id, groupecompetence_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.703334+02:00] doctrine.DEBUG: CREATE TABLE tag (id INT AUTO_INCREMENT NOT NULL, libelle VARCHAR(255) NOT NULL, descriptif VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.707489+02:00] doctrine.DEBUG: CREATE TABLE user (id INT AUTO_INCREMENT NOT NULL, profil_id INT NOT NULL, username VARCHAR(180) NOT NULL, password VARCHAR(255) NOT NULL, avatar LONGBLOB DEFAULT NULL, prenom VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, statut VARCHAR(255) NOT NULL, last_login DATETIME DEFAULT NULL, type VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_8D93D649F85E0677 (username), INDEX IDX_8D93D649275ED078 (profil_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-06T20:38:31.713179+02:00] doctrine.DEBUG: ALTER TABLE apprenant ADD CONSTRAINT FK_C4EB462EFE5BE99E FOREIGN KEY (profilsortie_id) REFERENCES profilsortie (id) [] []
[2020-08-06T20:38:31.725179+02:00] doctrine.DEBUG: ALTER TABLE apprenant ADD CONSTRAINT FK_C4EB462EBF396750 FOREIGN KEY (id) REFERENCES user (id) ON DELETE CASCADE [] []
[2020-08-06T20:38:31.738263+02:00] doctrine.DEBUG: ALTER TABLE apprenant_groupe ADD CONSTRAINT FK_1D224F8DC5697D6D FOREIGN KEY (apprenant_id) REFERENCES apprenant (id) ON DELETE CASCADE [] []
[2020-08-06T20:38:31.752371+02:00] doctrine.DEBUG: ALTER TABLE apprenant_groupe ADD CONSTRAINT FK_1D224F8D7A45358C FOREIGN KEY (groupe_id) REFERENCES groupe (id) ON DELETE CASCADE [] []
[2020-08-06T20:38:31.766212+02:00] doctrine.DEBUG: ALTER TABLE cm ADD CONSTRAINT FK_3C0A377EBF396750 FOREIGN KEY (id) REFERENCES user (id) ON DELETE CASCADE [] []
[2020-08-06T20:38:31.778045+02:00] doctrine.DEBUG: ALTER TABLE formateur ADD CONSTRAINT FK_ED767E4FBF396750 FOREIGN KEY (id) REFERENCES user (id) ON DELETE CASCADE [] []
[2020-08-06T20:38:31.788951+02:00] doctrine.DEBUG: ALTER TABLE formateur_groupe ADD CONSTRAINT FK_2C668E09155D8F51 FOREIGN KEY (formateur_id) REFERENCES formateur (id) ON DELETE CASCADE [] []
[2020-08-06T20:38:31.802647+02:00] doctrine.DEBUG: ALTER TABLE formateur_groupe ADD CONSTRAINT FK_2C668E097A45358C FOREIGN KEY (groupe_id) REFERENCES groupe (id) ON DELETE CASCADE [] []
[2020-08-06T20:38:31.816134+02:00] doctrine.DEBUG: ALTER TABLE groupe ADD CONSTRAINT FK_4B98C21D0C07AFF FOREIGN KEY (promo_id) REFERENCES promo (id) [] []
[2020-08-06T20:38:31.828487+02:00] doctrine.DEBUG: ALTER TABLE groupecompetence ADD CONSTRAINT FK_89DC1A55A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) [] []
[2020-08-06T20:38:31.840824+02:00] doctrine.DEBUG: ALTER TABLE groupecompetence_competence ADD CONSTRAINT FK_70BDD49C337E4DC6 FOREIGN KEY (groupecompetence_id) REFERENCES groupecompetence (id) ON DELETE CASCADE [] []
[2020-08-06T20:38:31.854319+02:00] doctrine.DEBUG: ALTER TABLE groupecompetence_competence ADD CONSTRAINT FK_70BDD49C15761DAB FOREIGN KEY (competence_id) REFERENCES competence (id) ON DELETE CASCADE [] []
[2020-08-06T20:38:31.867748+02:00] doctrine.DEBUG: ALTER TABLE groupetag_tag ADD CONSTRAINT FK_905A3638654741DD FOREIGN KEY (groupetag_id) REFERENCES groupetag (id) ON DELETE CASCADE [] []
[2020-08-06T20:38:31.881357+02:00] doctrine.DEBUG: ALTER TABLE groupetag_tag ADD CONSTRAINT FK_905A3638BAD26311 FOREIGN KEY (tag_id) REFERENCES tag (id) ON DELETE CASCADE [] []
[2020-08-06T20:38:31.894846+02:00] doctrine.DEBUG: ALTER TABLE niveau ADD CONSTRAINT FK_4BDFF36B15761DAB FOREIGN KEY (competence_id) REFERENCES competence (id) [] []
[2020-08-06T20:38:31.907565+02:00] doctrine.DEBUG: ALTER TABLE promo ADD CONSTRAINT FK_B0139AFBA76ED395 FOREIGN KEY (user_id) REFERENCES user (id) [] []
[2020-08-06T20:38:31.926855+02:00] doctrine.DEBUG: ALTER TABLE promo ADD CONSTRAINT FK_B0139AFB805DB139 FOREIGN KEY (referentiel_id) REFERENCES referentiel (id) [] []
[2020-08-06T20:38:31.940435+02:00] doctrine.DEBUG: ALTER TABLE referentiel_groupecompetence ADD CONSTRAINT FK_32944F2A805DB139 FOREIGN KEY (referentiel_id) REFERENCES referentiel (id) ON DELETE CASCADE [] []
[2020-08-06T20:38:31.954212+02:00] doctrine.DEBUG: ALTER TABLE referentiel_groupecompetence ADD CONSTRAINT FK_32944F2A337E4DC6 FOREIGN KEY (groupecompetence_id) REFERENCES groupecompetence (id) ON DELETE CASCADE [] []
[2020-08-06T20:38:31.968272+02:00] doctrine.DEBUG: ALTER TABLE user ADD CONSTRAINT FK_8D93D649275ED078 FOREIGN KEY (profil_id) REFERENCES profil (id) [] []
[2020-08-06T20:38:31.983209+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-06T20:38:31.983786+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-06T20:38:31.984419+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-06T20:38:31.984701+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-06T20:38:31.984943+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-06T20:38:31.985248+02:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2020-08-06T20:38:31+02:00",386.0] []
[2020-08-06T20:38:31.986560+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-06T20:38:52.736963+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-06T20:38:52.768419+02:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-06T20:38:52.768877+02:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-06T20:38:52.769172+02:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-06T20:38:52.769523+02:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-06T20:38:52.769792+02:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-06T20:38:52.770015+02:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-06T20:38:52.770248+02:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-06T20:38:52.770474+02:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-06T20:38:52.770714+02:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-06T20:38:52.770999+02:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-06T20:38:52.771285+02:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-06T20:38:52.771553+02:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-06T20:38:52.771841+02:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-06T20:38:52.772132+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-06T20:38:52.772662+02:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-06T20:38:52.772965+02:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-06T20:38:52.773564+02:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-06T20:38:52.774037+02:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-06T20:38:52.774490+02:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-06T20:38:52.930973+02:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-06T20:38:52.932892+02:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"sabine pottier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Alain","5":"Pottier","6":"astrid28@yahoo.fr","7":"actif","8":null,"9":1,"10":"formateur"} []
[2020-08-06T20:38:52.933249+02:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":1} []
[2020-08-06T20:38:53.062670+02:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"luce gaudin","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Anastasie","5":"Richard","6":"thibault.delmas@maury.com","7":"actif","8":null,"9":1,"10":"formateur"} []
[2020-08-06T20:38:53.063086+02:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":2} []
[2020-08-06T20:38:53.208975+02:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"laure de chauvin","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Juliette","5":"Philippe","6":"josephine35@pascal.com","7":"actif","8":null,"9":1,"10":"formateur"} []
[2020-08-06T20:38:53.209416+02:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":3} []
[2020-08-06T20:38:53.336385+02:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-06T20:38:53.336890+02:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"isabelle girard","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Nath","5":"Seguin","6":"rbenard@dbmail.com","7":"actif","8":null,"9":2,"10":"cm"} []
[2020-08-06T20:38:53.338669+02:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":4} []
[2020-08-06T20:38:53.466392+02:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"théodore cousin","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Éric","5":"Bertin","6":"auguste53@aubert.fr","7":"actif","8":null,"9":2,"10":"cm"} []
[2020-08-06T20:38:53.466835+02:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":5} []
[2020-08-06T20:38:53.593065+02:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"bernard pierre","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Olivie","5":"Leveque","6":"thibaut.pottier@hotmail.fr","7":"actif","8":null,"9":2,"10":"cm"} []
[2020-08-06T20:38:53.593640+02:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":6} []
[2020-08-06T20:38:53.718851+02:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-06T20:38:53.719391+02:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"suzanne de delattre","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Denise","5":"Jacquet","6":"bernard.guy@pelletier.org","7":"actif","8":null,"9":3,"10":"apprenant"} []
[2020-08-06T20:38:53.719663+02:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":7,"2":null} []
[2020-08-06T20:38:53.845648+02:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"martin-marc becker","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Lucy","5":"Munoz","6":"lacroix.valerie@fontaine.fr","7":"actif","8":null,"9":3,"10":"apprenant"} []
[2020-08-06T20:38:53.846102+02:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":8,"2":null} []
[2020-08-06T20:38:53.971746+02:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"léon marty","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Pauline","5":"Prevost","6":"aurelie.adam@club-internet.fr","7":"actif","8":null,"9":3,"10":"apprenant"} []
[2020-08-06T20:38:53.972138+02:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":9,"2":null} []
[2020-08-06T20:38:54.098940+02:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-06T20:38:54.099372+02:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"nathalie michaud","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Joseph","5":"Tessier","6":"lebon.camille@legros.org","7":"actif","8":null,"9":4,"10":"user"} []
[2020-08-06T20:38:54.226955+02:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"laurent didier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Benjamin","5":"Leleu","6":"david21@dasilva.com","7":"actif","8":null,"9":4,"10":"user"} []
[2020-08-06T20:38:54.354312+02:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"david de lucas","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Lucie","5":"Rossi","6":"remy38@robert.com","7":"actif","8":null,"9":4,"10":"user"} []
[2020-08-06T20:38:54.355045+02:00] doctrine.DEBUG: INSERT INTO groupetag (libelle) VALUES (?) {"1":"FrontEnd"} []
[2020-08-06T20:38:54.355562+02:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-06T20:38:54.357289+02:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [1,1] []
[2020-08-06T20:38:54.358095+02:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-06T20:38:54.358352+02:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [1,2] []
[2020-08-06T20:38:54.360412+02:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-06T20:38:54.360676+02:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [1,3] []
[2020-08-06T20:38:54.361118+02:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-06T20:38:54.361416+02:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [1,4] []
[2020-08-06T20:38:54.361950+02:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-06T20:38:54.362253+02:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":1} []
[2020-08-06T20:38:54.363224+02:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":1} []
[2020-08-06T20:38:54.363609+02:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":1} []
[2020-08-06T20:38:54.363956+02:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-06T20:38:54.364121+02:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":2} []
[2020-08-06T20:38:54.366035+02:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":2} []
[2020-08-06T20:38:54.366438+02:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":2} []
[2020-08-06T20:38:54.366805+02:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-06T20:38:54.366968+02:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":3} []
[2020-08-06T20:38:54.367332+02:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":3} []
[2020-08-06T20:38:54.367698+02:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":3} []
[2020-08-06T20:38:54.368121+02:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":12} []
[2020-08-06T20:38:54.368330+02:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-06T20:38:54.368502+02:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [1,1] []
[2020-08-06T20:38:54.368655+02:00] doctrine.DEBUG: INSERT INTO groupecompetence_competence (groupecompetence_id, competence_id) VALUES (?, ?) [1,1] []
[2020-08-06T20:38:54.368779+02:00] doctrine.DEBUG: INSERT INTO groupecompetence_competence (groupecompetence_id, competence_id) VALUES (?, ?) [1,2] []
[2020-08-06T20:38:54.368904+02:00] doctrine.DEBUG: INSERT INTO groupecompetence_competence (groupecompetence_id, competence_id) VALUES (?, ?) [1,3] []
[2020-08-06T20:38:54.370722+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-06T23:33:23.319572+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"GET"} []
[2020-08-06T23:33:23.321165+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["patrick le pinto"] []
[2020-08-06T23:33:23.323536+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"patrick le pinto\" not found. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-08-06T23:34:08.088491+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"GET"} []
[2020-08-06T23:34:08.098182+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["suzanne de delattre"] []
[2020-08-06T23:34:08.237887+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-08-06T23:34:08.238408+02:00] security.INFO: User has been authenticated successfully. {"username":"suzanne de delattre"} []
[2020-08-06T23:34:37.952984+02:00] request.INFO: Matched route "app_groupecompetence_showgroupecompetence". {"route":"app_groupecompetence_showgroupecompetence","route_parameters":{"_route":"app_groupecompetence_showgroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"show_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences","method":"GET"} []
[2020-08-06T23:34:37.954296+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-06T23:34:37.954354+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:34:37.954400+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:34:37.955686+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:34:37.956290+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:34:44.808569+02:00] request.INFO: Matched route "app_groupecompetence_showgroupecompetence". {"route":"app_groupecompetence_showgroupecompetence","route_parameters":{"_route":"app_groupecompetence_showgroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"show_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences","method":"GET"} []
[2020-08-06T23:34:44.809526+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-06T23:34:44.809601+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:34:44.809668+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:34:44.810392+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:34:44.821615+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["suzanne de delattre"] []
[2020-08-06T23:34:44.825827+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-08-06T23:34:44.826409+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"suzanne de delattre\", authenticated=true, roles=\"ROLE_APPRENANT\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:34:44.826545+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:34:44.826588+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:34:44.829365+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 [] []
[2020-08-06T23:34:44.829944+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.id = ? [12] []
[2020-08-06T23:34:44.845352+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 INNER JOIN groupecompetence_competence ON t0.id = groupecompetence_competence.competence_id WHERE groupecompetence_competence.groupecompetence_id = ? [1] []
[2020-08-06T23:34:44.848507+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-06T23:34:44.851419+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [2] []
[2020-08-06T23:34:44.852485+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [3] []
[2020-08-06T23:37:13.222117+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: "No route found for "POST /api/admin/groupecompetences/1": Method Not Allowed (Allow: PUT, PATCH, GET, DELETE)" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException(code: 0): No route found for \"POST /api/admin/groupecompetences/1\": Method Not Allowed (Allow: PUT, PATCH, GET, DELETE) at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php:140)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\MethodNotAllowedException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:42)"} []
[2020-08-06T23:37:19.564352+02:00] request.INFO: Matched route "app_groupecompetence_addgroupecompetence". {"route":"app_groupecompetence_addgroupecompetence","route_parameters":{"_route":"app_groupecompetence_addgroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::addGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"add_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::addGroupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences","method":"POST"} []
[2020-08-06T23:37:19.565074+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-06T23:37:19.565135+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:37:19.565189+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:37:19.565827+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:37:19.576325+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["suzanne de delattre"] []
[2020-08-06T23:37:19.579876+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [3] []
[2020-08-06T23:37:19.580417+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"suzanne de delattre\", authenticated=true, roles=\"ROLE_APPRENANT\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:37:19.580523+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:37:19.580552+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:37:51.440201+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-06T23:37:51.449663+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-06T23:37:51.594442+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-06T23:37:51.594984+02:00] security.INFO: User has been authenticated successfully. {"username":"laurent didier"} []
[2020-08-06T23:38:08.154438+02:00] request.INFO: Matched route "app_groupecompetence_addgroupecompetence". {"route":"app_groupecompetence_addgroupecompetence","route_parameters":{"_route":"app_groupecompetence_addgroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::addGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"add_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::addGroupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences","method":"POST"} []
[2020-08-06T23:38:08.155268+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-06T23:38:08.155321+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:38:08.155376+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:38:08.156066+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:38:08.163979+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-06T23:38:08.167259+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-06T23:38:08.167790+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:38:08.167892+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:38:08.167921+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:38:08.175504+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-06T23:38:08.176245+02:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-06T23:38:08.176635+02:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances moyenne en J [...]"} []
[2020-08-06T23:38:08.176875+02:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Maitrise bootsrap"} []
[2020-08-06T23:38:08.179122+02:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper une application [...]","2":"Developper le frontend d'u [...]","3":11} []
[2020-08-06T23:38:08.182126+02:00] doctrine.DEBUG: INSERT INTO groupecompetence_competence (groupecompetence_id, competence_id) VALUES (?, ?) [2,4] []
[2020-08-06T23:38:08.182631+02:00] doctrine.DEBUG: INSERT INTO groupecompetence_competence (groupecompetence_id, competence_id) VALUES (?, ?) [2,5] []
[2020-08-06T23:38:08.182883+02:00] doctrine.DEBUG: INSERT INTO groupecompetence_competence (groupecompetence_id, competence_id) VALUES (?, ?) [2,6] []
[2020-08-06T23:38:08.184731+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-06T23:40:29.307460+02:00] request.INFO: Matched route "api_groupecompetences_get_item". {"route":"api_groupecompetences_get_item","route_parameters":{"_route":"api_groupecompetences_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Groupecompetence","_api_item_operation_name":"get","id":"2"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences/2","method":"GET"} []
[2020-08-06T23:40:29.308459+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-06T23:40:29.308534+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:40:29.308594+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:40:29.309374+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:40:29.318345+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-06T23:40:29.321538+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-06T23:40:29.322249+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:40:29.322408+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:40:29.322449+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:40:29.333590+02:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, g0_.descriptif AS descriptif_2, c1_.id AS id_3, c1_.libelle AS libelle_4, g0_.user_id AS user_id_5 FROM groupecompetence g0_ LEFT JOIN groupecompetence_competence g2_ ON g0_.id = g2_.groupecompetence_id LEFT JOIN competence c1_ ON c1_.id = g2_.competence_id WHERE g0_.id = ? [2] []
[2020-08-06T23:41:45.952542+02:00] request.INFO: Matched route "app_groupecompetence_updategroupecompetence". {"route":"app_groupecompetence_updategroupecompetence","route_parameters":{"_route":"app_groupecompetence_updategroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::updateGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"update_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::updateGroupecompetence","id":"2"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences/2","method":"PUT"} []
[2020-08-06T23:41:45.953197+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-06T23:41:45.953247+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:41:45.953295+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:41:45.953833+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:41:45.962512+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-06T23:41:45.965693+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-06T23:41:45.966368+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:41:45.966524+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:41:45.966565+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:41:45.969002+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.id = ? ["2"] []
[2020-08-06T23:41:45.969846+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? [3] []
[2020-08-06T23:41:45.970991+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 INNER JOIN groupecompetence_competence ON t0.id = groupecompetence_competence.competence_id WHERE groupecompetence_competence.groupecompetence_id = ? [2] []
[2020-08-06T23:41:45.972607+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-06T23:41:45.972834+02:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances en JAVA"} []
[2020-08-06T23:41:45.973160+02:00] doctrine.DEBUG: UPDATE competence SET libelle = ? WHERE id = ? ["Connaissances solide en PH [...]",3] []
[2020-08-06T23:41:45.974888+02:00] doctrine.DEBUG: INSERT INTO groupecompetence_competence (groupecompetence_id, competence_id) VALUES (?, ?) [2,7] []
[2020-08-06T23:41:45.975191+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-06T23:41:45.977661+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [4] []
[2020-08-06T23:41:45.978322+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [5] []
[2020-08-06T23:41:45.978795+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [6] []
[2020-08-06T23:42:30.867099+02:00] request.INFO: Matched route "app_groupecompetence_updategroupecompetence". {"route":"app_groupecompetence_updategroupecompetence","route_parameters":{"_route":"app_groupecompetence_updategroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::updateGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"update_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::updateGroupecompetence","id":"2"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences/2","method":"PUT"} []
[2020-08-06T23:42:30.867822+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-06T23:42:30.867875+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:42:30.867918+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:42:30.868504+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:42:30.876199+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-06T23:42:30.880382+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-06T23:42:30.881084+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:42:30.881243+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:42:30.881289+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-06T23:42:30.883963+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.id = ? ["2"] []
[2020-08-06T23:42:30.884789+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? [7] []
[2020-08-06T23:42:30.886108+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 INNER JOIN groupecompetence_competence ON t0.id = groupecompetence_competence.competence_id WHERE groupecompetence_competence.groupecompetence_id = ? [2] []
[2020-08-06T23:42:30.888332+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-06T23:42:30.888668+02:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence WHERE groupecompetence_id = ? AND competence_id = ? [2,7] []
[2020-08-06T23:42:30.889109+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-06T23:42:30.891667+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [4] []
[2020-08-06T23:42:30.892355+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [5] []
[2020-08-06T23:42:30.892959+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [6] []
[2020-08-07T01:33:33.925448+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-07T01:33:33.927853+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T01:33:34.076480+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T01:33:34.077042+02:00] security.INFO: User has been authenticated successfully. {"username":"laurent didier"} []
[2020-08-07T01:34:29.507442+02:00] request.INFO: Matched route "app_competence_addcompetence". {"route":"app_competence_addcompetence","route_parameters":{"_route":"app_competence_addcompetence","__controller":"App\\Controller\\CompetenceController::addCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"add_competence","_controller":"App\\Controller\\CompetenceController::addCompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"POST"} []
[2020-08-07T01:34:29.509177+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T01:34:29.509246+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:34:29.509296+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:34:29.509907+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:34:29.518501+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T01:34:29.521899+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T01:34:29.522649+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:34:29.522868+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:34:29.522937+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:34:29.526312+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined variable: Competence_json" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php line 37 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined variable: Competence_json at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php:37)"} []
[2020-08-07T01:34:59.109054+02:00] request.INFO: Matched route "app_competence_addcompetence". {"route":"app_competence_addcompetence","route_parameters":{"_route":"app_competence_addcompetence","__controller":"App\\Controller\\CompetenceController::addCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"add_competence","_controller":"App\\Controller\\CompetenceController::addCompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"POST"} []
[2020-08-07T01:34:59.109706+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T01:34:59.109744+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:34:59.109781+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:34:59.110364+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:34:59.117771+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T01:34:59.120648+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T01:34:59.121164+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:34:59.121283+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:34:59.121321+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:38:42.937268+02:00] request.INFO: Matched route "app_competence_addcompetence". {"route":"app_competence_addcompetence","route_parameters":{"_route":"app_competence_addcompetence","__controller":"App\\Controller\\CompetenceController::addCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"add_competence","_controller":"App\\Controller\\CompetenceController::addCompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"POST"} []
[2020-08-07T01:38:42.937916+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T01:38:42.937963+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:38:42.938002+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:38:42.938599+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:38:42.946790+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T01:38:42.949881+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T01:38:42.950581+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:38:42.950719+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:38:42.950763+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:38:42.952049+02:00] php.CRITICAL: Uncaught Error: Class 'App\Controller\Niveau' not found {"exception":"[object] (Error(code: 0): Class 'App\\Controller\\Niveau' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php:43)"} []
[2020-08-07T01:38:43.002086+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load class "Niveau" from namespace "App\Controller". Did you forget a "use" statement for "App\Entity\Niveau"?" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php line 43 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load class \"Niveau\" from namespace \"App\\Controller\".\nDid you forget a \"use\" statement for \"App\\Entity\\Niveau\"? at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php:43)"} []
[2020-08-07T01:39:06.224955+02:00] request.INFO: Matched route "app_competence_addcompetence". {"route":"app_competence_addcompetence","route_parameters":{"_route":"app_competence_addcompetence","__controller":"App\\Controller\\CompetenceController::addCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"add_competence","_controller":"App\\Controller\\CompetenceController::addCompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"POST"} []
[2020-08-07T01:39:06.225948+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T01:39:06.226011+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:39:06.226068+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:39:06.226917+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:39:06.236665+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T01:39:06.239838+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T01:39:06.240888+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:39:06.241083+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:39:06.241121+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:39:06.242231+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Illegal string offset 'libelle'" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php line 46 {"exception":"[object] (ErrorException(code: 0): Warning: Illegal string offset 'libelle' at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php:46)"} []
[2020-08-07T01:41:04.661104+02:00] request.INFO: Matched route "app_competence_addcompetence". {"route":"app_competence_addcompetence","route_parameters":{"_route":"app_competence_addcompetence","__controller":"App\\Controller\\CompetenceController::addCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"add_competence","_controller":"App\\Controller\\CompetenceController::addCompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"POST"} []
[2020-08-07T01:41:04.662123+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T01:41:04.662188+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:41:04.662243+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:41:04.663112+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:41:04.673367+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T01:41:04.676706+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T01:41:04.677327+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:41:04.677473+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:41:04.677512+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:17.837722+02:00] request.INFO: Matched route "app_competence_addcompetence". {"route":"app_competence_addcompetence","route_parameters":{"_route":"app_competence_addcompetence","__controller":"App\\Controller\\CompetenceController::addCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"add_competence","_controller":"App\\Controller\\CompetenceController::addCompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"POST"} []
[2020-08-07T01:43:17.838501+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T01:43:17.838549+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:17.838591+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:17.839775+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:17.848095+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T01:43:17.852457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T01:43:17.853075+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:17.853223+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:17.853265+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:17.854470+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined variable: competence" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php line 49 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined variable: competence at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php:49)"} []
[2020-08-07T01:43:40.769282+02:00] request.INFO: Matched route "app_competence_addcompetence". {"route":"app_competence_addcompetence","route_parameters":{"_route":"app_competence_addcompetence","__controller":"App\\Controller\\CompetenceController::addCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"add_competence","_controller":"App\\Controller\\CompetenceController::addCompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"POST"} []
[2020-08-07T01:43:40.770018+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T01:43:40.770061+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:40.770111+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:40.770872+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:40.779714+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T01:43:40.782949+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T01:43:40.783588+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:40.783720+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:40.783772+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:40.784841+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined variable: competence" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php line 49 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined variable: competence at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php:49)"} []
[2020-08-07T01:43:53.527873+02:00] request.INFO: Matched route "app_competence_addcompetence". {"route":"app_competence_addcompetence","route_parameters":{"_route":"app_competence_addcompetence","__controller":"App\\Controller\\CompetenceController::addCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"add_competence","_controller":"App\\Controller\\CompetenceController::addCompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"POST"} []
[2020-08-07T01:43:53.528652+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T01:43:53.528701+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:53.528752+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:53.529363+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:53.537881+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T01:43:53.542264+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T01:43:53.543000+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:53.543154+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:43:53.543195+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:53:22.113578+02:00] request.INFO: Matched route "app_competence_addcompetence". {"route":"app_competence_addcompetence","route_parameters":{"_route":"app_competence_addcompetence","__controller":"App\\Controller\\CompetenceController::addCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"add_competence","_controller":"App\\Controller\\CompetenceController::addCompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"POST"} []
[2020-08-07T01:53:22.114337+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T01:53:22.114388+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:53:22.114437+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:53:22.115054+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:53:22.123942+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T01:53:22.127085+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T01:53:22.127642+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:53:22.127769+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T01:53:22.127803+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:01:54.078103+02:00] request.INFO: Matched route "app_competence_addcompetence". {"route":"app_competence_addcompetence","route_parameters":{"_route":"app_competence_addcompetence","__controller":"App\\Controller\\CompetenceController::addCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"add_competence","_controller":"App\\Controller\\CompetenceController::addCompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"POST"} []
[2020-08-07T02:01:54.079229+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T02:01:54.079281+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:01:54.079324+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:01:54.079909+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:01:54.080739+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T02:01:54.082480+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T02:01:54.082984+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:01:54.083081+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:01:54.083111+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:01:54.084998+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Competence::setUser() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Competence::setUser() at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php:62)"} []
[2020-08-07T02:01:54.085792+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setUser" of class "App\Entity\Competence"." at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php line 62 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setUser\" of class \"App\\Entity\\Competence\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php:62)"} []
[2020-08-07T02:02:20.063436+02:00] request.INFO: Matched route "app_competence_addcompetence". {"route":"app_competence_addcompetence","route_parameters":{"_route":"app_competence_addcompetence","__controller":"App\\Controller\\CompetenceController::addCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"add_competence","_controller":"App\\Controller\\CompetenceController::addCompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"POST"} []
[2020-08-07T02:02:20.065326+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T02:02:20.065402+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:02:20.065470+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:02:20.066397+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:02:20.075653+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T02:02:20.078912+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T02:02:20.079556+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:02:20.079697+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:02:20.079740+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:02:20.085747+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\ORMInvalidArgumentException: "Multiple non-persisted new entities were found through the given association graph:   * A new entity was found through the relationship 'App\Entity\Competence#niveau' that was not configured to cascade persist operations for entity: App\Entity\Niveau@000000000ec39e6500000000674977cd. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={"persist"}). If you cannot find out which entity causes the problem implement 'App\Entity\Niveau#__toString()' to get a clue.  * A new entity was found through the relationship 'App\Entity\Competence#niveau' that was not configured to cascade persist operations for entity: App\Entity\Niveau@000000000ec39e6400000000674977cd. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={"persist"}). If you cannot find out which entity causes the problem implement 'App\Entity\Niveau#__toString()' to get a clue.  * A new entity was found through the relationship 'App\Entity\Competence#niveau' that was not configured to cascade persist operations for entity: App\Entity\Niveau@000000000ec39e6b00000000674977cd. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={"persist"}). If you cannot find out which entity causes the problem implement 'App\Entity\Niveau#__toString()' to get a clue." at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/orm/lib/Doctrine/ORM/ORMInvalidArgumentException.php line 105 {"exception":"[object] (Doctrine\\ORM\\ORMInvalidArgumentException(code: 0): Multiple non-persisted new entities were found through the given association graph:\n\n * A new entity was found through the relationship 'App\\Entity\\Competence#niveau' that was not configured to cascade persist operations for entity: App\\Entity\\Niveau@000000000ec39e6500000000674977cd. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={\"persist\"}). If you cannot find out which entity causes the problem implement 'App\\Entity\\Niveau#__toString()' to get a clue.\n * A new entity was found through the relationship 'App\\Entity\\Competence#niveau' that was not configured to cascade persist operations for entity: App\\Entity\\Niveau@000000000ec39e6400000000674977cd. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={\"persist\"}). If you cannot find out which entity causes the problem implement 'App\\Entity\\Niveau#__toString()' to get a clue.\n * A new entity was found through the relationship 'App\\Entity\\Competence#niveau' that was not configured to cascade persist operations for entity: App\\Entity\\Niveau@000000000ec39e6b00000000674977cd. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={\"persist\"}). If you cannot find out which entity causes the problem implement 'App\\Entity\\Niveau#__toString()' to get a clue. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/orm/lib/Doctrine/ORM/ORMInvalidArgumentException.php:105)"} []
[2020-08-07T02:02:37.960169+02:00] request.INFO: Matched route "app_competence_addcompetence". {"route":"app_competence_addcompetence","route_parameters":{"_route":"app_competence_addcompetence","__controller":"App\\Controller\\CompetenceController::addCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"add_competence","_controller":"App\\Controller\\CompetenceController::addCompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"POST"} []
[2020-08-07T02:02:37.961135+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T02:02:37.961173+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:02:37.961212+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:02:37.961710+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:02:37.962408+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T02:02:37.963851+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T02:02:37.964228+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:02:37.964315+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:02:37.964341+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:02:37.966692+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\ORMInvalidArgumentException: "Multiple non-persisted new entities were found through the given association graph:   * A new entity was found through the relationship 'App\Entity\Competence#niveau' that was not configured to cascade persist operations for entity: App\Entity\Niveau@00000000386d25c30000000000489601. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={"persist"}). If you cannot find out which entity causes the problem implement 'App\Entity\Niveau#__toString()' to get a clue.  * A new entity was found through the relationship 'App\Entity\Competence#niveau' that was not configured to cascade persist operations for entity: App\Entity\Niveau@00000000386d2d350000000000489601. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={"persist"}). If you cannot find out which entity causes the problem implement 'App\Entity\Niveau#__toString()' to get a clue.  * A new entity was found through the relationship 'App\Entity\Competence#niveau' that was not configured to cascade persist operations for entity: App\Entity\Niveau@00000000386d24aa0000000000489601. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={"persist"}). If you cannot find out which entity causes the problem implement 'App\Entity\Niveau#__toString()' to get a clue." at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/orm/lib/Doctrine/ORM/ORMInvalidArgumentException.php line 105 {"exception":"[object] (Doctrine\\ORM\\ORMInvalidArgumentException(code: 0): Multiple non-persisted new entities were found through the given association graph:\n\n * A new entity was found through the relationship 'App\\Entity\\Competence#niveau' that was not configured to cascade persist operations for entity: App\\Entity\\Niveau@00000000386d25c30000000000489601. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={\"persist\"}). If you cannot find out which entity causes the problem implement 'App\\Entity\\Niveau#__toString()' to get a clue.\n * A new entity was found through the relationship 'App\\Entity\\Competence#niveau' that was not configured to cascade persist operations for entity: App\\Entity\\Niveau@00000000386d2d350000000000489601. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={\"persist\"}). If you cannot find out which entity causes the problem implement 'App\\Entity\\Niveau#__toString()' to get a clue.\n * A new entity was found through the relationship 'App\\Entity\\Competence#niveau' that was not configured to cascade persist operations for entity: App\\Entity\\Niveau@00000000386d24aa0000000000489601. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={\"persist\"}). If you cannot find out which entity causes the problem implement 'App\\Entity\\Niveau#__toString()' to get a clue. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/orm/lib/Doctrine/ORM/ORMInvalidArgumentException.php:105)"} []
[2020-08-07T02:03:02.902838+02:00] request.INFO: Matched route "app_competence_addcompetence". {"route":"app_competence_addcompetence","route_parameters":{"_route":"app_competence_addcompetence","__controller":"App\\Controller\\CompetenceController::addCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"add_competence","_controller":"App\\Controller\\CompetenceController::addCompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"POST"} []
[2020-08-07T02:03:02.904625+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T02:03:02.904694+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:03:02.904748+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:03:02.905364+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:03:02.906181+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T02:03:02.908357+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T02:03:02.908920+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:03:02.909059+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:03:02.909099+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:03:02.912208+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\ORMInvalidArgumentException: "Multiple non-persisted new entities were found through the given association graph:   * A new entity was found through the relationship 'App\Entity\Competence#niveau' that was not configured to cascade persist operations for entity: App\Entity\Niveau@00000000321dbe8a0000000075e5a794. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={"persist"}). If you cannot find out which entity causes the problem implement 'App\Entity\Niveau#__toString()' to get a clue.  * A new entity was found through the relationship 'App\Entity\Competence#niveau' that was not configured to cascade persist operations for entity: App\Entity\Niveau@00000000321dbe890000000075e5a794. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={"persist"}). If you cannot find out which entity causes the problem implement 'App\Entity\Niveau#__toString()' to get a clue.  * A new entity was found through the relationship 'App\Entity\Competence#niveau' that was not configured to cascade persist operations for entity: App\Entity\Niveau@00000000321dbe880000000075e5a794. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={"persist"}). If you cannot find out which entity causes the problem implement 'App\Entity\Niveau#__toString()' to get a clue." at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/orm/lib/Doctrine/ORM/ORMInvalidArgumentException.php line 105 {"exception":"[object] (Doctrine\\ORM\\ORMInvalidArgumentException(code: 0): Multiple non-persisted new entities were found through the given association graph:\n\n * A new entity was found through the relationship 'App\\Entity\\Competence#niveau' that was not configured to cascade persist operations for entity: App\\Entity\\Niveau@00000000321dbe8a0000000075e5a794. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={\"persist\"}). If you cannot find out which entity causes the problem implement 'App\\Entity\\Niveau#__toString()' to get a clue.\n * A new entity was found through the relationship 'App\\Entity\\Competence#niveau' that was not configured to cascade persist operations for entity: App\\Entity\\Niveau@00000000321dbe890000000075e5a794. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={\"persist\"}). If you cannot find out which entity causes the problem implement 'App\\Entity\\Niveau#__toString()' to get a clue.\n * A new entity was found through the relationship 'App\\Entity\\Competence#niveau' that was not configured to cascade persist operations for entity: App\\Entity\\Niveau@00000000321dbe880000000075e5a794. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={\"persist\"}). If you cannot find out which entity causes the problem implement 'App\\Entity\\Niveau#__toString()' to get a clue. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/orm/lib/Doctrine/ORM/ORMInvalidArgumentException.php:105)"} []
[2020-08-07T02:03:36.784924+02:00] request.INFO: Matched route "app_competence_addcompetence". {"route":"app_competence_addcompetence","route_parameters":{"_route":"app_competence_addcompetence","__controller":"App\\Controller\\CompetenceController::addCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"add_competence","_controller":"App\\Controller\\CompetenceController::addCompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"POST"} []
[2020-08-07T02:03:36.786437+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T02:03:36.786508+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:03:36.786569+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:03:36.787395+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:03:36.788543+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T02:03:36.790547+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T02:03:36.791204+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:03:36.791344+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:03:36.791388+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:03:36.794478+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-07T02:03:36.794802+02:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-07T02:03:36.795225+02:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":8} []
[2020-08-07T02:03:36.803819+02:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":8} []
[2020-08-07T02:03:36.804114+02:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":8} []
[2020-08-07T02:03:36.805383+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-07T02:15:11.649574+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PUT"} []
[2020-08-07T02:15:11.650602+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T02:15:11.650655+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:15:11.650697+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:15:11.651228+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:15:11.651902+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T02:15:11.653624+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T02:15:11.654067+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:15:11.654169+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:15:11.654203+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:24:52.492694+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PUT"} []
[2020-08-07T02:24:52.493667+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T02:24:52.493713+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:24:52.493766+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:24:52.494345+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:24:52.495264+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T02:24:52.496937+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T02:24:52.497410+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:24:52.497506+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:24:52.497536+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:24:52.498963+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T02:41:26.241188+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PUT"} []
[2020-08-07T02:41:26.244509+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T02:41:26.244628+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:41:26.244721+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:41:26.246311+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:41:26.246703+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:41:31.593620+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-07T02:41:31.602793+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T02:41:31.752124+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T02:41:31.752634+02:00] security.INFO: User has been authenticated successfully. {"username":"laurent didier"} []
[2020-08-07T02:41:49.380291+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PUT"} []
[2020-08-07T02:41:49.381288+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T02:41:49.381355+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:41:49.381412+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:41:49.382183+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:41:49.393858+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T02:41:49.398038+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T02:41:49.398953+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:41:49.399118+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:41:49.399161+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:41:49.403526+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T02:41:49.405717+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Competence::getUser() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Competence::getUser() at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php:132)"} []
[2020-08-07T02:41:49.406135+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "getUser" of class "App\Entity\Competence"." at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php line 132 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"getUser\" of class \"App\\Entity\\Competence\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php:132)"} []
[2020-08-07T02:42:14.323594+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PUT"} []
[2020-08-07T02:42:14.324571+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T02:42:14.324646+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:42:14.324705+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:42:14.325371+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:42:14.333122+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T02:42:14.338072+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T02:42:14.340278+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:42:14.340538+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:42:14.340594+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:42:14.343279+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T02:42:14.351443+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T02:43:03.935710+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PUT"} []
[2020-08-07T02:43:03.936401+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T02:43:03.936450+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:43:03.936490+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:43:03.937011+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:43:03.944800+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T02:43:03.949257+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T02:43:03.950144+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:43:03.950338+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:43:03.950398+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:43:03.953549+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T02:43:03.958245+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T02:44:48.392834+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PUT"} []
[2020-08-07T02:44:48.393818+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T02:44:48.393892+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:44:48.393957+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:44:48.394757+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:44:48.407435+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T02:44:48.411749+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T02:44:48.412477+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:44:48.412626+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:44:48.412670+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:44:48.416348+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T02:44:48.564478+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T02:46:56.748775+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PUT"} []
[2020-08-07T02:46:56.749547+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T02:46:56.749595+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:46:56.749639+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:46:56.750269+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:46:56.758508+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T02:46:56.761839+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T02:46:56.762304+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:46:56.762398+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:46:56.762426+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T02:46:56.764277+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:00:12.974021+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PUT"} []
[2020-08-07T03:00:12.975050+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:00:12.975095+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:00:12.975136+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:00:12.975655+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:00:12.976339+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:00:12.977996+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:00:12.978517+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:00:12.978615+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:00:12.978645+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:00:12.980422+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot resolve argument $rep_niveau of "App\Controller\CompetenceController::updateCompetence()": Cannot determine controller argument for "App\Controller\CompetenceController::updateCompetence()": the $rep_niveau argument is type-hinted with the non-existent class or interface: "App\Controller\NiveauRepository". Did you forget to add a use statement?" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/dependency-injection/Container.php line 435 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot resolve argument $rep_niveau of \"App\\Controller\\CompetenceController::updateCompetence()\": Cannot determine controller argument for \"App\\Controller\\CompetenceController::updateCompetence()\": the $rep_niveau argument is type-hinted with the non-existent class or interface: \"App\\Controller\\NiveauRepository\". Did you forget to add a use statement? at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/dependency-injection/Container.php:435)"} []
[2020-08-07T03:00:54.918647+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PUT"} []
[2020-08-07T03:00:54.920981+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:00:54.921055+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:00:54.921119+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:00:54.922058+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:00:54.931494+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:00:54.934721+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:00:54.935329+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:00:54.935431+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:00:54.935470+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:00:54.939263+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot resolve argument $rep_niveau of "App\Controller\CompetenceController::updateCompetence()": Cannot determine controller argument for "App\Controller\CompetenceController::updateCompetence()": the $rep_niveau argument is type-hinted with the non-existent class or interface: "App\Controller\NiveauRepository". Did you forget to add a use statement?" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/dependency-injection/Container.php line 435 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot resolve argument $rep_niveau of \"App\\Controller\\CompetenceController::updateCompetence()\": Cannot determine controller argument for \"App\\Controller\\CompetenceController::updateCompetence()\": the $rep_niveau argument is type-hinted with the non-existent class or interface: \"App\\Controller\\NiveauRepository\". Did you forget to add a use statement? at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/dependency-injection/Container.php:435)"} []
[2020-08-07T03:01:58.474904+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PUT"} []
[2020-08-07T03:01:58.476454+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:01:58.476525+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:01:58.476589+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:01:58.477379+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:01:58.478441+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:01:58.480708+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:01:58.481233+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:01:58.481350+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:01:58.481384+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:01:58.483410+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:01:58.484250+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined variable: competence" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php line 124 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined variable: competence at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/CompetenceController.php:124)"} []
[2020-08-07T03:02:45.463965+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PUT"} []
[2020-08-07T03:02:45.465736+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:02:45.465804+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:02:45.465850+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:02:45.466552+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:02:45.475557+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:02:45.479372+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:02:45.480223+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:02:45.480344+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:02:45.480374+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:02:45.485100+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:02:45.487428+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-07T03:02:45.487609+02:00] doctrine.DEBUG: UPDATE competence SET libelle = ? WHERE id = ? ["Niveau3",1] []
[2020-08-07T03:02:45.487938+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-07T03:02:45.492347+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:06:02.046905+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PUT"} []
[2020-08-07T03:06:02.047573+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:06:02.047617+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:06:02.047657+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:06:02.048193+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:06:02.056341+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:06:02.059551+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:06:02.060049+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:06:02.060147+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:06:02.060174+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:06:02.062554+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:06:02.066353+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:06:13.239547+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:06:13.240659+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:06:13.240746+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:06:13.240813+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:06:13.241614+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:06:13.251229+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:06:13.254129+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:06:13.254637+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:06:13.254757+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:06:13.254799+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:06:13.257318+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:06:13.260494+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:07:12.777051+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:07:12.778087+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:07:12.778167+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:07:12.778231+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:07:12.779000+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:07:12.789208+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:07:12.793574+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:07:12.794492+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:07:12.794680+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:07:12.794729+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:07:12.799542+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:07:12.936969+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:07:22.912532+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:07:22.913193+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:07:22.913235+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:07:22.913274+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:07:22.913821+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:07:22.921979+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:07:22.926211+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:07:22.926763+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:07:22.926893+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:07:22.926939+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:07:22.930398+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:07:22.934098+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:09:13.177266+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:09:13.178041+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:09:13.178091+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:09:13.178146+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:09:13.178807+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:09:13.186375+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:09:13.189532+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:09:13.190097+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:09:13.190222+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:09:13.190269+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:09:13.193030+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:09:13.196653+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:10:02.558129+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:10:02.558865+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:10:02.558918+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:10:02.558974+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:10:02.559534+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:10:02.566899+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:10:02.569707+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:10:02.570198+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:10:02.570297+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:10:02.570329+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:10:02.572729+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:10:02.576007+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:10:13.165380+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:10:13.166065+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:10:13.166113+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:10:13.166153+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:10:13.166728+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:10:13.174421+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:10:13.177363+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:10:13.177844+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:10:13.177947+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:10:13.177976+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:10:13.180385+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:10:13.183362+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:15:52.019392+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:15:52.020945+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:15:52.021016+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:15:52.021069+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:15:52.021633+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:15:52.022405+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:15:52.023817+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:15:52.024156+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:15:52.024237+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:15:52.024263+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:15:52.025765+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:18:50.085679+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:18:50.086887+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:18:50.086941+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:18:50.086985+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:18:50.087656+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:18:50.088687+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:18:50.090713+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:18:50.091361+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:18:50.091465+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:18:50.091500+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:18:50.093478+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:18:50.098448+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:19:34.872440+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:19:34.873571+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:19:34.873628+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:19:34.873670+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:19:34.874178+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:19:34.874847+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:19:34.876244+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:19:34.877158+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:19:34.877276+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:19:34.877313+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:19:34.879181+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:19:34.885074+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:22:09.302059+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-08-07T03:22:09.303538+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:22:09.303592+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:22:09.303623+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:22:09.304188+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T03:23:18.848422+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"2"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/2","method":"PATCH"} []
[2020-08-07T03:23:18.849178+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:23:18.849234+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:23:18.849277+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:23:18.849820+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:23:18.857407+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:23:18.860540+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:23:18.861110+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:23:18.861239+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:23:18.861283+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:23:18.865523+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["2"] []
[2020-08-07T03:23:18.867378+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-07T03:23:18.867610+02:00] doctrine.DEBUG: UPDATE competence SET libelle = ? WHERE id = ? ["Niveau3",2] []
[2020-08-07T03:23:18.868172+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-07T03:23:18.870431+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [2] []
[2020-08-07T03:23:52.826087+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"3"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/3","method":"PATCH"} []
[2020-08-07T03:23:52.826772+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:23:52.826819+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:23:52.826859+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:23:52.827369+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:23:52.834690+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:23:52.837473+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:23:52.837952+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:23:52.838046+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:23:52.838073+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:23:52.840647+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["3"] []
[2020-08-07T03:23:52.842122+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-07T03:23:52.842300+02:00] doctrine.DEBUG: UPDATE competence SET libelle = ? WHERE id = ? ["Niveau3",3] []
[2020-08-07T03:23:52.842680+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-07T03:23:52.845152+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [3] []
[2020-08-07T03:28:09.700965+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"3"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/3","method":"PATCH"} []
[2020-08-07T03:28:09.701644+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:28:09.701687+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:28:09.701725+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:28:09.702306+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:28:09.710091+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:28:09.713362+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:28:09.713922+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:28:09.714022+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:28:09.714049+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:28:09.716531+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["3"] []
[2020-08-07T03:29:16.699028+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"3"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/3","method":"PATCH"} []
[2020-08-07T03:29:16.699971+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:29:16.700021+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:29:16.700072+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:29:16.701025+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:29:16.709692+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:29:16.713361+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:29:16.713996+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:29:16.714107+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:29:16.714135+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:29:16.716594+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["3"] []
[2020-08-07T03:30:02.642921+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"3"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/3","method":"PATCH"} []
[2020-08-07T03:30:02.644067+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:30:02.644144+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:30:02.644205+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:30:02.645076+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:30:02.655190+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:30:02.663374+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:30:02.664107+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:30:02.664263+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:30:02.664307+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:30:02.669652+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["3"] []
[2020-08-07T03:34:49.871711+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"3"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/3","method":"PATCH"} []
[2020-08-07T03:34:49.872520+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:34:49.872567+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:34:49.872616+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:34:49.873330+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:34:49.881664+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:34:49.884713+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:34:49.885289+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:34:49.885393+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:34:49.885421+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:34:49.887937+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["3"] []
[2020-08-07T03:37:08.712487+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"3"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/3","method":"PATCH"} []
[2020-08-07T03:37:08.713199+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:37:08.713244+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:37:08.713283+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:37:08.713848+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:37:08.721063+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:37:08.724775+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:37:08.725865+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:37:08.725999+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:37:08.726034+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:37:08.729037+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["3"] []
[2020-08-07T03:37:27.401077+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"3"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/3","method":"PATCH"} []
[2020-08-07T03:37:27.401952+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:37:27.402014+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:37:27.402057+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:37:27.402794+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:37:27.412436+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:37:27.416106+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:37:27.416644+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:37:27.416744+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:37:27.416772+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:37:27.419093+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["3"] []
[2020-08-07T03:37:27.423116+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [3] []
[2020-08-07T03:42:43.675694+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:42:43.676391+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:42:43.676436+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:42:43.676476+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:42:43.676826+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:42:43.677027+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:42:50.502724+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-07T03:42:50.512068+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:42:50.667552+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:42:50.668106+02:00] security.INFO: User has been authenticated successfully. {"username":"laurent didier"} []
[2020-08-07T03:43:18.353911+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:43:18.354517+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:43:18.354561+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:43:18.354600+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:43:18.355094+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:43:18.365491+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:43:18.368381+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:43:18.368875+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:43:18.368970+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:43:18.368997+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:43:18.371580+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:43:18.375430+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:44:35.262474+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:44:35.263946+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:44:35.264045+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:44:35.264122+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:44:35.264950+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:44:35.273382+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:44:35.276782+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:44:35.277348+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:44:35.277465+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:44:35.277496+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:44:35.280104+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:44:35.284713+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:44:49.066168+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:44:49.066829+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:44:49.066877+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:44:49.066917+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:44:49.067440+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:44:49.076390+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:44:49.079950+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:44:49.080453+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:44:49.080556+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:44:49.080585+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:44:49.083688+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:44:49.234235+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:45:23.002578+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:45:23.003354+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:45:23.003401+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:45:23.003440+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:45:23.004120+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:45:23.015317+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:45:23.018019+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:45:23.018527+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:45:23.018626+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:45:23.018653+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:45:23.021013+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:45:56.901908+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:45:56.902614+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:45:56.902656+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:45:56.902695+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:45:56.903372+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:45:56.913140+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:45:56.917558+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:45:56.918506+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:45:56.918667+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:45:56.918714+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:45:56.921902+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:49:14.460633+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:49:14.461607+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:49:14.461675+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:14.461736+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:14.462595+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:14.471365+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:49:14.475491+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:49:14.476106+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:14.476233+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:14.476274+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:14.478718+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:49:25.721645+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:49:25.722392+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:49:25.722458+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:25.722559+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:25.723193+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:25.730360+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:49:25.733516+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:49:25.734101+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:25.734234+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:25.734278+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:25.737443+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:49:25.738115+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.id = ? [1] []
[2020-08-07T03:49:43.555659+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:49:43.556634+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:49:43.556703+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:43.556766+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:43.557612+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:43.566629+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:49:43.570607+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:49:43.571082+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:43.571182+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:43.571217+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:49:43.573835+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:49:43.574342+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.id = ? [1] []
[2020-08-07T03:49:43.574658+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.id = ? [2] []
[2020-08-07T03:49:43.574915+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.id = ? [3] []
[2020-08-07T03:49:43.576422+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-07T03:49:43.576574+02:00] doctrine.DEBUG: UPDATE competence SET libelle = ? WHERE id = ? ["Connaissances solide en PHP",1] []
[2020-08-07T03:49:43.576988+02:00] doctrine.DEBUG: UPDATE niveau SET groupe_action = ? WHERE id = ? ["Action A, Action F, Action D",1] []
[2020-08-07T03:49:43.577232+02:00] doctrine.DEBUG: UPDATE niveau SET groupe_action = ? WHERE id = ? ["Action A, Action B, Action D",2] []
[2020-08-07T03:49:43.577505+02:00] doctrine.DEBUG: UPDATE niveau SET groupe_action = ? WHERE id = ? ["Action A, Action B, Action D",3] []
[2020-08-07T03:49:43.577724+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-07T03:49:43.581832+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:51:57.106618+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:51:57.107614+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:51:57.107688+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:51:57.107754+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:51:57.108474+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:51:57.117049+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:51:57.120623+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:51:57.121205+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:51:57.121307+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:51:57.121335+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:51:57.123859+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:51:57.124419+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.id = ? [1] []
[2020-08-07T03:51:57.124801+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.id = ? [2] []
[2020-08-07T03:51:57.125115+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.id = ? [3] []
[2020-08-07T03:51:57.127216+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-07T03:51:57.127441+02:00] doctrine.DEBUG: UPDATE niveau SET critere_evaluation = ? WHERE id = ? ["CritereEvaluat",1] []
[2020-08-07T03:51:57.128016+02:00] doctrine.DEBUG: UPDATE niveau SET critere_evaluation = ? WHERE id = ? ["CritereEvaluat",2] []
[2020-08-07T03:51:57.128433+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-07T03:51:57.132781+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:53:43.523458+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:53:43.524422+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:53:43.524500+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:53:43.524564+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:53:43.525413+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:53:43.533561+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:53:43.537228+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:53:43.537891+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:53:43.538017+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:53:43.538069+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:53:43.540787+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:53:43.541345+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.id = ? [12] []
[2020-08-07T03:53:43.543358+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-07T03:53:43.543554+02:00] doctrine.DEBUG: UPDATE niveau SET libelle = ?, critere_evaluation = ?, groupe_action = ? WHERE id = ? ["Niveau1","CritereEvaluat","Action A, Action F, Action D",12] []
[2020-08-07T03:53:43.543968+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-07T03:53:43.545998+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:54:17.155230+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:54:17.156120+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:54:17.156182+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:17.156240+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:17.156970+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:17.168484+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:54:17.172638+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:54:17.173558+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:17.173719+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:17.173757+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:17.178489+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:54:17.178986+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.id = ? [12] []
[2020-08-07T03:54:17.179895+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:54:28.769602+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:54:28.770411+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:54:28.770466+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:28.770520+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:28.771160+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:28.780260+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:54:28.785848+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:54:28.786606+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:28.786720+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:28.786751+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:28.791237+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:54:28.791742+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.id = ? [12] []
[2020-08-07T03:54:28.792706+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:54:45.583871+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:54:45.584542+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:54:45.584591+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:45.584631+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:45.585222+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:45.592783+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:54:45.595589+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:54:45.596069+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:45.596166+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:45.596194+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:45.598771+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:54:45.599689+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.id = ? [12] []
[2020-08-07T03:54:45.600883+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:54:57.140499+02:00] request.INFO: Matched route "app_competence_updatecompetence". {"route":"app_competence_updatecompetence","route_parameters":{"_route":"app_competence_updatecompetence","__controller":"App\\Controller\\CompetenceController::updateCompetence","__api_resource_class":"App\\Entity\\Competence","__api_collection_operation_name":"update_competence","_controller":"App\\Controller\\CompetenceController::updateCompetence","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/1","method":"PATCH"} []
[2020-08-07T03:54:57.141323+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:54:57.141375+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:57.141415+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:57.141950+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:57.149840+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:54:57.153381+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:54:57.154087+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:57.154214+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:57.154246+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:54:57.157042+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 WHERE t0.id = ? ["1"] []
[2020-08-07T03:54:57.157600+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.id = ? [12] []
[2020-08-07T03:54:57.158795+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T03:55:55.387071+02:00] request.INFO: Matched route "api_competences_show_groupecompetence_collection". {"route":"api_competences_show_groupecompetence_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/competences","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_competences_show_groupecompetence_collection","_format":null,"_api_resource_class":"App\\Entity\\Competence","_api_collection_operation_name":"show_groupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/","method":"GET"} []
[2020-08-07T03:55:55.387797+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:55:55.387849+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:55:55.387901+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:55:55.388425+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:55:55.396066+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:55:55.398929+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:55:55.399463+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:55:55.399569+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:55:55.399598+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:55:55.422588+02:00] request.INFO: Matched route "api_competences_show_groupecompetence_collection". {"route":"api_competences_show_groupecompetence_collection","route_parameters":{"_route":"api_competences_show_groupecompetence_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Competence","_api_collection_operation_name":"show_groupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"GET"} []
[2020-08-07T03:55:55.423279+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:55:55.423338+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:55:55.423383+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:55:55.423851+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:55:55.430293+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:55:55.433010+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:55:55.433623+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:55:55.433736+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:55:55.433765+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:55:55.449625+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id ORDER BY c0_.id ASC LIMIT 10 [] []
[2020-08-07T03:55:55.450815+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.libelle AS libelle_1, n1_.id AS id_2, n1_.libelle AS libelle_3, n1_.critere_evaluation AS critere_evaluation_4, n1_.groupe_action AS groupe_action_5, n1_.competence_id AS competence_id_6 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,5,6,7,8]] []
[2020-08-07T03:55:55.461741+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id [] []
[2020-08-07T03:56:52.807798+02:00] request.INFO: Matched route "api_competences_show_groupecompetence_collection". {"route":"api_competences_show_groupecompetence_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/competences","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_competences_show_groupecompetence_collection","_format":null,"_api_resource_class":"App\\Entity\\Competence","_api_collection_operation_name":"show_groupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/","method":"GET"} []
[2020-08-07T03:56:52.808981+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:56:52.809031+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:56:52.809075+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:56:52.809591+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:56:52.810424+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:56:52.811971+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:56:52.812427+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:56:52.812543+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:56:52.812589+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:56:52.832266+02:00] request.INFO: Matched route "api_competences_show_groupecompetence_collection". {"route":"api_competences_show_groupecompetence_collection","route_parameters":{"_route":"api_competences_show_groupecompetence_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Competence","_api_collection_operation_name":"show_groupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"GET"} []
[2020-08-07T03:56:52.833211+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:56:52.833258+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:56:52.833301+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:56:52.833754+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:56:52.840593+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:56:52.843394+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:56:52.843849+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:56:52.843927+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:56:52.843958+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:56:52.856903+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id ORDER BY c0_.id ASC LIMIT 10 [] []
[2020-08-07T03:56:52.858013+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.libelle AS libelle_1, n1_.id AS id_2, n1_.libelle AS libelle_3, n1_.critere_evaluation AS critere_evaluation_4, n1_.groupe_action AS groupe_action_5, n1_.competence_id AS competence_id_6 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,5,6,7,8]] []
[2020-08-07T03:56:52.867330+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id [] []
[2020-08-07T03:57:01.718519+02:00] request.INFO: Matched route "api_competences_show_groupecompetence_collection". {"route":"api_competences_show_groupecompetence_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/competences","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_competences_show_groupecompetence_collection","_format":null,"_api_resource_class":"App\\Entity\\Competence","_api_collection_operation_name":"show_groupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/","method":"GET"} []
[2020-08-07T03:57:01.720111+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:57:01.720165+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:57:01.720206+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:57:01.720718+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:57:01.729561+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:57:01.732500+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:57:01.732948+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:57:01.733042+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:57:01.733072+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:57:01.766616+02:00] request.INFO: Matched route "api_competences_show_groupecompetence_collection". {"route":"api_competences_show_groupecompetence_collection","route_parameters":{"_route":"api_competences_show_groupecompetence_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Competence","_api_collection_operation_name":"show_groupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"GET"} []
[2020-08-07T03:57:01.767088+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:57:01.767126+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:57:01.767162+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:57:01.767545+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:57:01.774082+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:57:01.776976+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:57:01.777525+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:57:01.777618+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:57:01.777646+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:57:01.917401+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id ORDER BY c0_.id ASC LIMIT 10 [] []
[2020-08-07T03:57:01.918208+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.libelle AS libelle_1, n1_.id AS id_2, n1_.libelle AS libelle_3, n1_.critere_evaluation AS critere_evaluation_4, n1_.groupe_action AS groupe_action_5, n1_.competence_id AS competence_id_6 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,5,6,7,8]] []
[2020-08-07T03:57:01.926647+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id [] []
[2020-08-07T03:58:33.636863+02:00] request.INFO: Matched route "api_competences_show_groupecompetence_collection". {"route":"api_competences_show_groupecompetence_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/competences","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_competences_show_groupecompetence_collection","_format":null,"_api_resource_class":"App\\Entity\\Competence","_api_collection_operation_name":"show_groupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/","method":"GET"} []
[2020-08-07T03:58:33.637928+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:58:33.637968+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:33.638007+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:33.638503+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:33.639168+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:58:33.640862+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:58:33.641417+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:33.641521+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:33.641556+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:33.661848+02:00] request.INFO: Matched route "api_competences_show_groupecompetence_collection". {"route":"api_competences_show_groupecompetence_collection","route_parameters":{"_route":"api_competences_show_groupecompetence_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Competence","_api_collection_operation_name":"show_groupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"GET"} []
[2020-08-07T03:58:33.662782+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:58:33.662825+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:33.662864+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:33.663258+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:33.669583+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:58:33.672149+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:58:33.672555+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:33.672629+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:33.672664+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:33.685222+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id ORDER BY c0_.id ASC LIMIT 10 [] []
[2020-08-07T03:58:33.686077+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.libelle AS libelle_1, n1_.id AS id_2, n1_.libelle AS libelle_3, n1_.critere_evaluation AS critere_evaluation_4, n1_.groupe_action AS groupe_action_5, n1_.competence_id AS competence_id_6 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,5,6,7,8]] []
[2020-08-07T03:58:33.694513+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id [] []
[2020-08-07T03:58:52.896867+02:00] request.INFO: Matched route "api_competences_show_groupecompetence_collection". {"route":"api_competences_show_groupecompetence_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/competences","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_competences_show_groupecompetence_collection","_format":null,"_api_resource_class":"App\\Entity\\Competence","_api_collection_operation_name":"show_groupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/","method":"GET"} []
[2020-08-07T03:58:52.897821+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:58:52.897858+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:52.897897+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:52.898754+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:52.899603+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:58:52.901062+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:58:52.901451+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:52.901539+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:52.901566+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:52.920334+02:00] request.INFO: Matched route "api_competences_show_groupecompetence_collection". {"route":"api_competences_show_groupecompetence_collection","route_parameters":{"_route":"api_competences_show_groupecompetence_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Competence","_api_collection_operation_name":"show_groupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"GET"} []
[2020-08-07T03:58:52.921245+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:58:52.921302+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:52.921366+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:52.921762+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:52.928885+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:58:52.931505+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:58:52.932001+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:52.932081+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:52.932108+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:58:52.945210+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id ORDER BY c0_.id ASC LIMIT 10 [] []
[2020-08-07T03:58:52.946100+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.libelle AS libelle_1, n1_.id AS id_2, n1_.libelle AS libelle_3, n1_.critere_evaluation AS critere_evaluation_4, n1_.groupe_action AS groupe_action_5, n1_.competence_id AS competence_id_6 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,5,6,7,8]] []
[2020-08-07T03:58:52.955238+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id [] []
[2020-08-07T03:59:04.248161+02:00] request.INFO: Matched route "api_competences_show_groupecompetence_collection". {"route":"api_competences_show_groupecompetence_collection","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api/admin/competences","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_competences_show_groupecompetence_collection","_format":null,"_api_resource_class":"App\\Entity\\Competence","_api_collection_operation_name":"show_groupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences/","method":"GET"} []
[2020-08-07T03:59:04.249756+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:59:04.249804+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:59:04.249845+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:59:04.250371+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:59:04.260151+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:59:04.263798+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:59:04.264512+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:59:04.264633+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:59:04.264666+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:59:04.295861+02:00] request.INFO: Matched route "api_competences_show_groupecompetence_collection". {"route":"api_competences_show_groupecompetence_collection","route_parameters":{"_route":"api_competences_show_groupecompetence_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Competence","_api_collection_operation_name":"show_groupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/competences","method":"GET"} []
[2020-08-07T03:59:04.296319+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T03:59:04.296360+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:59:04.296398+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:59:04.296808+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:59:04.304263+02:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T03:59:04.307261+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T03:59:04.307960+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:59:04.308110+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:59:04.308152+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T03:59:04.455744+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id ORDER BY c0_.id ASC LIMIT 10 [] []
[2020-08-07T03:59:04.456541+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.libelle AS libelle_1, n1_.id AS id_2, n1_.libelle AS libelle_3, n1_.critere_evaluation AS critere_evaluation_4, n1_.groupe_action AS groupe_action_5, n1_.competence_id AS competence_id_6 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[1,2,3,4,5,6,7,8]] []
[2020-08-07T03:59:04.462533+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM competence c0_ LEFT JOIN niveau n1_ ON c0_.id = n1_.competence_id [] []
[2020-08-07T16:10:48.187770+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-07T16:10:48.205696+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T16:10:48.360037+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T16:10:48.360540+00:00] security.INFO: User has been authenticated successfully. {"username":"laurent didier"} []
[2020-08-07T16:11:25.027493+00:00] request.INFO: Matched route "app_groupecompetence_showgroupecompetence". {"route":"app_groupecompetence_showgroupecompetence","route_parameters":{"_route":"app_groupecompetence_showgroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"show_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences","method":"GET"} []
[2020-08-07T16:11:25.030036+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T16:11:25.030092+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:11:25.030136+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:11:25.033711+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:11:25.044545+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["laurent didier"] []
[2020-08-07T16:11:25.047687+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T16:11:25.048530+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"laurent didier\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:11:25.048693+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:11:25.048730+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:12:14.397197+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-07T16:12:14.406908+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T16:12:14.551018+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T16:12:14.551563+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-07T16:12:25.709478+00:00] request.INFO: Matched route "app_groupecompetence_showgroupecompetence". {"route":"app_groupecompetence_showgroupecompetence","route_parameters":{"_route":"app_groupecompetence_showgroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"show_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences","method":"GET"} []
[2020-08-07T16:12:25.710426+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T16:12:25.710489+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:12:25.710547+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:12:25.711267+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:12:25.720727+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T16:12:25.724850+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T16:12:25.725506+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:12:25.725645+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:12:25.725685+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:14:40.252587+00:00] request.INFO: Matched route "app_groupecompetence_showgroupecompetence". {"route":"app_groupecompetence_showgroupecompetence","route_parameters":{"_route":"app_groupecompetence_showgroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"show_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences","method":"GET"} []
[2020-08-07T16:14:40.253549+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T16:14:40.253613+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:14:40.253673+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:14:40.254470+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:14:40.265471+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T16:14:40.269467+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T16:14:40.269994+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:14:40.270124+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:14:40.270164+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:17:43.821441+00:00] request.INFO: Matched route "app_groupecompetence_showgroupecompetence". {"route":"app_groupecompetence_showgroupecompetence","route_parameters":{"_route":"app_groupecompetence_showgroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"show_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences","method":"GET"} []
[2020-08-07T16:17:43.822393+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T16:17:43.822457+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:17:43.822513+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:17:43.823148+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:17:43.830834+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T16:17:43.833655+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T16:17:43.834119+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:17:43.834221+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:17:43.834257+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:04.345672+00:00] request.INFO: Matched route "app_groupecompetence_showgroupecompetence". {"route":"app_groupecompetence_showgroupecompetence","route_parameters":{"_route":"app_groupecompetence_showgroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"show_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences","method":"GET"} []
[2020-08-07T16:18:04.346425+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T16:18:04.346476+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:04.346516+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:04.347095+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:04.356305+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T16:18:04.359140+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T16:18:04.359585+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:04.359676+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:04.359703+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:13.256064+00:00] request.INFO: Matched route "app_groupecompetence_showgroupecompetence". {"route":"app_groupecompetence_showgroupecompetence","route_parameters":{"_route":"app_groupecompetence_showgroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"show_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences","method":"GET"} []
[2020-08-07T16:18:13.257151+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T16:18:13.257241+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:13.257309+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:13.258296+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:13.267353+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T16:18:13.270261+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T16:18:13.270809+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:13.270955+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:13.270986+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:30.707661+00:00] request.INFO: Matched route "app_groupecompetence_showgroupecompetence". {"route":"app_groupecompetence_showgroupecompetence","route_parameters":{"_route":"app_groupecompetence_showgroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"show_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences","method":"GET"} []
[2020-08-07T16:18:30.708308+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T16:18:30.708344+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:30.708380+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:30.708896+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:30.709355+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T16:18:30.710862+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T16:18:30.711286+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:30.711381+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:30.711408+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:18:40.190074+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-07T16:18:40.198252+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T16:18:40.340758+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T16:18:40.341289+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-07T16:23:00.492036+00:00] request.INFO: Matched route "app_groupecompetence_showgroupecompetence". {"route":"app_groupecompetence_showgroupecompetence","route_parameters":{"_route":"app_groupecompetence_showgroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"show_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences","method":"GET"} []
[2020-08-07T16:23:00.493212+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T16:23:00.493257+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:23:00.493297+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:23:00.493789+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:23:00.494483+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T16:23:00.496724+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T16:23:00.497201+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:23:00.497300+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:23:00.497325+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T16:23:00.498912+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 [] []
[2020-08-07T16:23:00.499437+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.id = ? [11] []
[2020-08-07T16:23:00.503824+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 INNER JOIN groupecompetence_competence ON t0.id = groupecompetence_competence.competence_id WHERE groupecompetence_competence.groupecompetence_id = ? [1] []
[2020-08-07T16:23:00.507401+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T16:23:00.508776+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [2] []
[2020-08-07T16:23:00.509535+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [3] []
[2020-08-07T16:23:00.510284+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 INNER JOIN groupecompetence_competence ON t0.id = groupecompetence_competence.competence_id WHERE groupecompetence_competence.groupecompetence_id = ? [2] []
[2020-08-07T16:23:00.510833+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [4] []
[2020-08-07T16:23:00.511202+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [5] []
[2020-08-07T16:23:00.511589+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [6] []
[2020-08-07T17:30:26.967165+00:00] request.INFO: Matched route "api_groupecompetences_show_groupecompetence_competence_collection". {"route":"api_groupecompetences_show_groupecompetence_competence_collection","route_parameters":{"_route":"api_groupecompetences_show_groupecompetence_competence_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Groupecompetence","_api_collection_operation_name":"show_groupecompetence_competence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences/competences","method":"GET"} []
[2020-08-07T17:30:26.968476+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T17:30:26.968528+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:30:26.968580+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:30:26.970937+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:30:26.972336+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:30:31.794943+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-07T17:30:31.803673+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T17:30:31.962591+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T17:30:31.963169+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-07T17:30:45.016677+00:00] request.INFO: Matched route "api_groupecompetences_show_groupecompetence_competence_collection". {"route":"api_groupecompetences_show_groupecompetence_competence_collection","route_parameters":{"_route":"api_groupecompetences_show_groupecompetence_competence_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Groupecompetence","_api_collection_operation_name":"show_groupecompetence_competence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences/competences","method":"GET"} []
[2020-08-07T17:30:45.017896+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T17:30:45.017946+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:30:45.017999+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:30:45.018626+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:30:45.025641+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T17:30:45.028674+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T17:30:45.029231+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:30:45.029352+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:30:45.029392+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:30:45.077115+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, g0_.descriptif AS descriptif_2, g0_.user_id AS user_id_3 FROM groupecompetence g0_ ORDER BY g0_.id ASC LIMIT 10 [] []
[2020-08-07T17:30:45.078732+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.id = ? [11] []
[2020-08-07T17:30:45.083255+00:00] doctrine.DEBUG: SELECT count(g0_.id) AS sclr_0 FROM groupecompetence g0_ [] []
[2020-08-07T17:31:35.759279+00:00] request.INFO: Matched route "api_groupecompetences_show_groupecompetence_competence_collection". {"route":"api_groupecompetences_show_groupecompetence_competence_collection","route_parameters":{"_route":"api_groupecompetences_show_groupecompetence_competence_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Groupecompetence","_api_collection_operation_name":"show_groupecompetence_competence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences/competences","method":"GET"} []
[2020-08-07T17:31:35.760269+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T17:31:35.760309+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:31:35.760348+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:31:35.760828+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:31:35.761490+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T17:31:35.762852+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T17:31:35.763188+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:31:35.763264+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:31:35.763289+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:31:35.769768+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, g0_.descriptif AS descriptif_2, g0_.user_id AS user_id_3 FROM groupecompetence g0_ ORDER BY g0_.id ASC LIMIT 10 [] []
[2020-08-07T17:31:35.770238+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.id = ? [11] []
[2020-08-07T17:31:35.771984+00:00] doctrine.DEBUG: SELECT count(g0_.id) AS sclr_0 FROM groupecompetence g0_ [] []
[2020-08-07T17:31:46.766644+00:00] request.INFO: Matched route "api_groupecompetences_show_groupecompetence_competence_collection". {"route":"api_groupecompetences_show_groupecompetence_competence_collection","route_parameters":{"_route":"api_groupecompetences_show_groupecompetence_competence_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Groupecompetence","_api_collection_operation_name":"show_groupecompetence_competence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences/competences","method":"GET"} []
[2020-08-07T17:31:46.768210+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T17:31:46.768266+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:31:46.768309+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:31:46.768844+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:31:46.777691+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T17:31:46.780554+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T17:31:46.781054+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:31:46.781154+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:31:46.781184+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:31:46.909719+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, g0_.descriptif AS descriptif_2, g0_.user_id AS user_id_3 FROM groupecompetence g0_ ORDER BY g0_.id ASC LIMIT 10 [] []
[2020-08-07T17:31:46.910252+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.id = ? [11] []
[2020-08-07T17:31:46.912001+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 INNER JOIN groupecompetence_competence ON t0.id = groupecompetence_competence.competence_id WHERE groupecompetence_competence.groupecompetence_id = ? [1] []
[2020-08-07T17:31:46.913001+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 INNER JOIN groupecompetence_competence ON t0.id = groupecompetence_competence.competence_id WHERE groupecompetence_competence.groupecompetence_id = ? [2] []
[2020-08-07T17:31:46.913673+00:00] doctrine.DEBUG: SELECT count(g0_.id) AS sclr_0 FROM groupecompetence g0_ [] []
[2020-08-07T17:33:12.995969+00:00] request.INFO: Matched route "api_groupecompetences_show_groupecompetence_competence_collection". {"route":"api_groupecompetences_show_groupecompetence_competence_collection","route_parameters":{"_route":"api_groupecompetences_show_groupecompetence_competence_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Groupecompetence","_api_collection_operation_name":"show_groupecompetence_competence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences/competences","method":"GET"} []
[2020-08-07T17:33:12.996941+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T17:33:12.996977+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:12.997015+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:12.997482+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:12.998145+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T17:33:12.999571+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T17:33:12.999993+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:13.000085+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:13.000111+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:13.007041+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, g0_.descriptif AS descriptif_2, g0_.user_id AS user_id_3 FROM groupecompetence g0_ ORDER BY g0_.id ASC LIMIT 10 [] []
[2020-08-07T17:33:13.007711+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.id = ? [11] []
[2020-08-07T17:33:13.009536+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 INNER JOIN groupecompetence_competence ON t0.id = groupecompetence_competence.competence_id WHERE groupecompetence_competence.groupecompetence_id = ? [1] []
[2020-08-07T17:33:13.010537+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 INNER JOIN groupecompetence_competence ON t0.id = groupecompetence_competence.competence_id WHERE groupecompetence_competence.groupecompetence_id = ? [2] []
[2020-08-07T17:33:13.011301+00:00] doctrine.DEBUG: SELECT count(g0_.id) AS sclr_0 FROM groupecompetence g0_ [] []
[2020-08-07T17:33:39.857737+00:00] request.INFO: Matched route "api_groupecompetences_show_groupecompetence_competence_collection". {"route":"api_groupecompetences_show_groupecompetence_competence_collection","route_parameters":{"_route":"api_groupecompetences_show_groupecompetence_competence_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Groupecompetence","_api_collection_operation_name":"show_groupecompetence_competence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences/competences","method":"GET"} []
[2020-08-07T17:33:39.858726+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T17:33:39.858765+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:39.858804+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:39.859279+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:39.859912+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T17:33:39.861461+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T17:33:39.861907+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:39.861987+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:39.862012+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:39.869239+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, g0_.descriptif AS descriptif_2, g0_.user_id AS user_id_3 FROM groupecompetence g0_ ORDER BY g0_.id ASC LIMIT 10 [] []
[2020-08-07T17:33:39.869768+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.id = ? [11] []
[2020-08-07T17:33:39.871951+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 INNER JOIN groupecompetence_competence ON t0.id = groupecompetence_competence.competence_id WHERE groupecompetence_competence.groupecompetence_id = ? [1] []
[2020-08-07T17:33:39.873063+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 INNER JOIN groupecompetence_competence ON t0.id = groupecompetence_competence.competence_id WHERE groupecompetence_competence.groupecompetence_id = ? [2] []
[2020-08-07T17:33:39.873755+00:00] doctrine.DEBUG: SELECT count(g0_.id) AS sclr_0 FROM groupecompetence g0_ [] []
[2020-08-07T17:33:47.937306+00:00] request.INFO: Matched route "api_groupecompetences_show_groupecompetence_competence_collection". {"route":"api_groupecompetences_show_groupecompetence_competence_collection","route_parameters":{"_route":"api_groupecompetences_show_groupecompetence_competence_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Groupecompetence","_api_collection_operation_name":"show_groupecompetence_competence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences/competences","method":"GET"} []
[2020-08-07T17:33:47.938875+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T17:33:47.938922+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:47.938975+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:47.939614+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:47.948987+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T17:33:47.953194+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T17:33:47.953678+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:47.953796+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:47.953838+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T17:33:48.091138+00:00] doctrine.DEBUG: SELECT DISTINCT g0_.id AS id_0, g0_.id AS id_1 FROM groupecompetence g0_ LEFT JOIN groupecompetence_competence g2_ ON g0_.id = g2_.groupecompetence_id LEFT JOIN competence c1_ ON c1_.id = g2_.competence_id ORDER BY g0_.id ASC LIMIT 10 [] []
[2020-08-07T17:33:48.094494+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, g0_.descriptif AS descriptif_2, c1_.id AS id_3, c1_.libelle AS libelle_4, g0_.user_id AS user_id_5 FROM groupecompetence g0_ LEFT JOIN groupecompetence_competence g2_ ON g0_.id = g2_.groupecompetence_id LEFT JOIN competence c1_ ON c1_.id = g2_.competence_id WHERE g0_.id IN (?) ORDER BY g0_.id ASC [[1,2]] []
[2020-08-07T17:33:48.095333+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.id = ? [11] []
[2020-08-07T17:33:48.098771+00:00] doctrine.DEBUG: SELECT count(DISTINCT g0_.id) AS sclr_0 FROM groupecompetence g0_ LEFT JOIN groupecompetence_competence g2_ ON g0_.id = g2_.groupecompetence_id LEFT JOIN competence c1_ ON c1_.id = g2_.competence_id [] []
[2020-08-07T22:13:17.746060+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Config\Exception\LoaderLoadException: "An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type." at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php line 173 {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-07T22:13:17.916887+00:00] request.CRITICAL: Exception thrown when handling an exception (Symfony\Component\Config\Exception\LoaderLoadException: An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php line 173) {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-07T22:13:17.917306+00:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-07T22:13:17.919445+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Config\Exception\LoaderLoadException: "An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type." at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php line 173 {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-07T22:13:18.229764+00:00] request.CRITICAL: Exception thrown when handling an exception (Symfony\Component\Config\Exception\LoaderLoadException: An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php line 173) {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-07T22:13:18.229895+00:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-07T22:15:54.550725+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Config\Exception\LoaderLoadException: "An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type." at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php line 173 {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-07T22:15:54.712908+00:00] request.CRITICAL: Exception thrown when handling an exception (Symfony\Component\Config\Exception\LoaderLoadException: An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php line 173) {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-07T22:15:54.713072+00:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-07T22:15:54.713595+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Config\Exception\LoaderLoadException: "An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type." at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php line 173 {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-07T22:15:55.032069+00:00] request.CRITICAL: Exception thrown when handling an exception (Symfony\Component\Config\Exception\LoaderLoadException: An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php line 173) {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-07T22:15:55.032196+00:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-07T22:17:36.366747+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-08-07T22:17:36.373097+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T22:17:36.373177+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T22:17:36.373227+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T22:17:36.373986+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:18:00.283409+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-08-07T22:18:00.284545+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T22:18:00.284603+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T22:18:00.284635+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T22:18:00.284905+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:18:19.519434+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-07T22:18:19.540799+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T22:18:19.705010+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T22:18:19.706324+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-07T22:18:54.589812+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /api/admin/groupetags"" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /api/admin/groupetags\" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/admin/groupetags/\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-07T22:19:00.125521+00:00] request.INFO: Matched route "api_groupetags_get_collection". {"route":"api_groupetags_get_collection","route_parameters":{"_route":"api_groupetags_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Groupetag","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/groupetags","method":"GET"} []
[2020-08-07T22:19:00.126916+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T22:19:00.126985+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T22:19:00.127019+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T22:19:00.127366+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T22:19:00.129830+00:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-07T22:19:00.130264+00:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-07T22:19:18.414927+00:00] request.INFO: Matched route "api_groupetags_get_collection". {"route":"api_groupetags_get_collection","route_parameters":{"_route":"api_groupetags_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Groupetag","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/groupetags","method":"GET"} []
[2020-08-07T22:19:18.415822+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T22:19:18.415879+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T22:19:18.415930+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T22:19:18.420860+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T22:19:18.432456+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T22:19:18.436707+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T22:19:18.437481+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T22:19:18.437631+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T22:19:18.437668+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T22:19:18.482944+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1 FROM groupetag g0_ ORDER BY g0_.id ASC LIMIT 30 [] []
[2020-08-07T22:19:18.492068+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-07T22:19:18.496850+00:00] doctrine.DEBUG: SELECT count(g0_.id) AS sclr_0 FROM groupetag g0_ [] []
[2020-08-07T23:19:06.907053+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"Groupetag","__api_collection_operation_name":"show_groupetags","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:19:06.908051+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:19:06.908097+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:19:06.908156+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:19:06.909263+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:19:06.909794+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:19:11.472642+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-07T23:19:11.484357+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:19:11.640432+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:19:11.641012+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-07T23:19:34.872560+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"Groupetag","__api_collection_operation_name":"show_groupetags","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:19:34.874148+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:19:34.874221+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:19:34.874285+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:19:34.875031+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:19:34.886124+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:19:34.890043+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:19:34.890581+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:19:34.890726+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:19:34.890769+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:19:34.893587+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot resolve argument $Groupetag of "App\Controller\GroupetagController::showGroupetag()": Cannot determine controller argument for "App\Controller\GroupetagController::showGroupetag()": the $Groupetag argument is type-hinted with the non-existent class or interface: "App\Controller\GroupetagRepository". Did you forget to add a use statement?" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/dependency-injection/Container.php line 435 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot resolve argument $Groupetag of \"App\\Controller\\GroupetagController::showGroupetag()\": Cannot determine controller argument for \"App\\Controller\\GroupetagController::showGroupetag()\": the $Groupetag argument is type-hinted with the non-existent class or interface: \"App\\Controller\\GroupetagRepository\". Did you forget to add a use statement? at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/dependency-injection/Container.php:435)"} []
[2020-08-07T23:20:16.013141+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"Groupetag","__api_collection_operation_name":"show_groupetags","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:20:16.013996+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:20:16.014061+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:16.014115+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:16.014859+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:16.024696+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:20:16.027938+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:20:16.028586+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:16.028749+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:16.028787+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:16.029720+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot resolve argument $Groupetag of "App\Controller\GroupetagController::showGroupetag()": Cannot determine controller argument for "App\Controller\GroupetagController::showGroupetag()": the $Groupetag argument is type-hinted with the non-existent class or interface: "App\Controller\GroupetagRepository". Did you forget to add a use statement?" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/dependency-injection/Container.php line 435 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot resolve argument $Groupetag of \"App\\Controller\\GroupetagController::showGroupetag()\": Cannot determine controller argument for \"App\\Controller\\GroupetagController::showGroupetag()\": the $Groupetag argument is type-hinted with the non-existent class or interface: \"App\\Controller\\GroupetagRepository\". Did you forget to add a use statement? at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/dependency-injection/Container.php:435)"} []
[2020-08-07T23:20:40.953110+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"Groupetag","__api_collection_operation_name":"show_groupetags","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:20:40.954095+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:20:40.954136+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:40.954175+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:40.954688+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:40.955368+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:20:40.956751+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:20:40.957219+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:40.957326+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:40.957364+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:40.958868+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:20:40.959314+00:00] php.CRITICAL: Uncaught Error: Class 'App\Controller\Response' not found {"exception":"[object] (Error(code: 0): Class 'App\\Controller\\Response' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:41)"} []
[2020-08-07T23:20:40.998697+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load class "Response" from namespace "App\Controller". Did you forget a "use" statement for e.g. "Symfony\Flex\Response" or "Symfony\Component\HttpFoundation\Response"?" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php line 41 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load class \"Response\" from namespace \"App\\Controller\".\nDid you forget a \"use\" statement for e.g. \"Symfony\\Flex\\Response\" or \"Symfony\\Component\\HttpFoundation\\Response\"? at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:41)"} []
[2020-08-07T23:20:54.595761+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetags","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:20:54.597809+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:20:54.597880+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:54.597932+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:54.598576+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:54.606865+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:20:54.610120+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:20:54.610823+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:54.611004+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:54.611065+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:20:54.614319+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:20:54.615654+00:00] php.CRITICAL: Uncaught Error: Class 'App\Controller\Response' not found {"exception":"[object] (Error(code: 0): Class 'App\\Controller\\Response' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:42)"} []
[2020-08-07T23:20:54.646302+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load class "Response" from namespace "App\Controller". Did you forget a "use" statement for e.g. "Symfony\Flex\Response" or "Symfony\Component\HttpFoundation\Response"?" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php line 42 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load class \"Response\" from namespace \"App\\Controller\".\nDid you forget a \"use\" statement for e.g. \"Symfony\\Flex\\Response\" or \"Symfony\\Component\\HttpFoundation\\Response\"? at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:42)"} []
[2020-08-07T23:21:10.589269+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetags","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:21:10.590094+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:21:10.590156+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:21:10.590207+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:21:10.590868+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:21:10.597795+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:21:10.600643+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:21:10.601193+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:21:10.601292+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:21:10.601328+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:21:10.602952+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:23:27.765260+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetags","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:23:27.766300+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:23:27.766351+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:23:27.766398+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:23:27.767078+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:23:27.767909+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:23:27.769596+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:23:27.770107+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:23:27.770204+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:23:27.770235+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:23:27.771791+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:23:50.515410+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetags","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:23:50.517241+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:23:50.517295+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:23:50.517348+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:23:50.517986+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:23:50.526064+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:23:50.530163+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:23:50.530776+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:23:50.530893+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:23:50.530924+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:23:50.534155+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:24:53.452565+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetags","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:24:53.453202+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:24:53.453237+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:24:53.453274+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:24:53.453769+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:24:53.454228+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:24:53.455601+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:24:53.456004+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:24:53.456095+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:24:53.456122+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:24:53.456928+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:26:59.453603+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetags","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:26:59.454596+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:26:59.454637+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:26:59.454677+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:26:59.455156+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:26:59.455815+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:26:59.457312+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:26:59.457852+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:26:59.457971+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:26:59.458003+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:26:59.459648+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:27:08.813985+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetags","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:27:08.815673+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:27:08.815730+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:27:08.815784+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:27:08.816423+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:27:08.825911+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:27:08.829562+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:27:08.830014+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:27:08.830107+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:27:08.830133+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:27:08.832901+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:27:39.759051+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetags","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:27:39.760037+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:27:39.760093+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:27:39.760151+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:27:39.760970+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:27:39.769327+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:27:39.773254+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:27:39.774081+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:27:39.774282+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:27:39.774332+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:27:39.776425+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:28:41.829354+00:00] request.INFO: Matched route "app_groupecompetence_showgroupecompetence". {"route":"app_groupecompetence_showgroupecompetence","route_parameters":{"_route":"app_groupecompetence_showgroupecompetence","__controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence","__api_resource_class":"App\\Entity\\Groupecompetence","__api_collection_operation_name":"show_groupecompetence","_controller":"App\\Controller\\GroupecompetenceController::showGroupecompetence"},"request_uri":"http://127.0.0.1:8000/api/admin/groupecompetences","method":"GET"} []
[2020-08-07T23:28:41.830063+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:28:41.830107+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:28:41.830146+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:28:41.830635+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:28:41.837814+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:28:41.840721+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:28:41.841225+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:28:41.841335+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:28:41.841367+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:28:41.842649+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 [] []
[2020-08-07T23:28:41.844459+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.id = ? [11] []
[2020-08-07T23:28:41.863329+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 INNER JOIN groupecompetence_competence ON t0.id = groupecompetence_competence.competence_id WHERE groupecompetence_competence.groupecompetence_id = ? [1] []
[2020-08-07T23:28:41.866675+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [1] []
[2020-08-07T23:28:41.869005+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [2] []
[2020-08-07T23:28:41.870065+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [3] []
[2020-08-07T23:28:41.871148+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM competence t0 INNER JOIN groupecompetence_competence ON t0.id = groupecompetence_competence.competence_id WHERE groupecompetence_competence.groupecompetence_id = ? [2] []
[2020-08-07T23:28:41.871919+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [4] []
[2020-08-07T23:28:41.872512+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [5] []
[2020-08-07T23:28:41.873128+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.critere_evaluation AS critere_evaluation_3, t0.groupe_action AS groupe_action_4, t0.competence_id AS competence_id_5 FROM niveau t0 WHERE t0.competence_id = ? [6] []
[2020-08-07T23:30:38.636453+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetags","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:30:38.637078+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:30:38.637119+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:30:38.637166+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:30:38.637660+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:30:38.644519+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:30:38.647319+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:30:38.647807+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:30:38.647916+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:30:38.647944+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:30:38.649583+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:31:01.110929+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetags","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:31:01.111666+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:31:01.111707+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:31:01.111746+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:31:01.112319+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:31:01.119607+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:31:01.122749+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:31:01.123387+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:31:01.123506+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:31:01.123538+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:31:01.125450+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:32:11.093308+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetags","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:32:11.094331+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:32:11.094432+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:32:11.094492+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:32:11.095175+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:32:11.096074+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:32:11.097618+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:32:11.098112+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:32:11.098215+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:32:11.098244+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:32:11.099660+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:46:48.287686+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:46:48.288631+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:46:48.288670+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:46:48.288709+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:46:48.289180+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:46:48.289870+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:46:48.291282+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:46:48.291630+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:46:48.291711+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:46:48.291737+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:46:48.293151+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:46:48.296998+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-07T23:48:06.147805+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:48:06.148956+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:48:06.149003+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:06.149044+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:06.149571+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:06.150229+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:48:06.151765+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:48:06.152241+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:06.152338+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:06.152366+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:06.153787+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:48:06.157346+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-07T23:48:14.306576+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:48:14.308153+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:48:14.308201+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:14.308242+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:14.308737+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:14.317355+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:48:14.320630+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:48:14.321482+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:14.321625+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:14.321654+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:14.324970+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:48:14.452082+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-07T23:48:18.154841+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:48:18.155773+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:48:18.155838+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:18.155895+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:18.156662+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:18.168084+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:48:18.172056+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:48:18.172596+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:18.172726+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:18.172768+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:18.175165+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:48:18.178262+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-07T23:48:35.008695+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:48:35.009702+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:48:35.009742+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:35.009783+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:35.010282+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:35.010950+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:48:35.012422+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:48:35.012929+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:35.013011+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:35.013036+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:35.014512+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:48:35.018068+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-07T23:48:43.325474+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:48:43.327139+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:48:43.327215+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:43.327270+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:43.327807+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:43.337006+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:48:43.339790+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:48:43.340247+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:43.340345+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:43.340375+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:48:43.343887+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:48:43.470029+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-07T23:51:15.908726+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:51:15.909719+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:51:15.909760+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:15.909801+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:15.910403+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:15.911380+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:51:15.913281+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:51:15.913824+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:15.913917+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:15.913944+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:15.916066+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:51:15.920065+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-07T23:51:33.362016+00:00] request.INFO: Matched route "api_tags_show_tags_collection". {"route":"api_tags_show_tags_collection","route_parameters":{"_route":"api_tags_show_tags_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_collection_operation_name":"show_tags"},"request_uri":"http://127.0.0.1:8000/api/admin/tags","method":"GET"} []
[2020-08-07T23:51:33.363829+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:51:33.363888+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:33.363934+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:33.364528+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:33.372593+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:51:33.375683+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:51:33.376322+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:33.376438+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:33.376480+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:33.403073+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ ORDER BY t0_.id ASC LIMIT 10 [] []
[2020-08-07T23:51:33.408117+00:00] doctrine.DEBUG: SELECT count(t0_.id) AS sclr_0 FROM tag t0_ [] []
[2020-08-07T23:51:40.002583+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:51:40.003551+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:51:40.003620+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:40.003680+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:40.004468+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:40.012241+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:51:40.015382+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:51:40.016165+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:40.016332+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:40.016377+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:51:40.020346+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:51:40.022990+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-07T23:52:59.710646+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:52:59.711631+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:52:59.711668+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:52:59.711707+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:52:59.712202+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:52:59.712935+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:52:59.715009+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:52:59.715632+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:52:59.715733+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:52:59.715760+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:52:59.717343+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:52:59.722070+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-07T23:53:54.624845+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-07T23:53:54.633637+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["isabelle girard"] []
[2020-08-07T23:53:54.782177+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-08-07T23:53:54.782705+00:00] security.INFO: User has been authenticated successfully. {"username":"isabelle girard"} []
[2020-08-07T23:54:20.867646+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:54:20.868902+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:54:20.868970+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:54:20.869028+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:54:20.869777+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:54:20.878197+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["isabelle girard"] []
[2020-08-07T23:54:20.881012+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [2] []
[2020-08-07T23:54:20.881482+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"isabelle girard\", authenticated=true, roles=\"ROLE_CM\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:54:20.881598+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:54:20.881625+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:54:29.033618+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-07T23:54:29.041390+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:54:29.177951+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:54:29.178543+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-07T23:54:41.356617+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:54:41.357571+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:54:41.357638+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:54:41.357694+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:54:41.358442+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:54:41.366095+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:54:41.368901+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:54:41.369397+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:54:41.369494+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:54:41.369533+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:54:41.371131+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:54:41.373310+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-07T23:55:04.844656+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-07T23:55:04.845726+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:55:04.845773+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:55:04.845814+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:55:04.846338+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:55:04.847049+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:55:04.848523+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:55:04.848944+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:55:04.849032+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:55:04.849059+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:55:04.850486+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-07T23:55:04.853766+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-07T23:55:21.028276+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-08-07T23:55:21.030073+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:55:21.030125+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:55:21.030156+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:55:21.030648+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-07T23:55:54.590157+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /api//api/groupetags/1/tags"" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /api//api/groupetags/1/tags\" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api//api/groupetags/1/tags/\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-07T23:56:07.706970+00:00] request.INFO: Matched route "api_groupetags_tags_get_subresource". {"route":"api_groupetags_tags_get_subresource","route_parameters":{"_route":"api_groupetags_tags_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_subresource_operation_name":"api_groupetags_tags_get_subresource","_api_subresource_context":{"property":"tag","identifiers":[["id","App\\Entity\\Groupetag",true]],"collection":true,"operationId":"api_groupetags_tags_get_subresource"},"id":"1"},"request_uri":"http://127.0.0.1:8000/api/groupetags/1/tags","method":"GET"} []
[2020-08-07T23:56:07.708197+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:56:07.708279+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:56:07.708344+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:56:07.709174+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:56:07.717661+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:56:07.720940+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:56:07.721531+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:56:07.721646+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:56:07.721674+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:56:07.745000+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id IN (SELECT t1_.id FROM groupetag g2_ INNER JOIN groupetag_tag g3_ ON g2_.id = g3_.groupetag_id INNER JOIN tag t1_ ON t1_.id = g3_.tag_id WHERE g2_.id = ?) ORDER BY t0_.id ASC LIMIT 10 [1] []
[2020-08-07T23:56:07.747082+00:00] doctrine.DEBUG: SELECT count(t0_.id) AS sclr_0 FROM tag t0_ WHERE t0_.id IN (SELECT t1_.id FROM groupetag g2_ INNER JOIN groupetag_tag g3_ ON g2_.id = g3_.groupetag_id INNER JOIN tag t1_ ON t1_.id = g3_.tag_id WHERE g2_.id = ?) [1] []
[2020-08-07T23:56:40.118581+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /api/groupetags/1/"" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /api/groupetags/1/\" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/groupetags/1\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-07T23:56:41.734082+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /api/groupetags/1"" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /api/groupetags/1\" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/groupetags/1/\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-07T23:56:51.607275+00:00] request.INFO: Matched route "api_groupetags_get_item". {"route":"api_groupetags_get_item","route_parameters":{"_route":"api_groupetags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Groupetag","_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"GET"} []
[2020-08-07T23:56:51.607898+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:56:51.607941+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:56:51.607981+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:56:51.608470+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:56:51.615125+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:56:51.617955+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:56:51.618450+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:56:51.618542+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:56:51.618569+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:56:51.625948+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, t1_.id AS id_2, t1_.libelle AS libelle_3, t1_.descriptif AS descriptif_4 FROM groupetag g0_ LEFT JOIN groupetag_tag g2_ ON g0_.id = g2_.groupetag_id LEFT JOIN tag t1_ ON t1_.id = g2_.tag_id WHERE g0_.id = ? [1] []
[2020-08-07T23:56:51.629046+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Vous n'avez pas ce privilege. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2020-08-07T23:56:51.629211+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Vous n'avez pas ce privilege." at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Vous n'avez pas ce privilege. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Vous n'avez pas ce privilege. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2020-08-07T23:57:22.119252+00:00] request.INFO: Matched route "api_groupetags_get_item". {"route":"api_groupetags_get_item","route_parameters":{"_route":"api_groupetags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Groupetag","_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"GET"} []
[2020-08-07T23:57:22.120350+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:57:22.120399+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:57:22.120443+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:57:22.121035+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:57:22.121810+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:57:22.123460+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:57:22.123952+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:57:22.124047+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:57:22.124073+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:57:22.127410+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, t1_.id AS id_2, t1_.libelle AS libelle_3, t1_.descriptif AS descriptif_4 FROM groupetag g0_ LEFT JOIN groupetag_tag g2_ ON g0_.id = g2_.groupetag_id LEFT JOIN tag t1_ ON t1_.id = g2_.tag_id WHERE g0_.id = ? [1] []
[2020-08-07T23:59:05.190998+00:00] request.INFO: Matched route "api_groupetags_update_groupetags_item". {"route":"api_groupetags_update_groupetags_item","route_parameters":{"_route":"api_groupetags_update_groupetags_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Groupetag","_api_item_operation_name":"update_groupetags","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-07T23:59:05.192432+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-07T23:59:05.192476+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:59:05.192514+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:59:05.193012+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:59:05.200461+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-07T23:59:05.203392+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-07T23:59:05.203860+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:59:05.203953+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:59:05.203979+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-07T23:59:05.211377+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, t1_.id AS id_2, t1_.libelle AS libelle_3, t1_.descriptif AS descriptif_4 FROM groupetag g0_ LEFT JOIN groupetag_tag g2_ ON g0_.id = g2_.groupetag_id LEFT JOIN tag t1_ ON t1_.id = g2_.tag_id WHERE g0_.id = ? [1] []
[2020-08-07T23:59:05.216170+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Vous n'avez pas ce privilege. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2020-08-07T23:59:05.216326+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Vous n'avez pas ce privilege." at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Vous n'avez pas ce privilege. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Vous n'avez pas ce privilege. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2020-08-08T00:36:07.003400+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-08T00:36:07.004962+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T00:36:07.136120+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T00:36:07.136670+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-08T00:43:38.442860+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T00:43:38.443945+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T00:43:38.443997+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T00:43:38.444042+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T00:43:38.444611+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T00:43:38.445364+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T00:43:38.446811+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T00:43:38.447166+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T00:43:38.447245+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T00:43:38.447270+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T00:43:38.448851+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined variable: Groupetag" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php line 68 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined variable: Groupetag at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:68)"} []
[2020-08-08T00:43:57.595126+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T00:43:57.596625+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T00:43:57.596667+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T00:43:57.596706+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T00:43:57.597250+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T00:43:57.604503+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T00:43:57.607354+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T00:43:57.607816+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T00:43:57.607913+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T00:43:57.607939+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T01:11:34.807250+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T01:11:34.807971+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T01:11:34.808020+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T01:11:34.808067+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T01:11:34.808419+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T01:11:34.808630+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T01:11:38.754152+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-08T01:11:38.764429+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T01:11:38.933508+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T01:11:38.934111+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-08T01:13:08.608762+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T01:13:08.609440+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T01:13:08.609478+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T01:13:08.609527+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T01:13:08.609883+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T01:13:08.610124+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T01:13:26.527398+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T01:13:26.528391+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T01:13:26.528458+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T01:13:26.528503+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T01:13:26.529063+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T01:13:26.538301+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T01:13:26.542077+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T01:13:26.542818+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T01:13:26.542950+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T01:13:26.542991+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T01:13:26.546032+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T02:12:01.491444+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-08T02:12:01.492406+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:12:01.492443+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:12:01.492482+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:12:01.492774+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:12:01.492956+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:12:06.756089+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-08T02:12:06.766712+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:12:06.932643+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:12:06.933114+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-08T02:12:38.644969+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-08T02:12:38.646142+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:12:38.646199+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:12:38.646250+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:12:38.646805+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:12:38.654648+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:12:38.657659+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:12:38.658159+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:12:38.658256+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:12:38.658284+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:12:38.661372+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 [] []
[2020-08-08T02:12:38.673728+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T02:13:39.587264+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetag","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:13:39.587894+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:13:39.587931+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:13:39.587970+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:13:39.588619+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:13:39.596125+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:13:39.599491+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:13:39.600211+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:13:39.600332+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:13:39.600367+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:13:39.601833+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Serializer\Exception\NotEncodableValueException: "Syntax error" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/serializer/Encoder/JsonDecode.php line 92 {"exception":"[object] (Symfony\\Component\\Serializer\\Exception\\NotEncodableValueException(code: 0): Syntax error at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/serializer/Encoder/JsonDecode.php:92)"} []
[2020-08-08T02:14:04.928793+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetag","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:14:04.929977+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:14:04.930060+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:14:04.930122+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:14:04.930985+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:14:04.939072+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:14:04.942529+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:14:04.943026+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:14:04.943121+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:14:04.943147+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:14:04.944120+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Serializer\Exception\NotEncodableValueException: "Syntax error" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/serializer/Encoder/JsonDecode.php line 92 {"exception":"[object] (Symfony\\Component\\Serializer\\Exception\\NotEncodableValueException(code: 0): Syntax error at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/serializer/Encoder/JsonDecode.php:92)"} []
[2020-08-08T02:14:58.458700+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetag","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:14:58.459355+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:14:58.459394+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:14:58.459432+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:14:58.459989+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:14:58.467354+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:14:58.470812+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:14:58.471655+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:14:58.471830+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:14:58.471884+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:14:58.473539+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Serializer\Exception\NotEncodableValueException: "Syntax error" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/serializer/Encoder/JsonDecode.php line 92 {"exception":"[object] (Symfony\\Component\\Serializer\\Exception\\NotEncodableValueException(code: 0): Syntax error at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/serializer/Encoder/JsonDecode.php:92)"} []
[2020-08-08T02:15:38.463257+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetag","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:15:38.463975+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:15:38.464024+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:15:38.464064+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:15:38.464598+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:15:38.471763+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:15:38.475167+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:15:38.475711+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:15:38.475843+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:15:38.475883+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:15:38.476876+00:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Groupetag::setDescriptif() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Groupetag::setDescriptif() at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:48)"} []
[2020-08-08T02:15:38.477626+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setDescriptif" of class "App\Entity\Groupetag"." at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php line 48 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setDescriptif\" of class \"App\\Entity\\Groupetag\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:48)"} []
[2020-08-08T02:15:53.693099+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetag","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:15:53.694216+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:15:53.694293+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:15:53.694355+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:15:53.695137+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:15:53.702859+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:15:53.706976+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:15:53.707794+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:15:53.707924+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:15:53.707966+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:18:41.947634+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetag","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:18:41.948286+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:18:41.948324+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:18:41.948362+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:18:41.948932+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:18:41.956723+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:18:41.959585+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:18:41.960174+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:18:41.960287+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:18:41.960319+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:19:32.800813+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetag","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:19:32.801758+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:19:32.801809+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:19:32.801862+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:19:32.802686+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:19:32.813180+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:19:32.816413+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:19:32.817165+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:19:32.817297+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:19:32.817329+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:22:51.296341+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetag","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:22:51.297269+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:22:51.297324+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:22:51.297380+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:22:51.298250+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:22:51.306326+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:22:51.309222+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:22:51.309810+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:22:51.309945+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:22:51.309977+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:24:54.593367+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetag","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:24:54.594043+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:24:54.594085+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:24:54.594124+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:24:54.594697+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:24:54.603302+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:24:54.607584+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:24:54.608255+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:24:54.608387+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:24:54.608429+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:24:54.609404+00:00] php.CRITICAL: Uncaught Error: Class 'App\Controller\Tag' not found {"exception":"[object] (Error(code: 0): Class 'App\\Controller\\Tag' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:53)"} []
[2020-08-08T02:24:54.644862+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\ClassNotFoundError: "Attempted to load class "Tag" from namespace "App\Controller". Did you forget a "use" statement for e.g. "phpDocumentor\Reflection\DocBlock\Tag", "Laminas\Code\Generator\DocBlock\Tag" or "App\Entity\Tag"?" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php line 53 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\ClassNotFoundError(code: 0): Attempted to load class \"Tag\" from namespace \"App\\Controller\".\nDid you forget a \"use\" statement for e.g. \"phpDocumentor\\Reflection\\DocBlock\\Tag\", \"Laminas\\Code\\Generator\\DocBlock\\Tag\" or \"App\\Entity\\Tag\"? at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:53)"} []
[2020-08-08T02:25:15.253047+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetag","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:25:15.253778+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:25:15.253822+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:25:15.253862+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:25:15.254418+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:25:15.263430+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:25:15.267108+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:25:15.267724+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:25:15.267827+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:25:15.267861+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:26:27.397473+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetag","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:26:27.398530+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:26:27.398586+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:26:27.398628+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:26:27.399306+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:26:27.407136+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:26:27.409836+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:26:27.410198+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:26:27.410296+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:26:27.410327+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:27:48.380318+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:27:48.381378+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:27:48.381422+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:27:48.381462+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:27:48.381978+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:27:48.382808+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:27:48.384822+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:27:48.385396+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:27:48.385533+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:27:48.385574+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:31:08.576208+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:31:08.577942+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:31:08.577999+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:31:08.578048+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:31:08.578784+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:31:08.588944+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:31:08.595906+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:31:08.596833+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:31:08.597053+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:31:08.597102+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:31:08.607795+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\ORMInvalidArgumentException: "Multiple non-persisted new entities were found through the given association graph:   * A new entity was found through the relationship 'App\Entity\Groupetag#tag' that was not configured to cascade persist operations for entity: App\Entity\Tag@000000007f8c20e60000000071321edf. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={"persist"}). If you cannot find out which entity causes the problem implement 'App\Entity\Tag#__toString()' to get a clue.  * A new entity was found through the relationship 'App\Entity\Groupetag#tag' that was not configured to cascade persist operations for entity: App\Entity\Tag@000000007f8c20e40000000071321edf. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={"persist"}). If you cannot find out which entity causes the problem implement 'App\Entity\Tag#__toString()' to get a clue." at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/orm/lib/Doctrine/ORM/ORMInvalidArgumentException.php line 105 {"exception":"[object] (Doctrine\\ORM\\ORMInvalidArgumentException(code: 0): Multiple non-persisted new entities were found through the given association graph:\n\n * A new entity was found through the relationship 'App\\Entity\\Groupetag#tag' that was not configured to cascade persist operations for entity: App\\Entity\\Tag@000000007f8c20e60000000071321edf. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={\"persist\"}). If you cannot find out which entity causes the problem implement 'App\\Entity\\Tag#__toString()' to get a clue.\n * A new entity was found through the relationship 'App\\Entity\\Groupetag#tag' that was not configured to cascade persist operations for entity: App\\Entity\\Tag@000000007f8c20e40000000071321edf. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={\"persist\"}). If you cannot find out which entity causes the problem implement 'App\\Entity\\Tag#__toString()' to get a clue. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/orm/lib/Doctrine/ORM/ORMInvalidArgumentException.php:105)"} []
[2020-08-08T02:32:08.289172+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:32:08.290194+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:32:08.290245+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:32:08.290300+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:32:08.291252+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:32:08.291951+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:32:08.293380+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:32:08.293852+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:32:08.293949+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:32:08.293976+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:32:08.296095+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-08T02:32:08.297000+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Angular","2":"Descriptif de ce tag"} []
[2020-08-08T02:32:08.297333+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Symfony","2":"Descriptif de ce tag"} []
[2020-08-08T02:32:08.297594+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle) VALUES (?) {"1":"FrontEnd"} []
[2020-08-08T02:32:08.302973+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [2,5] []
[2020-08-08T02:32:08.303348+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [2,6] []
[2020-08-08T02:32:08.303532+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-08T02:46:52.988770+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:46:52.989711+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:46:52.989751+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:46:52.989790+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:46:52.990566+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:46:52.991213+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:46:52.992765+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:46:52.993169+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:46:52.993253+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:46:52.993283+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:46:52.994911+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Serializer\Exception\NotEncodableValueException: "Syntax error" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/serializer/Encoder/JsonDecode.php line 92 {"exception":"[object] (Symfony\\Component\\Serializer\\Exception\\NotEncodableValueException(code: 0): Syntax error at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/serializer/Encoder/JsonDecode.php:92)"} []
[2020-08-08T02:47:17.603032+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:47:17.604592+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:47:17.604648+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:47:17.604690+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:47:17.605252+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:47:17.614338+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:47:17.617231+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:47:17.617780+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:47:17.617907+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:47:17.617951+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:51:49.408726+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T02:51:49.409688+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T02:51:49.409733+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:51:49.409773+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:51:49.410358+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:51:49.411024+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T02:51:49.412365+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T02:51:49.412835+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:51:49.412925+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:51:49.412952+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T02:51:49.414718+00:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Groupetag::setUser() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Groupetag::setUser() at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:65)"} []
[2020-08-08T02:51:49.415078+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setUser" of class "App\Entity\Groupetag"." at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php line 65 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setUser\" of class \"App\\Entity\\Groupetag\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:65)"} []
[2020-08-08T03:01:16.753764+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-08T03:01:16.755803+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:01:16.755866+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:01:16.755918+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:01:16.756632+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:01:16.765926+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:01:16.769327+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:01:16.770033+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:01:16.770157+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:01:16.770188+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:01:16.776454+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-08T03:01:16.776690+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Api","2":"Descriptif de ce tag"} []
[2020-08-08T03:01:16.777035+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle) VALUES (?) {"1":"Fullstack"} []
[2020-08-08T03:01:16.777302+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [3,7] []
[2020-08-08T03:01:16.779320+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-08T03:02:45.175283+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-08T03:02:45.183867+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:02:45.335940+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:02:45.336503+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-08T03:03:48.329911+00:00] request.INFO: Matched route "api_groupetags_get_item". {"route":"api_groupetags_get_item","route_parameters":{"_route":"api_groupetags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Groupetag","_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"GET"} []
[2020-08-08T03:03:48.330850+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:03:48.330921+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:03:48.330994+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:03:48.331545+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:03:48.339611+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:03:48.343924+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:03:48.344592+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:03:48.344745+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:03:48.344788+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:03:48.351340+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, t1_.id AS id_2, t1_.libelle AS libelle_3, t1_.descriptif AS descriptif_4 FROM groupetag g0_ LEFT JOIN groupetag_tag g2_ ON g0_.id = g2_.groupetag_id LEFT JOIN tag t1_ ON t1_.id = g2_.tag_id WHERE g0_.id = ? [1] []
[2020-08-08T03:06:00.849326+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:06:00.850025+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:06:00.850066+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:06:00.850107+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:06:00.850831+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:06:00.861537+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:06:00.865261+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:06:00.865791+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:06:00.865919+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:06:00.865960+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:16:54.168670+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:16:54.169384+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:16:54.169428+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:16:54.169477+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:16:54.170071+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:16:54.177623+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:16:54.180798+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:16:54.181316+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:16:54.181418+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:16:54.181446+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:16:54.184209+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:17:59.585558+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:17:59.586293+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:17:59.586332+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:17:59.586370+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:17:59.586931+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:17:59.598107+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:17:59.601828+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:17:59.602496+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:17:59.602649+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:17:59.602686+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:17:59.606355+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:26:50.735626+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:26:50.736608+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:26:50.736674+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:26:50.736735+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:26:50.737662+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:26:50.745907+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:26:50.749007+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:26:50.749524+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:26:50.749657+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:26:50.749701+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:26:50.752311+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:26:50.752795+00:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Groupetag::setDescriptif() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Groupetag::setDescriptif() at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:172)"} []
[2020-08-08T03:26:50.753158+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setDescriptif" of class "App\Entity\Groupetag"." at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php line 172 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setDescriptif\" of class \"App\\Entity\\Groupetag\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:172)"} []
[2020-08-08T03:27:46.034899+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:27:46.035680+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:27:46.035733+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:27:46.035782+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:27:46.036416+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:27:46.044316+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:27:46.047767+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:27:46.048554+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:27:46.048725+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:27:46.048766+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:27:46.052333+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:27:46.052947+00:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Groupetag::setDescriptif() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Groupetag::setDescriptif() at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:170)"} []
[2020-08-08T03:27:46.053272+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setDescriptif" of class "App\Entity\Groupetag"." at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php line 170 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setDescriptif\" of class \"App\\Entity\\Groupetag\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:170)"} []
[2020-08-08T03:28:16.470139+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:28:16.471026+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:28:16.471082+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:28:16.471127+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:28:16.471894+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:28:16.482303+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:28:16.485859+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:28:16.486336+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:28:16.486430+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:28:16.486456+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:28:16.489299+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:28:16.489749+00:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Groupetag::addGroupetag() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Groupetag::addGroupetag() at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:174)"} []
[2020-08-08T03:28:16.490123+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "addGroupetag" of class "App\Entity\Groupetag"." at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php line 174 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"addGroupetag\" of class \"App\\Entity\\Groupetag\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:174)"} []
[2020-08-08T03:29:35.254526+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:29:35.255317+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:29:35.255377+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:29:35.255443+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:29:35.256201+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:29:35.268943+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:29:35.272733+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:29:35.273324+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:29:35.273430+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:29:35.273460+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:29:35.276300+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:29:35.276999+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T03:29:35.278814+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-08T03:29:35.279074+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP7","2":"PHP7"} []
[2020-08-08T03:29:35.279547+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [1,8] []
[2020-08-08T03:29:35.280996+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-08T03:30:05.155035+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:30:05.155773+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:30:05.155829+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:30:05.155872+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:30:05.156697+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:30:05.164786+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:30:05.168089+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:30:05.168621+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:30:05.168733+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:30:05.168760+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:30:05.171314+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:30:05.172060+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined variable: grcmp" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php line 149 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined variable: grcmp at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:149)"} []
[2020-08-08T03:31:21.078585+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:31:21.079912+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:31:21.079976+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:31:21.080037+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:31:21.081518+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:31:21.092926+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:31:21.096328+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:31:21.096857+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:31:21.096956+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:31:21.096983+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:31:21.099755+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:31:21.100349+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:31:21.101860+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-08T03:31:21.102057+00:00] doctrine.DEBUG: UPDATE tag SET libelle = ? WHERE id = ? ["PHP7",1] []
[2020-08-08T03:31:21.102420+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-08T03:31:21.107371+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T03:32:36.419115+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:32:36.419774+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:32:36.419814+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:32:36.419860+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:32:36.420667+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:32:36.429339+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:32:36.433137+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:32:36.433839+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:32:36.433968+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:32:36.434012+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:32:36.437029+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:32:36.437649+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:32:36.442497+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T03:32:42.836090+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:32:42.837043+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:32:42.837095+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:32:42.837137+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:32:42.837809+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:32:42.847888+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:32:42.850908+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:32:42.851434+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:32:42.851531+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:32:42.851560+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:32:42.854739+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:32:42.855271+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:32:42.859540+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T03:33:25.255681+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:33:25.256653+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:33:25.256731+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:33:25.256796+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:33:25.257600+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:33:25.270196+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:33:25.273446+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:33:25.274134+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:33:25.274272+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:33:25.274307+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:33:25.277029+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:33:25.277560+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:33:25.433325+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T03:33:34.240407+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:33:34.241471+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:33:34.241561+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:33:34.241629+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:33:34.242396+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:33:34.251894+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:33:34.255417+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:33:34.255925+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:33:34.256025+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:33:34.256054+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:33:34.259434+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:33:34.260064+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:33:34.261459+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-08T03:33:34.261672+00:00] doctrine.DEBUG: UPDATE tag SET libelle = ? WHERE id = ? ["PHP8",1] []
[2020-08-08T03:33:34.262019+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-08T03:33:34.264053+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T03:34:22.988025+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:34:22.988964+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:34:22.989023+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:22.989075+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:22.989809+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:22.997534+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:34:23.000794+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:34:23.001528+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:23.001685+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:23.001724+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:23.005129+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:34:23.005774+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:34:23.011071+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T03:34:44.409840+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:34:44.410495+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:34:44.410533+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:44.410571+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:44.411071+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:44.411563+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:34:44.412995+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:34:44.413408+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:44.413525+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:44.413566+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:44.414599+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:34:44.415242+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:34:44.419413+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T03:34:54.213047+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:34:54.213730+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:34:54.213774+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:54.213814+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:54.214407+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:54.221943+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:34:54.226236+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:34:54.226803+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:54.226924+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:54.226956+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:34:54.230546+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:34:54.231216+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:34:54.234669+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T03:35:46.790609+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:35:46.791541+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:35:46.791609+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:35:46.791670+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:35:46.792419+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:35:46.803998+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:35:46.808525+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:35:46.809201+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:35:46.809353+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:35:46.809392+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:35:46.813201+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:35:46.813868+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T03:35:46.815922+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-08T03:35:46.816254+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Flutter","2":"Descriptif du tag de dev mobile"} []
[2020-08-08T03:35:46.816822+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [1,9] []
[2020-08-08T03:35:46.819085+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-08T03:44:55.682618+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:44:55.683313+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:44:55.683359+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:44:55.683400+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:44:55.684043+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:44:55.691549+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:44:55.694442+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:44:55.695035+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:44:55.695148+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:44:55.695177+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:44:55.698230+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:44:55.698741+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? [8] []
[2020-08-08T03:44:55.699126+00:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Tag::removeTag() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Tag::removeTag() at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:163)"} []
[2020-08-08T03:44:55.699443+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "removeTag" of class "App\Entity\Tag"." at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php line 163 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"removeTag\" of class \"App\\Entity\\Tag\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:163)"} []
[2020-08-08T03:45:19.485814+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:45:19.486560+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:45:19.486605+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:45:19.486650+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:45:19.487301+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:45:19.495643+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:45:19.498987+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:45:19.499583+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:45:19.499740+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:45:19.499781+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:45:19.502996+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:45:19.503566+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? [8] []
[2020-08-08T03:45:19.503996+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T03:45:19.506020+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-08T03:45:19.506446+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag WHERE groupetag_id = ? AND tag_id = ? [1,8] []
[2020-08-08T03:45:19.507078+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-08T03:47:28.970474+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:47:28.971168+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:47:28.971230+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:47:28.971285+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:47:28.971862+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:47:28.979302+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:47:28.982325+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:47:28.982892+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:47:28.982999+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:47:28.983027+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:47:28.985739+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:47:28.986319+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? [1] []
[2020-08-08T03:47:28.987574+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-08T03:47:28.987748+00:00] doctrine.DEBUG: UPDATE tag SET libelle = ? WHERE id = ? ["PH7 orienté objet",1] []
[2020-08-08T03:47:28.988133+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-08T03:47:28.991256+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T03:48:14.880996+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:48:14.881814+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:48:14.881858+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:48:14.881901+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:48:14.882490+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:48:14.890051+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:48:14.893812+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:48:14.894413+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:48:14.894535+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:48:14.894581+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:48:14.897210+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:48:14.897812+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? [1] []
[2020-08-08T03:48:14.899169+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-08T03:48:14.899397+00:00] doctrine.DEBUG: UPDATE tag SET descriptif = ? WHERE id = ? ["Descriptif du tag de devel [...]",1] []
[2020-08-08T03:48:14.900091+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-08T03:48:14.904510+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T03:49:14.448677+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:49:14.449407+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:49:14.449470+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:49:14.449525+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:49:14.450113+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:49:14.457548+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:49:14.461905+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:49:14.462559+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:49:14.462704+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:49:14.462748+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:49:14.465395+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:49:14.465866+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? [1] []
[2020-08-08T03:49:14.467528+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-08T03:49:14.467732+00:00] doctrine.DEBUG: UPDATE groupetag SET libelle = ? WHERE id = ? ["Tag dev fullstack",1] []
[2020-08-08T03:49:14.468177+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-08T03:49:14.471561+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T03:50:27.773808+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"PUT"} []
[2020-08-08T03:50:27.774699+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:50:27.774758+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:50:27.774816+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:50:27.775525+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:50:27.783056+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:50:27.786040+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:50:27.786519+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:50:27.786619+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:50:27.786647+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:50:27.789461+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM groupetag t0 WHERE t0.id = ? ["1"] []
[2020-08-08T03:50:27.790059+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? [1] []
[2020-08-08T03:50:27.790483+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-08T03:50:27.791837+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-08T03:50:27.792043+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Sécurité web","2":"Descriptif du tag de devel [...]"} []
[2020-08-08T03:50:27.792441+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [1,10] []
[2020-08-08T03:50:27.793628+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-08T03:52:20.507979+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-08T03:52:20.516053+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:52:20.671094+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:52:20.671610+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-08T03:52:43.282541+00:00] request.INFO: Matched route "api_groupetags_get_item". {"route":"api_groupetags_get_item","route_parameters":{"_route":"api_groupetags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Groupetag","_api_item_operation_name":"get","id":"tags"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/tags","method":"GET"} []
[2020-08-08T03:52:43.283544+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:52:43.283613+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:52:43.283672+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:52:43.284417+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:52:43.295074+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:52:43.298003+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:52:43.298520+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:52:43.298623+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:52:43.298652+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:52:43.304402+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, t1_.id AS id_2, t1_.libelle AS libelle_3, t1_.descriptif AS descriptif_4 FROM groupetag g0_ LEFT JOIN groupetag_tag g2_ ON g0_.id = g2_.groupetag_id LEFT JOIN tag t1_ ON t1_.id = g2_.tag_id WHERE g0_.id = ? [0] []
[2020-08-08T03:52:43.305199+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-08T03:53:01.062045+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /api/admin/groupetags/1/tags"" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /api/admin/groupetags/1/tags\" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/admin/groupetags/1/tags/\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-08T03:53:09.387098+00:00] request.INFO: Matched route "api_groupetags_tags_get_subresource". {"route":"api_groupetags_tags_get_subresource","route_parameters":{"_route":"api_groupetags_tags_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_subresource_operation_name":"api_groupetags_tags_get_subresource","_api_subresource_context":{"property":"tag","identifiers":[["id","App\\Entity\\Groupetag",true]],"collection":true,"operationId":"api_groupetags_tags_get_subresource"},"id":"1"},"request_uri":"http://127.0.0.1:8000/api/groupetags/1/tags","method":"GET"} []
[2020-08-08T03:53:09.388057+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T03:53:09.388117+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:53:09.388175+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:53:09.388928+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:53:09.397143+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T03:53:09.400936+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T03:53:09.401509+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:53:09.401619+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:53:09.401647+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T03:53:09.419402+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id IN (SELECT t1_.id FROM groupetag g2_ INNER JOIN groupetag_tag g3_ ON g2_.id = g3_.groupetag_id INNER JOIN tag t1_ ON t1_.id = g3_.tag_id WHERE g2_.id = ?) ORDER BY t0_.id ASC LIMIT 10 [1] []
[2020-08-08T03:53:09.423484+00:00] doctrine.DEBUG: SELECT count(t0_.id) AS sclr_0 FROM tag t0_ WHERE t0_.id IN (SELECT t1_.id FROM groupetag g2_ INNER JOIN groupetag_tag g3_ ON g2_.id = g3_.groupetag_id INNER JOIN tag t1_ ON t1_.id = g3_.tag_id WHERE g2_.id = ?) [1] []
[2020-08-08T04:00:00.643201+00:00] request.INFO: Matched route "api_groupetags_show_groupetags_tags_collection". {"route":"api_groupetags_show_groupetags_tags_collection","route_parameters":{"_route":"api_groupetags_show_groupetags_tags_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Groupetag","_api_collection_operation_name":"show_groupetags_tags"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/tags","method":"GET"} []
[2020-08-08T04:00:00.644449+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T04:00:00.644499+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:00.644541+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:00.645103+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:00.645925+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T04:00:00.647560+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T04:00:00.647974+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:00.648054+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:00.648079+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:00.655139+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1 FROM groupetag g0_ ORDER BY g0_.id ASC LIMIT 10 [] []
[2020-08-08T04:00:00.656681+00:00] doctrine.DEBUG: SELECT count(g0_.id) AS sclr_0 FROM groupetag g0_ [] []
[2020-08-08T04:00:45.505676+00:00] request.INFO: Matched route "api_groupetags_show_groupetags_tags_collection". {"route":"api_groupetags_show_groupetags_tags_collection","route_parameters":{"_route":"api_groupetags_show_groupetags_tags_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Groupetag","_api_collection_operation_name":"show_groupetags_tags"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/tags","method":"GET"} []
[2020-08-08T04:00:45.506734+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T04:00:45.506780+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:45.506824+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:45.507326+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:45.508003+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T04:00:45.509380+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T04:00:45.509803+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:45.509893+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:45.509919+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:45.515454+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1 FROM groupetag g0_ ORDER BY g0_.id ASC LIMIT 10 [] []
[2020-08-08T04:00:45.516946+00:00] doctrine.DEBUG: SELECT count(g0_.id) AS sclr_0 FROM groupetag g0_ [] []
[2020-08-08T04:00:53.974938+00:00] request.INFO: Matched route "api_groupetags_show_groupetags_tags_collection". {"route":"api_groupetags_show_groupetags_tags_collection","route_parameters":{"_route":"api_groupetags_show_groupetags_tags_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Groupetag","_api_collection_operation_name":"show_groupetags_tags"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/tags","method":"GET"} []
[2020-08-08T04:00:53.977068+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T04:00:53.977132+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:53.977190+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:53.977973+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:53.987836+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T04:00:53.990608+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T04:00:53.991137+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:53.991229+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:53.991255+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:00:54.129921+00:00] doctrine.DEBUG: SELECT DISTINCT g0_.id AS id_0, g0_.id AS id_1 FROM groupetag g0_ LEFT JOIN groupetag_tag g2_ ON g0_.id = g2_.groupetag_id LEFT JOIN tag t1_ ON t1_.id = g2_.tag_id ORDER BY g0_.id ASC LIMIT 10 [] []
[2020-08-08T04:00:54.132579+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, t1_.id AS id_2, t1_.libelle AS libelle_3, t1_.descriptif AS descriptif_4 FROM groupetag g0_ LEFT JOIN groupetag_tag g2_ ON g0_.id = g2_.groupetag_id LEFT JOIN tag t1_ ON t1_.id = g2_.tag_id WHERE g0_.id IN (?) ORDER BY g0_.id ASC [[1,2,3]] []
[2020-08-08T04:00:54.137628+00:00] doctrine.DEBUG: SELECT count(DISTINCT g0_.id) AS sclr_0 FROM groupetag g0_ LEFT JOIN groupetag_tag g2_ ON g0_.id = g2_.groupetag_id LEFT JOIN tag t1_ ON t1_.id = g2_.tag_id [] []
[2020-08-08T04:01:32.585540+00:00] request.INFO: Matched route "api_groupetags_tags_get_subresource". {"route":"api_groupetags_tags_get_subresource","route_parameters":{"_route":"api_groupetags_tags_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_subresource_operation_name":"api_groupetags_tags_get_subresource","_api_subresource_context":{"property":"tag","identifiers":[["id","App\\Entity\\Groupetag",true]],"collection":true,"operationId":"api_groupetags_tags_get_subresource"},"id":"1"},"request_uri":"http://127.0.0.1:8000/api/groupetags/1/tags","method":"GET"} []
[2020-08-08T04:01:32.586203+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T04:01:32.586247+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:01:32.586287+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:01:32.586796+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:01:32.594053+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T04:01:32.597263+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T04:01:32.597778+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:01:32.597879+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:01:32.597907+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:01:32.614136+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id IN (SELECT t1_.id FROM groupetag g2_ INNER JOIN groupetag_tag g3_ ON g2_.id = g3_.groupetag_id INNER JOIN tag t1_ ON t1_.id = g3_.tag_id WHERE g2_.id = ?) ORDER BY t0_.id ASC LIMIT 10 [1] []
[2020-08-08T04:01:32.617398+00:00] doctrine.DEBUG: SELECT count(t0_.id) AS sclr_0 FROM tag t0_ WHERE t0_.id IN (SELECT t1_.id FROM groupetag g2_ INNER JOIN groupetag_tag g3_ ON g2_.id = g3_.groupetag_id INNER JOIN tag t1_ ON t1_.id = g3_.tag_id WHERE g2_.id = ?) [1] []
[2020-08-08T04:12:44.500779+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-08-08T04:12:44.501776+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T04:12:44.501816+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:12:44.501851+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T04:12:44.502124+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-08T22:09:12.092088+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-08T22:09:12.159886+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T22:09:12.306398+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T22:09:12.307608+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-08T22:09:48.651119+00:00] request.INFO: Matched route "api_groupetags_get_item". {"route":"api_groupetags_get_item","route_parameters":{"_route":"api_groupetags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Groupetag","_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/1","method":"GET"} []
[2020-08-08T22:09:48.656093+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T22:09:48.656155+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:09:48.656207+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:09:48.658869+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:09:48.666996+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T22:09:48.672216+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T22:09:48.673194+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:09:48.673336+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:09:48.673373+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:09:48.729816+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, t1_.id AS id_2, t1_.libelle AS libelle_3, t1_.descriptif AS descriptif_4 FROM groupetag g0_ LEFT JOIN groupetag_tag g2_ ON g0_.id = g2_.groupetag_id LEFT JOIN tag t1_ ON t1_.id = g2_.tag_id WHERE g0_.id = ? [1] []
[2020-08-08T22:09:55.638589+00:00] request.INFO: Matched route "api_groupetags_get_item". {"route":"api_groupetags_get_item","route_parameters":{"_route":"api_groupetags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Groupetag","_api_item_operation_name":"get","id":"2"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/2","method":"GET"} []
[2020-08-08T22:09:55.639547+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T22:09:55.639609+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:09:55.639667+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:09:55.640432+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:09:55.651323+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T22:09:55.655429+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T22:09:55.655953+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:09:55.656095+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:09:55.656138+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:09:55.660881+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, t1_.id AS id_2, t1_.libelle AS libelle_3, t1_.descriptif AS descriptif_4 FROM groupetag g0_ LEFT JOIN groupetag_tag g2_ ON g0_.id = g2_.groupetag_id LEFT JOIN tag t1_ ON t1_.id = g2_.tag_id WHERE g0_.id = ? [2] []
[2020-08-08T22:10:16.513768+00:00] request.INFO: Matched route "api_groupetags_tags_get_subresource". {"route":"api_groupetags_tags_get_subresource","route_parameters":{"_route":"api_groupetags_tags_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_subresource_operation_name":"api_groupetags_tags_get_subresource","_api_subresource_context":{"property":"tag","identifiers":[["id","App\\Entity\\Groupetag",true]],"collection":true,"operationId":"api_groupetags_tags_get_subresource"},"id":"1"},"request_uri":"http://127.0.0.1:8000/api/groupetags/1/tags","method":"GET"} []
[2020-08-08T22:10:16.514388+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T22:10:16.514443+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:10:16.514481+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:10:16.514964+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:10:16.522163+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T22:10:16.525060+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T22:10:16.525583+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:10:16.525677+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:10:16.525702+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:10:16.552507+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id IN (SELECT t1_.id FROM groupetag g2_ INNER JOIN groupetag_tag g3_ ON g2_.id = g3_.groupetag_id INNER JOIN tag t1_ ON t1_.id = g3_.tag_id WHERE g2_.id = ?) ORDER BY t0_.id ASC LIMIT 10 [1] []
[2020-08-08T22:10:16.556274+00:00] doctrine.DEBUG: SELECT count(t0_.id) AS sclr_0 FROM tag t0_ WHERE t0_.id IN (SELECT t1_.id FROM groupetag g2_ INNER JOIN groupetag_tag g3_ ON g2_.id = g3_.groupetag_id INNER JOIN tag t1_ ON t1_.id = g3_.tag_id WHERE g2_.id = ?) [1] []
[2020-08-08T22:11:10.490056+00:00] request.INFO: Matched route "api_groupetags_show_groupetags_tags_collection". {"route":"api_groupetags_show_groupetags_tags_collection","route_parameters":{"_route":"api_groupetags_show_groupetags_tags_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Groupetag","_api_collection_operation_name":"show_groupetags_tags"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/tags","method":"GET"} []
[2020-08-08T22:11:10.490727+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-08T22:11:10.490775+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:11:10.490814+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:11:10.491353+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:11:10.498232+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-08T22:11:10.501052+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-08T22:11:10.501539+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:11:10.501632+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:11:10.501658+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-08T22:11:10.518482+00:00] doctrine.DEBUG: SELECT DISTINCT g0_.id AS id_0, g0_.id AS id_1 FROM groupetag g0_ LEFT JOIN groupetag_tag g2_ ON g0_.id = g2_.groupetag_id LEFT JOIN tag t1_ ON t1_.id = g2_.tag_id ORDER BY g0_.id ASC LIMIT 10 [] []
[2020-08-08T22:11:10.521368+00:00] doctrine.DEBUG: SELECT g0_.id AS id_0, g0_.libelle AS libelle_1, t1_.id AS id_2, t1_.libelle AS libelle_3, t1_.descriptif AS descriptif_4 FROM groupetag g0_ LEFT JOIN groupetag_tag g2_ ON g0_.id = g2_.groupetag_id LEFT JOIN tag t1_ ON t1_.id = g2_.tag_id WHERE g0_.id IN (?) ORDER BY g0_.id ASC [[1,2,3]] []
[2020-08-08T22:11:10.525923+00:00] doctrine.DEBUG: SELECT count(DISTINCT g0_.id) AS sclr_0 FROM groupetag g0_ LEFT JOIN groupetag_tag g2_ ON g0_.id = g2_.groupetag_id LEFT JOIN tag t1_ ON t1_.id = g2_.tag_id [] []
[2020-08-09T16:48:18.346014+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-08-09T16:48:18.350060+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T16:48:18.350111+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:48:18.350141+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:48:18.350408+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-09T16:49:43.120955+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-09T16:49:43.142038+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T16:49:43.285803+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T16:49:43.287048+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-09T16:50:24.329285+00:00] request.INFO: Matched route "api_tags_show_tags_collection". {"route":"api_tags_show_tags_collection","route_parameters":{"_route":"api_tags_show_tags_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_collection_operation_name":"show_tags"},"request_uri":"http://127.0.0.1:8000/api/admin/tags","method":"GET"} []
[2020-08-09T16:50:24.330335+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T16:50:24.330383+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:50:24.330422+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:50:24.333928+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:50:24.341115+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T16:50:24.345306+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T16:50:24.346037+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:50:24.346161+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:50:24.346195+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:50:24.387936+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ ORDER BY t0_.id ASC LIMIT 10 [] []
[2020-08-09T16:50:24.395165+00:00] doctrine.DEBUG: SELECT count(t0_.id) AS sclr_0 FROM tag t0_ [] []
[2020-08-09T16:50:34.909186+00:00] request.INFO: Matched route "api_tags_get_item". {"route":"api_tags_get_item","route_parameters":{"_route":"api_tags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/tags/1","method":"GET"} []
[2020-08-09T16:50:34.909948+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T16:50:34.909993+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:50:34.910055+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:50:34.910695+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:50:34.918768+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T16:50:34.922079+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T16:50:34.922569+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:50:34.922687+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:50:34.922727+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:50:34.930072+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id = ? [1] []
[2020-08-09T16:50:34.938822+00:00] security.DEBUG: Access denied, the user is neither anonymous, nor remember-me. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Vous n'avez pas ce privilege. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2020-08-09T16:50:34.939996+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: "Vous n'avez pas ce privilege." at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/security-http/Firewall/ExceptionListener.php line 137 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\AccessDeniedHttpException(code: 0): Vous n'avez pas ce privilege. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/security-http/Firewall/ExceptionListener.php:137)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Vous n'avez pas ce privilege. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/Security/EventListener/DenyAccessListener.php:104)"} []
[2020-08-09T16:57:42.753400+00:00] request.INFO: Matched route "api_tags_get_item". {"route":"api_tags_get_item","route_parameters":{"_route":"api_tags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/tags/1","method":"GET"} []
[2020-08-09T16:57:42.754458+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T16:57:42.754508+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:42.754561+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:42.755130+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:42.755806+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T16:57:42.757309+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T16:57:42.757765+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:42.757845+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:42.757870+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:42.760078+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id = ? [1] []
[2020-08-09T16:57:47.748193+00:00] request.INFO: Matched route "api_tags_get_item". {"route":"api_tags_get_item","route_parameters":{"_route":"api_tags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_item_operation_name":"get","id":"2"},"request_uri":"http://127.0.0.1:8000/api/admin/tags/2","method":"GET"} []
[2020-08-09T16:57:47.749670+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T16:57:47.749722+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:47.749762+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:47.750266+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:47.759981+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T16:57:47.762773+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T16:57:47.763271+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:47.763373+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:47.763398+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:47.766197+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id = ? [2] []
[2020-08-09T16:57:51.292416+00:00] request.INFO: Matched route "api_tags_get_item". {"route":"api_tags_get_item","route_parameters":{"_route":"api_tags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_item_operation_name":"get","id":"3"},"request_uri":"http://127.0.0.1:8000/api/admin/tags/3","method":"GET"} []
[2020-08-09T16:57:51.293321+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T16:57:51.293383+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:51.293436+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:51.294151+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:51.303869+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T16:57:51.307171+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T16:57:51.307678+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:51.307778+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:51.307805+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:51.310158+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id = ? [3] []
[2020-08-09T16:57:56.601540+00:00] request.INFO: Matched route "api_tags_get_item". {"route":"api_tags_get_item","route_parameters":{"_route":"api_tags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_item_operation_name":"get","id":"4"},"request_uri":"http://127.0.0.1:8000/api/admin/tags/4","method":"GET"} []
[2020-08-09T16:57:56.602415+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T16:57:56.602472+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:56.602528+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:56.603220+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:56.610279+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T16:57:56.613528+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T16:57:56.613988+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:56.614074+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:56.614099+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:56.616298+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id = ? [4] []
[2020-08-09T16:57:59.029516+00:00] request.INFO: Matched route "api_tags_get_item". {"route":"api_tags_get_item","route_parameters":{"_route":"api_tags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_item_operation_name":"get","id":"("},"request_uri":"http://127.0.0.1:8000/api/admin/tags/(","method":"GET"} []
[2020-08-09T16:57:59.030482+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T16:57:59.030554+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:59.030610+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:59.031388+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:59.040738+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T16:57:59.043838+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T16:57:59.044359+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:59.044458+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:59.044485+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:57:59.046773+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id = ? [0] []
[2020-08-09T16:57:59.047864+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-09T16:58:01.650718+00:00] request.INFO: Matched route "api_tags_get_item". {"route":"api_tags_get_item","route_parameters":{"_route":"api_tags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_item_operation_name":"get","id":"5"},"request_uri":"http://127.0.0.1:8000/api/admin/tags/5","method":"GET"} []
[2020-08-09T16:58:01.651537+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T16:58:01.651610+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:01.651671+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:01.652364+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:01.662663+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T16:58:01.666342+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T16:58:01.666874+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:01.666958+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:01.666992+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:01.668760+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id = ? [5] []
[2020-08-09T16:58:05.761259+00:00] request.INFO: Matched route "api_tags_get_item". {"route":"api_tags_get_item","route_parameters":{"_route":"api_tags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_item_operation_name":"get","id":"8"},"request_uri":"http://127.0.0.1:8000/api/admin/tags/8","method":"GET"} []
[2020-08-09T16:58:05.761915+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T16:58:05.761958+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:05.761995+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:05.762505+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:05.771970+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T16:58:05.775912+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T16:58:05.776516+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:05.776646+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:05.776683+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:05.779733+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id = ? [8] []
[2020-08-09T16:58:09.107826+00:00] request.INFO: Matched route "api_tags_get_item". {"route":"api_tags_get_item","route_parameters":{"_route":"api_tags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_item_operation_name":"get","id":"10"},"request_uri":"http://127.0.0.1:8000/api/admin/tags/10","method":"GET"} []
[2020-08-09T16:58:09.108950+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T16:58:09.109014+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:09.109084+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:09.109746+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:09.119919+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T16:58:09.123684+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T16:58:09.124221+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:09.124345+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:09.124382+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:09.127618+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id = ? [10] []
[2020-08-09T16:58:12.243733+00:00] request.INFO: Matched route "api_tags_get_item". {"route":"api_tags_get_item","route_parameters":{"_route":"api_tags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_item_operation_name":"get","id":"13"},"request_uri":"http://127.0.0.1:8000/api/admin/tags/13","method":"GET"} []
[2020-08-09T16:58:12.244789+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T16:58:12.244864+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:12.244909+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:12.245667+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:12.254714+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T16:58:12.257508+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T16:58:12.258005+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:12.258108+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:12.258135+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:12.260460+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id = ? [13] []
[2020-08-09T16:58:12.261240+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-09T16:58:14.374427+00:00] request.INFO: Matched route "api_tags_get_item". {"route":"api_tags_get_item","route_parameters":{"_route":"api_tags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_item_operation_name":"get","id":"12"},"request_uri":"http://127.0.0.1:8000/api/admin/tags/12","method":"GET"} []
[2020-08-09T16:58:14.375087+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T16:58:14.375149+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:14.375215+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:14.375836+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:14.382343+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T16:58:14.385089+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T16:58:14.385544+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:14.385618+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:14.385643+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:14.387381+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id = ? [12] []
[2020-08-09T16:58:14.387995+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-09T16:58:16.148630+00:00] request.INFO: Matched route "api_tags_get_item". {"route":"api_tags_get_item","route_parameters":{"_route":"api_tags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_item_operation_name":"get","id":"11"},"request_uri":"http://127.0.0.1:8000/api/admin/tags/11","method":"GET"} []
[2020-08-09T16:58:16.149612+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T16:58:16.149687+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:16.149746+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:16.150462+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:16.157515+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T16:58:16.160284+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T16:58:16.160829+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:16.160931+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:16.160958+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:16.163239+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id = ? [11] []
[2020-08-09T16:58:16.164054+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-09T16:58:18.178247+00:00] request.INFO: Matched route "api_tags_get_item". {"route":"api_tags_get_item","route_parameters":{"_route":"api_tags_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_item_operation_name":"get","id":"10"},"request_uri":"http://127.0.0.1:8000/api/admin/tags/10","method":"GET"} []
[2020-08-09T16:58:18.178895+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T16:58:18.178952+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:18.178997+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:18.179538+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:18.186793+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T16:58:18.189837+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T16:58:18.190317+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:18.190410+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:18.190449+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T16:58:18.192350+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id = ? [10] []
[2020-08-09T17:00:08.927785+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-09T17:00:08.935548+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T17:00:09.068187+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T17:00:09.068734+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-09T17:00:30.034301+00:00] request.INFO: Matched route "api_tags_add_groupetags_collection". {"route":"api_tags_add_groupetags_collection","route_parameters":{"_route":"api_tags_add_groupetags_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_collection_operation_name":"add_groupetags"},"request_uri":"http://127.0.0.1:8000/api/admin/tags","method":"POST"} []
[2020-08-09T17:00:30.034924+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T17:00:30.034971+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:00:30.035011+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:00:30.035630+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:00:30.042629+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T17:00:30.045547+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T17:00:30.045995+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:00:30.046087+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:00:30.046116+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:00:30.059514+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-09T17:00:30.060444+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Maquetter une appli","2":"Descriptif du tag de devel [...]"} []
[2020-08-09T17:00:30.060850+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-09T17:00:30.062049+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? [11] []
[2020-08-09T17:00:48.880562+00:00] request.INFO: Matched route "api_tags_show_tags_collection". {"route":"api_tags_show_tags_collection","route_parameters":{"_route":"api_tags_show_tags_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_collection_operation_name":"show_tags"},"request_uri":"http://127.0.0.1:8000/api/admin/tags","method":"GET"} []
[2020-08-09T17:00:48.881233+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T17:00:48.881281+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:00:48.881321+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:00:48.881842+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:00:48.888922+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T17:00:48.891676+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T17:00:48.892176+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:00:48.892274+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:00:48.892301+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:00:48.906993+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ ORDER BY t0_.id ASC LIMIT 10 [] []
[2020-08-09T17:00:48.911967+00:00] doctrine.DEBUG: SELECT count(t0_.id) AS sclr_0 FROM tag t0_ [] []
[2020-08-09T17:03:59.425248+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: "No route found for "PUT /api/admin/tags": Method Not Allowed (Allow: POST, GET)" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException(code: 0): No route found for \"PUT /api/admin/tags\": Method Not Allowed (Allow: POST, GET) at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php:140)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\MethodNotAllowedException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:42)"} []
[2020-08-09T17:04:11.455478+00:00] request.INFO: Matched route "api_tags_put_item". {"route":"api_tags_put_item","route_parameters":{"_route":"api_tags_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_item_operation_name":"put","id":"11"},"request_uri":"http://127.0.0.1:8000/api/admin/tags/11","method":"PUT"} []
[2020-08-09T17:04:11.456340+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T17:04:11.456396+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:04:11.456440+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:04:11.456722+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-09T17:04:11.457789+00:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-09T17:04:11.458734+00:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-09T17:04:32.000426+00:00] request.INFO: Matched route "api_tags_put_item". {"route":"api_tags_put_item","route_parameters":{"_route":"api_tags_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_item_operation_name":"put","id":"11"},"request_uri":"http://127.0.0.1:8000/api/admin/tags/11","method":"PUT"} []
[2020-08-09T17:04:32.001012+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T17:04:32.001068+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:04:32.001117+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:04:32.001652+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:04:32.009015+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T17:04:32.011835+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T17:04:32.012375+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:04:32.012477+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:04:32.012504+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T17:04:32.016366+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ WHERE t0_.id = ? [11] []
[2020-08-09T17:04:32.022861+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-09T17:04:32.023069+00:00] doctrine.DEBUG: UPDATE tag SET libelle = ? WHERE id = ? ["Maquetter une application",11] []
[2020-08-09T17:04:32.023517+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-09T17:04:32.024611+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? [11] []
[2020-08-09T17:32:33.737308+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-09T17:32:33.738776+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T17:32:33.870603+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T17:32:33.871131+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-09T17:33:48.952277+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: "No route found for "DELETE /api/admin/tags/11": Method Not Allowed (Allow: GET, PATCH, PUT)" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException(code: 0): No route found for \"DELETE /api/admin/tags/11\": Method Not Allowed (Allow: GET, PATCH, PUT) at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php:140)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\MethodNotAllowedException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:42)"} []
[2020-08-09T18:13:01.959874+00:00] app.ERROR: Exception occurred while flushing email queue: Connection could not be established with host localhost :stream_socket_client(): unable to connect to ssl://localhost:465 (Connection refused) [] []
[2020-08-09T18:15:05.910300+00:00] app.ERROR: Exception occurred while flushing email queue: Failed to authenticate on SMTP server with username "gueyefadel22@gmail.com" using 1 possible authenticators. Authenticator LOGIN returned Expected response code 235 but got code "535", with message "535-5.7.8 Username and Password not accepted. Learn more at 535 5.7.8  https://support.google.com/mail/?p=BadCredentials p3sm10364155edx.75 - gsmtp ". [] []
[2020-08-09T18:17:08.283479+00:00] app.ERROR: Exception occurred while flushing email queue: Failed to authenticate on SMTP server with username "gueyefadel22@gmail.com" using 1 possible authenticators. Authenticator LOGIN returned Expected response code 235 but got code "535", with message "535-5.7.8 Username and Password not accepted. Learn more at 535 5.7.8  https://support.google.com/mail/?p=BadCredentials gh25sm10969792ejb.109 - gsmtp ". [] []
[2020-08-09T18:18:47.848557+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: "No route found for "DELETE /api/admin/tags/11": Method Not Allowed (Allow: GET, PATCH, PUT)" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException(code: 0): No route found for \"DELETE /api/admin/tags/11\": Method Not Allowed (Allow: GET, PATCH, PUT) at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php:140)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\MethodNotAllowedException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:42)"} []
[2020-08-09T18:18:56.748333+00:00] request.INFO: Matched route "api_tags_show_tags_collection". {"route":"api_tags_show_tags_collection","route_parameters":{"_route":"api_tags_show_tags_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_collection_operation_name":"show_tags"},"request_uri":"http://127.0.0.1:8000/api/admin/tags","method":"GET"} []
[2020-08-09T18:18:56.750059+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T18:18:56.750115+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T18:18:56.750158+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T18:18:56.750855+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T18:18:56.751268+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T18:19:03.262137+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-09T18:19:03.272702+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T18:19:03.412407+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T18:19:03.412904+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-09T18:19:17.578408+00:00] request.INFO: Matched route "api_tags_show_tags_collection". {"route":"api_tags_show_tags_collection","route_parameters":{"_route":"api_tags_show_tags_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Tag","_api_collection_operation_name":"show_tags"},"request_uri":"http://127.0.0.1:8000/api/admin/tags","method":"GET"} []
[2020-08-09T18:19:17.579332+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-09T18:19:17.579390+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T18:19:17.579447+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T18:19:17.580169+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T18:19:17.584490+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-09T18:19:17.589717+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-09T18:19:17.590381+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T18:19:17.590540+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T18:19:17.590581+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-09T18:19:17.620439+00:00] doctrine.DEBUG: SELECT t0_.id AS id_0, t0_.libelle AS libelle_1, t0_.descriptif AS descriptif_2 FROM tag t0_ ORDER BY t0_.id ASC LIMIT 10 [] []
[2020-08-09T18:19:17.626631+00:00] doctrine.DEBUG: SELECT count(t0_.id) AS sclr_0 FROM tag t0_ [] []
[2020-08-09T18:20:35.387953+00:00] app.ERROR: Exception occurred while flushing email queue: Failed to authenticate on SMTP server with username "gueyefadel22@gmail.com" using 1 possible authenticators. Authenticator LOGIN returned Expected response code 235 but got code "535", with message "535-5.7.8 Username and Password not accepted. Learn more at 535 5.7.8  https://support.google.com/mail/?p=BadCredentials r6sm11069655ejd.55 - gsmtp ". [] []
[2020-08-09T18:23:04.186383+00:00] app.ERROR: Exception occurred while flushing email queue: Failed to authenticate on SMTP server with username "gueyefadel22@gmail.com" using 1 possible authenticators. Authenticator LOGIN returned Expected response code 235 but got code "535", with message "535-5.7.8 Username and Password not accepted. Learn more at 535 5.7.8  https://support.google.com/mail/?p=BadCredentials c20sm10398010edy.40 - gsmtp ". [] []
[2020-08-10T13:29:17.499005+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2020-08-10T13:29:17.648503+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico"" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-10T13:29:22.646210+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8002/api","method":"GET"} []
[2020-08-10T13:29:22.650920+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T13:29:22.650980+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T13:29:22.651017+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T13:29:22.651643+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-10T13:36:22.361310+00:00] console.ERROR: Error thrown while running command "'swiftmailer:send:email'". Message: "There are no commands defined in the "swiftmailer:send" namespace.  Did you mean one of these?     swiftmailer     swiftmailer:email     swiftmailer:spool" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\NamespaceNotFoundException(code: 0): There are no commands defined in the \"swiftmailer:send\" namespace.\n\nDid you mean one of these?\n    swiftmailer\n    swiftmailer:email\n    swiftmailer:spool at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/console/Application.php:574)","command":"'swiftmailer:send:email'","message":"There are no commands defined in the \"swiftmailer:send\" namespace.\n\nDid you mean one of these?\n    swiftmailer\n    swiftmailer:email\n    swiftmailer:spool"} []
[2020-08-10T13:37:08.667524+00:00] app.ERROR: Exception occurred while flushing email queue: Failed to authenticate on SMTP server with username "gueyefadel22@gmail.com" using 1 possible authenticators. Authenticator LOGIN returned Expected response code 235 but got code "535", with message "535-5.7.8 Username and Password not accepted. Learn more at 535 5.7.8  https://support.google.com/mail/?p=BadCredentials b2sm13056311ejg.70 - gsmtp ". [] []
[2020-08-10T14:23:44.110786+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8002/api","method":"GET"} []
[2020-08-10T14:23:44.111762+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T14:23:44.111803+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:23:44.111832+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:23:44.112071+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-10T14:24:00.871803+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8002/api/login_check","method":"POST"} []
[2020-08-10T14:24:00.887128+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T14:24:01.039214+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T14:24:01.040291+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-10T14:44:09.483955+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8002/api/admin/groupetags","method":"POST"} []
[2020-08-10T14:44:09.485145+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T14:44:09.485236+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:44:09.485286+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:44:09.485662+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-10T14:44:09.488927+00:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/security-http/Firewall/AccessListener.php:119)"} []
[2020-08-10T14:44:09.489444+00:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-08-10T14:44:31.146956+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8002/api/admin/groupetags","method":"POST"} []
[2020-08-10T14:44:31.149141+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T14:44:31.149208+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:44:31.149267+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:44:31.153517+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:44:31.158384+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T14:44:31.161485+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T14:44:31.162267+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:44:31.162408+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:44:31.162452+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:44:31.165671+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined index: libelle" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php line 51 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined index: libelle at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:51)"} []
[2020-08-10T14:45:45.437880+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8002/api/admin/groupetags","method":"POST"} []
[2020-08-10T14:45:45.439165+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T14:45:45.439218+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:45:45.439268+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:45:45.440043+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:45:45.440962+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T14:45:45.442552+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T14:45:45.443022+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:45:45.443102+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:45:45.443128+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:45:45.445222+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined index: libelle" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php line 51 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined index: libelle at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:51)"} []
[2020-08-10T14:46:02.177379+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8002/api/admin/groupetags","method":"POST"} []
[2020-08-10T14:46:02.178914+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T14:46:02.178968+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:46:02.179017+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:46:02.179546+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:46:02.183192+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T14:46:02.185293+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T14:46:02.185801+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:46:02.185902+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:46:02.185931+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T14:46:02.188441+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Serializer\Exception\NotEncodableValueException: "Syntax error" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/serializer/Encoder/JsonDecode.php line 92 {"exception":"[object] (Symfony\\Component\\Serializer\\Exception\\NotEncodableValueException(code: 0): Syntax error at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/serializer/Encoder/JsonDecode.php:92)"} []
[2020-08-10T15:11:49.077228+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8002/api/admin/groupetags","method":"POST"} []
[2020-08-10T15:11:49.077799+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T15:11:49.077837+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:11:49.077873+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:11:49.078351+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:11:49.081070+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T15:11:49.082972+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T15:11:49.083455+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:11:49.083549+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:11:49.083576+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:11:49.084515+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Serializer\Exception\NotEncodableValueException: "Syntax error" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/serializer/Encoder/JsonDecode.php line 92 {"exception":"[object] (Symfony\\Component\\Serializer\\Exception\\NotEncodableValueException(code: 0): Syntax error at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/serializer/Encoder/JsonDecode.php:92)"} []
[2020-08-10T15:12:13.952479+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8002/api/admin/groupetags","method":"POST"} []
[2020-08-10T15:12:13.953091+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T15:12:13.953138+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:12:13.953179+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:12:13.953834+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:12:13.956511+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T15:12:13.958504+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T15:12:13.958995+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:12:13.959102+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:12:13.959129+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:12:13.960113+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Serializer\Exception\NotEncodableValueException: "Syntax error" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/serializer/Encoder/JsonDecode.php line 92 {"exception":"[object] (Symfony\\Component\\Serializer\\Exception\\NotEncodableValueException(code: 0): Syntax error at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/serializer/Encoder/JsonDecode.php:92)"} []
[2020-08-10T15:12:31.756297+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8002/api/admin/groupetags","method":"POST"} []
[2020-08-10T15:12:31.757203+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T15:12:31.757271+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:12:31.757335+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:12:31.758094+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:12:31.761366+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T15:12:31.763437+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T15:12:31.763989+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:12:31.764113+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:12:31.764155+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:12:31.765282+00:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined index: tag" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php line 52 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined index: tag at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Controller/GroupetagController.php:52)"} []
[2020-08-10T15:13:52.892560+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8002/api/admin/groupetags","method":"POST"} []
[2020-08-10T15:13:52.893150+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T15:13:52.893194+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:13:52.893233+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:13:52.893720+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:13:52.896332+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T15:13:52.898501+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T15:13:52.898994+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:13:52.899091+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:13:52.899118+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:13:52.907608+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T15:13:52.908515+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Design Pattern","2":"Design"} []
[2020-08-10T15:16:55.809012+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8002/api/admin/groupetags","method":"POST"} []
[2020-08-10T15:16:55.809648+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T15:16:55.809694+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:16:55.809733+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:16:55.810248+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:16:55.812906+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T15:16:55.814907+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T15:16:55.815389+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:16:55.815493+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:16:55.815521+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:16:55.818970+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T15:16:55.819198+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Design Pattern","2":"Design"} []
[2020-08-10T15:16:55.819626+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-10T15:16:55.821740+00:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Groupetag::setLasUpdate() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Groupetag::setLasUpdate() at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php:34)"} []
[2020-08-10T15:16:55.823715+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setLasUpdate" of class "App\Entity\Groupetag". Did you mean to call e.g. "getLastUpdate" or "setLastUpdate"?" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php line 34 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setLasUpdate\" of class \"App\\Entity\\Groupetag\".\nDid you mean to call e.g. \"getLastUpdate\" or \"setLastUpdate\"? at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php:34)"} []
[2020-08-10T15:17:08.056653+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8002/api/admin/groupetags","method":"POST"} []
[2020-08-10T15:17:08.057408+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T15:17:08.057455+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:17:08.057509+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:17:08.058119+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:17:08.060812+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T15:17:08.063031+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T15:17:08.063577+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:17:08.063699+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:17:08.063740+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:17:08.067396+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T15:17:08.067660+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Design Pattern","2":"Design"} []
[2020-08-10T15:17:08.068127+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-10T15:17:08.069208+00:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Groupetag::setlasUpdate() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Groupetag::setlasUpdate() at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php:34)"} []
[2020-08-10T15:17:08.069694+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setlasUpdate" of class "App\Entity\Groupetag". Did you mean to call e.g. "getLastUpdate" or "setLastUpdate"?" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php line 34 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setlasUpdate\" of class \"App\\Entity\\Groupetag\".\nDid you mean to call e.g. \"getLastUpdate\" or \"setLastUpdate\"? at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php:34)"} []
[2020-08-10T15:18:02.678385+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8002/api/admin/groupetags","method":"POST"} []
[2020-08-10T15:18:02.679265+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T15:18:02.679342+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:18:02.679417+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:18:02.679935+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:18:02.682656+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T15:18:02.684920+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T15:18:02.685455+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:18:02.685573+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:18:02.685612+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:18:02.689191+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T15:18:02.689479+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Design Pattern","2":"Design"} []
[2020-08-10T15:18:02.689907+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-10T15:18:02.690920+00:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Groupetag::setLasUpdate() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Groupetag::setLasUpdate() at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php:34)"} []
[2020-08-10T15:18:02.691417+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setLasUpdate" of class "App\Entity\Groupetag". Did you mean to call e.g. "getLastUpdate" or "setLastUpdate"?" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php line 34 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setLasUpdate\" of class \"App\\Entity\\Groupetag\".\nDid you mean to call e.g. \"getLastUpdate\" or \"setLastUpdate\"? at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php:34)"} []
[2020-08-10T15:19:07.193182+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-10T15:19:07.194238+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-10T15:19:07.199253+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.200286+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.201631+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.201985+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-10T15:19:07.202531+00:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-10T15:19:07.204897+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-10T15:19:07.205255+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-10T15:19:07.205558+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.206081+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.206377+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.206733+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-10T15:19:07.207029+00:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-10T15:19:07.208588+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-10T15:19:07.208864+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'apprenant' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.209305+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'apprenant' */ WHERE k.table_name = 'apprenant' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.210948+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'apprenant' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.211344+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'apprenant' [] []
[2020-08-10T15:19:07.211614+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'apprenant_groupe' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.212079+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'apprenant_groupe' */ WHERE k.table_name = 'apprenant_groupe' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.212546+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'apprenant_groupe' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.212885+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'apprenant_groupe' [] []
[2020-08-10T15:19:07.213083+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'cm' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.213461+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'cm' */ WHERE k.table_name = 'cm' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.213713+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'cm' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.213948+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'cm' [] []
[2020-08-10T15:19:07.214145+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'competence' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.214533+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'competence' */ WHERE k.table_name = 'competence' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.216236+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'competence' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.216557+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'competence' [] []
[2020-08-10T15:19:07.216788+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.217335+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.217659+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.217897+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-10T15:19:07.218102+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'formateur' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.218470+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'formateur' */ WHERE k.table_name = 'formateur' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.218723+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'formateur' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.218984+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'formateur' [] []
[2020-08-10T15:19:07.219174+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'formateur_groupe' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.219572+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'formateur_groupe' */ WHERE k.table_name = 'formateur_groupe' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.219980+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'formateur_groupe' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.220253+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'formateur_groupe' [] []
[2020-08-10T15:19:07.220452+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'groupe' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.220892+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'groupe' */ WHERE k.table_name = 'groupe' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.221284+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'groupe' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.221536+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'groupe' [] []
[2020-08-10T15:19:07.221734+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'groupecompetence' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.222151+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'groupecompetence' */ WHERE k.table_name = 'groupecompetence' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.222542+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'groupecompetence' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.222800+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'groupecompetence' [] []
[2020-08-10T15:19:07.222995+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'groupecompetence_competence' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.223394+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'groupecompetence_competence' */ WHERE k.table_name = 'groupecompetence_competence' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.223785+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'groupecompetence_competence' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.224051+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'groupecompetence_competence' [] []
[2020-08-10T15:19:07.224249+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'groupetag' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.224643+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'groupetag' */ WHERE k.table_name = 'groupetag' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.224861+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'groupetag' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.225064+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'groupetag' [] []
[2020-08-10T15:19:07.225247+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'groupetag_tag' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.225622+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'groupetag_tag' */ WHERE k.table_name = 'groupetag_tag' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.225998+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'groupetag_tag' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.226263+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'groupetag_tag' [] []
[2020-08-10T15:19:07.226457+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'niveau' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.226882+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'niveau' */ WHERE k.table_name = 'niveau' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.227248+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'niveau' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.227518+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'niveau' [] []
[2020-08-10T15:19:07.227702+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'profil' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.228116+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'profil' */ WHERE k.table_name = 'profil' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.228325+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'profil' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.228539+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'profil' [] []
[2020-08-10T15:19:07.228710+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'profilsortie' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.229091+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'profilsortie' */ WHERE k.table_name = 'profilsortie' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.229413+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'profilsortie' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.229636+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'profilsortie' [] []
[2020-08-10T15:19:07.229813+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'promo' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.230358+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'promo' */ WHERE k.table_name = 'promo' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.231227+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'promo' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.231544+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'promo' [] []
[2020-08-10T15:19:07.231748+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'referentiel' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.232193+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'referentiel' */ WHERE k.table_name = 'referentiel' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.232574+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'referentiel' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.232800+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'referentiel' [] []
[2020-08-10T15:19:07.232990+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'referentiel_groupecompetence' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.233372+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'referentiel_groupecompetence' */ WHERE k.table_name = 'referentiel_groupecompetence' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.233753+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'referentiel_groupecompetence' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.234019+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'referentiel_groupecompetence' [] []
[2020-08-10T15:19:07.234208+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'tag' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.234617+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'tag' */ WHERE k.table_name = 'tag' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.234839+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.235044+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'tag' [] []
[2020-08-10T15:19:07.235226+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:07.235710+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:07.235958+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:07.236207+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-08-10T15:19:22.171047+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-10T15:19:22.177884+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:22.179182+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:22.179619+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:22.180003+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-10T15:19:22.190377+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-10T15:19:22.190874+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-10T15:19:22.191233+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:22.191902+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:22.192272+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:22.192625+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-10T15:19:22.192975+00:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-10T15:19:22.193531+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-10T15:19:22.193870+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-10T15:19:22.194184+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:22.194745+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:22.195100+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:22.195459+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-10T15:19:22.195774+00:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-10T15:19:22.196055+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-10T15:19:22.196412+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-10T15:19:22.196772+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:22.197381+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:22.197725+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:22.198008+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-10T15:19:22.198248+00:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-10T15:19:22.203233+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T15:19:22.220373+00:00] doctrine.DEBUG: ALTER TABLE groupetag ADD last_update DATETIME DEFAULT NULL [] []
[2020-08-10T15:19:22.223542+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-10T15:19:22.223952+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-10T15:19:22.224490+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-10T15:19:22.224762+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-10T15:19:22.225036+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-10T15:19:22.225326+00:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2020-08-10T15:19:22+00:00",20.0] []
[2020-08-10T15:19:22.226700+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-10T15:19:31.250151+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8002/api/admin/groupetags","method":"POST"} []
[2020-08-10T15:19:31.250773+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T15:19:31.250818+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:19:31.250856+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:19:31.251377+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:19:31.253997+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T15:19:31.255988+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T15:19:31.256413+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:19:31.256504+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:19:31.256531+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:19:31.260030+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T15:19:31.260305+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Design Pattern","2":"Design"} []
[2020-08-10T15:19:31.260701+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-10T15:19:31.262732+00:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Groupetag::setLasUpdate() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Groupetag::setLasUpdate() at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php:34)"} []
[2020-08-10T15:19:31.263158+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setLasUpdate" of class "App\Entity\Groupetag". Did you mean to call e.g. "getLastUpdate" or "setLastUpdate"?" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php line 34 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setLasUpdate\" of class \"App\\Entity\\Groupetag\".\nDid you mean to call e.g. \"getLastUpdate\" or \"setLastUpdate\"? at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php:34)"} []
[2020-08-10T15:20:51.197104+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8002/api/admin/groupetags","method":"POST"} []
[2020-08-10T15:20:51.197992+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T15:20:51.198045+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:20:51.198089+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:20:51.198832+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:20:51.202715+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T15:20:51.205691+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T15:20:51.206210+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:20:51.206307+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:20:51.206335+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:20:51.209877+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T15:20:51.210123+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Design Pattern","2":"Design"} []
[2020-08-10T15:20:51.210552+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-10T15:20:51.211564+00:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Groupetag::setLasUpdate() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Groupetag::setLasUpdate() at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php:35)"} []
[2020-08-10T15:20:51.212105+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setLasUpdate" of class "App\Entity\Groupetag". Did you mean to call e.g. "getLastUpdate" or "setLastUpdate"?" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php line 35 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setLasUpdate\" of class \"App\\Entity\\Groupetag\".\nDid you mean to call e.g. \"getLastUpdate\" or \"setLastUpdate\"? at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php:35)"} []
[2020-08-10T15:21:12.319363+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8002/api/admin/groupetags","method":"POST"} []
[2020-08-10T15:21:12.320157+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T15:21:12.320220+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:21:12.320277+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:21:12.321028+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:21:12.324813+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T15:21:12.327514+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T15:21:12.328087+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:21:12.328216+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:21:12.328255+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:21:12.333059+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T15:21:12.333332+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Design Pattern","2":"Design"} []
[2020-08-10T15:21:12.333792+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-10T15:21:12.334802+00:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\Groupetag::setLasUpdate() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\Groupetag::setLasUpdate() at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php:35)"} []
[2020-08-10T15:21:12.335335+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setLasUpdate" of class "App\Entity\Groupetag". Did you mean to call e.g. "getLastUpdate" or "setLastUpdate"?" at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php line 35 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setLasUpdate\" of class \"App\\Entity\\Groupetag\".\nDid you mean to call e.g. \"getLastUpdate\" or \"setLastUpdate\"? at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/EventListener/DatabaseActivitySubscriber.php:35)"} []
[2020-08-10T15:21:31.661157+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8002/api/admin/groupetags","method":"POST"} []
[2020-08-10T15:21:31.661784+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T15:21:31.661829+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:21:31.661888+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:21:31.662403+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:21:31.665269+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T15:21:31.667271+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T15:21:31.667801+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:21:31.667908+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:21:31.667937+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T15:21:31.671533+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T15:21:31.671789+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Design Pattern","2":"Design"} []
[2020-08-10T15:21:31.672201+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"Bonjour","2":null} []
[2020-08-10T15:21:31.676652+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [4,19] []
[2020-08-10T15:21:31.677066+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-10T20:09:09.374951+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-08-10T20:09:09.390599+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T20:09:09.390663+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:09:09.390691+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:09:09.395971+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-10T20:09:29.359979+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-10T20:09:29.377679+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T20:09:29.546085+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T20:09:29.563953+00:00] security.INFO: User has been authenticated successfully. {"username":"david de lucas"} []
[2020-08-10T20:10:17.360106+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-10T20:10:17.360741+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T20:10:17.360788+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:10:17.360826+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:10:17.364074+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:10:17.368336+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T20:10:17.370872+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T20:10:17.371606+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:10:17.371714+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:10:17.371745+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:10:17.377840+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM groupetag t0 [] []
[2020-08-10T20:10:17.380025+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-10T20:10:17.384124+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [2] []
[2020-08-10T20:10:17.384848+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [3] []
[2020-08-10T20:10:17.385376+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [4] []
[2020-08-10T20:12:03.239506+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-10T20:12:03.240946+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T20:12:03.240996+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:12:03.241037+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:12:03.241527+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:12:03.242213+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T20:12:03.244198+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T20:12:03.244744+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:12:03.244858+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:12:03.244896+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:12:03.246985+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM groupetag t0 [] []
[2020-08-10T20:12:03.252560+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-10T20:12:03.254334+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [2] []
[2020-08-10T20:12:03.255181+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [3] []
[2020-08-10T20:12:03.255848+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [4] []
[2020-08-10T20:13:01.316973+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-10T20:13:01.319170+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T20:13:01.319238+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:13:01.319298+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:13:01.320042+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:13:01.324757+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T20:13:01.326999+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T20:13:01.327520+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:13:01.327623+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:13:01.327655+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:13:01.332310+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM groupetag t0 [] []
[2020-08-10T20:13:01.456962+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-10T20:13:01.458367+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [2] []
[2020-08-10T20:13:01.459077+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [3] []
[2020-08-10T20:13:01.459617+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [4] []
[2020-08-10T20:21:55.664114+00:00] request.INFO: Matched route "app_groupetag_showgroupetag". {"route":"app_groupetag_showgroupetag","route_parameters":{"_route":"app_groupetag_showgroupetag","__controller":"App\\Controller\\GroupetagController::showGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"show_groupetagss","_controller":"App\\Controller\\GroupetagController::showGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"GET"} []
[2020-08-10T20:21:55.664763+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T20:21:55.664816+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:21:55.664866+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:21:55.665458+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:21:55.669071+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T20:21:55.671312+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T20:21:55.671819+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:21:55.671915+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:21:55.671941+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:21:55.675038+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM groupetag t0 [] []
[2020-08-10T20:21:55.677240+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [1] []
[2020-08-10T20:21:55.678903+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [2] []
[2020-08-10T20:21:55.679741+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [3] []
[2020-08-10T20:21:55.680372+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [4] []
[2020-08-10T20:22:02.824710+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-10T20:22:02.825801+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T20:22:02.825871+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:22:02.825920+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:22:02.826570+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:22:02.829395+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T20:22:02.831601+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T20:22:02.832138+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:22:02.832266+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:22:02.832304+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:22:02.842421+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T20:22:02.843542+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Gestion Marketing","2":"Digiatal"} []
[2020-08-10T20:22:02.844891+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"Community Manager","2":null} []
[2020-08-10T20:22:02.848166+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [5,20] []
[2020-08-10T20:22:02.848538+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-10T20:23:53.881096+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-10T20:23:53.881734+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T20:23:53.881781+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:23:53.881831+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:23:53.882330+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:23:53.885175+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T20:23:53.888217+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T20:23:53.888835+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:23:53.888948+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:23:53.888977+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:23:53.892994+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T20:23:53.893318+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Gestion Marketing Digital","2":"Digiatal"} []
[2020-08-10T20:23:53.893806+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"Community Manager","2":null} []
[2020-08-10T20:23:53.894163+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [6,21] []
[2020-08-10T20:23:53.894417+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-10T20:24:39.587649+00:00] request.INFO: Matched route "app_groupetag_addgroupetag". {"route":"app_groupetag_addgroupetag","route_parameters":{"_route":"app_groupetag_addgroupetag","__controller":"App\\Controller\\GroupetagController::addGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"add_groupetags","_controller":"App\\Controller\\GroupetagController::addGroupetag"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags","method":"POST"} []
[2020-08-10T20:24:39.588273+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T20:24:39.588318+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:24:39.588358+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:24:39.588879+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:24:39.591814+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T20:24:39.594093+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T20:24:39.594636+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:24:39.594742+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:24:39.594769+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:24:39.598628+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T20:24:39.598895+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Gestion Marketing Digital","2":"Digiatal"} []
[2020-08-10T20:24:39.599329+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"Community Management","2":null} []
[2020-08-10T20:24:39.600785+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [7,22] []
[2020-08-10T20:24:39.601003+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-10T20:25:00.199696+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: "No route found for "PUT /api/admin/groupetags": Method Not Allowed (Allow: POST, GET)" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php line 140 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\MethodNotAllowedHttpException(code: 0): No route found for \"PUT /api/admin/groupetags\": Method Not Allowed (Allow: POST, GET) at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php:140)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\MethodNotAllowedException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:42)"} []
[2020-08-10T20:25:10.390412+00:00] request.INFO: Matched route "app_groupetag_updategroupetag". {"route":"app_groupetag_updategroupetag","route_parameters":{"_route":"app_groupetag_updategroupetag","__controller":"App\\Controller\\GroupetagController::updateGroupetag","__api_resource_class":"App\\Entity\\Groupetag","__api_collection_operation_name":"update_Groupetag","_controller":"App\\Controller\\GroupetagController::updateGroupetag","id":"5"},"request_uri":"http://127.0.0.1:8000/api/admin/groupetags/5","method":"PUT"} []
[2020-08-10T20:25:10.391055+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-10T20:25:10.391107+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:25:10.391243+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:25:10.391844+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:25:10.394809+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-10T20:25:10.396904+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [4] []
[2020-08-10T20:25:10.397396+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"david de lucas\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:25:10.397490+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:25:10.397517+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-10T20:25:10.401159+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM groupetag t0 WHERE t0.id = ? ["5"] []
[2020-08-10T20:25:10.401757+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 WHERE t0.id = ? ["5"] []
[2020-08-10T20:25:10.403180+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-10T20:25:10.403349+00:00] doctrine.DEBUG: UPDATE tag SET libelle = ?, descriptif = ? WHERE id = ? ["Gestion Marketing Digital","Digiatal",5] []
[2020-08-10T20:25:10.403945+00:00] doctrine.DEBUG: UPDATE groupetag SET libelle = ? WHERE id = ? ["Community Management",5] []
[2020-08-10T20:25:10.404170+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-10T20:25:10.406751+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3 FROM tag t0 INNER JOIN groupetag_tag ON t0.id = groupetag_tag.tag_id WHERE groupetag_tag.groupetag_id = ? [5] []
[2020-08-10T20:56:39.774109+00:00] console.ERROR: Error thrown while running command "'swiftmailer:send:email'". Message: "There are no commands defined in the "swiftmailer:send" namespace.  Did you mean one of these?     swiftmailer     swiftmailer:email     swiftmailer:spool" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\NamespaceNotFoundException(code: 0): There are no commands defined in the \"swiftmailer:send\" namespace.\n\nDid you mean one of these?\n    swiftmailer\n    swiftmailer:email\n    swiftmailer:spool at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/console/Application.php:574)","command":"'swiftmailer:send:email'","message":"There are no commands defined in the \"swiftmailer:send\" namespace.\n\nDid you mean one of these?\n    swiftmailer\n    swiftmailer:email\n    swiftmailer:spool"} []
[2020-08-10T20:57:34.018369+00:00] app.ERROR: Exception occurred while flushing email queue: Failed to authenticate on SMTP server with username "gueyefadel22@gmail.com" using 1 possible authenticators. Authenticator LOGIN returned Expected response code 235 but got code "535", with message "535-5.7.8 Username and Password not accepted. Learn more at 535 5.7.8  https://support.google.com/mail/?p=BadCredentials rv14sm13532970ejb.33 - gsmtp ". [] []
[2020-08-10T21:02:08.541987+00:00] app.ERROR: Exception occurred while flushing email queue: Failed to authenticate on SMTP server with username "gueyefadel22@gmail.com" using 1 possible authenticators. Authenticator LOGIN returned Expected response code 235 but got code "535", with message "535-5.7.8 Username and Password not accepted. Learn more at 535 5.7.8  https://support.google.com/mail/?p=BadCredentials i26sm12870748edv.70 - gsmtp ". [] []
[2020-08-10T21:05:07.870265+00:00] app.ERROR: Exception occurred while flushing email queue: Failed to authenticate on SMTP server with username "gueyefadel22@gmail.com" using 1 possible authenticators. Authenticator LOGIN returned Expected response code 235 but got code "535", with message "535-5.7.8 Username and Password not accepted. Learn more at 535 5.7.8  https://support.google.com/mail/?p=BadCredentials h13sm22467086wrx.17 - gsmtp ". [] []
[2020-08-10T21:11:35.793890+00:00] app.ERROR: Exception occurred while flushing email queue: Failed to authenticate on SMTP server with username "gueyefadel22@gmail.com" using 1 possible authenticators. Authenticator LOGIN returned Expected response code 235 but got code "535", with message "535-5.7.8 Username and Password not accepted. Learn more at 535 5.7.8  https://support.google.com/mail/?p=BadCredentials e13sm12927730eds.46 - gsmtp ". [] []
[2020-08-10T22:40:09.064367+00:00] app.ERROR: Exception occurred while flushing email queue: Failed to authenticate on SMTP server with username "gueyefadel22@gmail.com" using 1 possible authenticators. Authenticator LOGIN returned Expected response code 235 but got code "535", with message "535-5.7.8 Username and Password not accepted. Learn more at 535 5.7.8  https://support.google.com/mail/?p=BadCredentials p16sm13795801ejd.27 - gsmtp ". [] []
[2020-08-11T12:38:14.893152+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-08-11T12:38:14.898241+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-11T12:38:14.898302+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-11T12:38:14.898337+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-11T12:38:14.898660+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-11T15:42:23.152287+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost'" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1698): SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost' at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)","command":"doctrine:fixtures:load","message":"An exception occurred in driver: SQLSTATE[HY000] [1698] Access denied for user 'root'@'localhost'"} []
[2020-08-11T15:42:23.153395+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T15:49:52.212905+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T15:49:52.246815+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T15:49:52.249915+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T15:49:52.252767+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T15:49:52.253895+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T15:49:52.254660+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T15:49:52.255264+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T15:49:52.257181+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T15:49:52.257713+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T15:49:52.259278+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T15:49:52.260462+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T15:49:52.262156+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T15:49:52.262938+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T15:49:52.263989+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T15:49:52.265001+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T15:49:52.296009+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T15:49:52.296312+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T15:49:52.297290+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T15:49:52.299171+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T15:49:52.301084+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T15:49:52.445931+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T15:49:52.448110+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"timothée roche","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Arthur","5":"Schneider","6":"monique.daniel@orange.fr","7":"actif","8":null,"9":5,"10":"formateur"} []
[2020-08-11T15:49:52.448398+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":13} []
[2020-08-11T15:49:52.570013+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"franck meyer","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Nathalie","5":"Pons","6":"mpasquier@bouchet.com","7":"actif","8":null,"9":5,"10":"formateur"} []
[2020-08-11T15:49:52.570419+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":14} []
[2020-08-11T15:49:52.697677+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"margaux clement","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Julien","5":"Le Gall","6":"cgomez@leduc.org","7":"actif","8":null,"9":5,"10":"formateur"} []
[2020-08-11T15:49:52.698082+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":15} []
[2020-08-11T15:49:52.834818+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T15:49:52.835319+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"gérard joly","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Alexandrie","5":"Renaud","6":"adelaide.jacquet@wanadoo.fr","7":"actif","8":null,"9":6,"10":"cm"} []
[2020-08-11T15:49:52.835645+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":16} []
[2020-08-11T15:49:52.956825+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"timothée vincent","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Arnaude","5":"Auger","6":"ejourdan@hamel.com","7":"actif","8":null,"9":6,"10":"cm"} []
[2020-08-11T15:49:52.957306+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":17} []
[2020-08-11T15:49:53.077674+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"aurélie schmitt","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Honoré","5":"Le Gall","6":"royer.vincent@michel.org","7":"actif","8":null,"9":6,"10":"cm"} []
[2020-08-11T15:49:53.078150+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":18} []
[2020-08-11T15:49:53.199773+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T15:49:53.200327+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"alex loiseau","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Grégoire","5":"Goncalves","6":"ndesousa@club-internet.fr","7":"actif","8":null,"9":7,"10":"apprenant"} []
[2020-08-11T15:49:53.200634+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":19,"2":null} []
[2020-08-11T15:49:53.321020+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"nicolas renard","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Odette","5":"Barbe","6":"marc.gautier@vidal.fr","7":"actif","8":null,"9":7,"10":"apprenant"} []
[2020-08-11T15:49:53.321469+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":20,"2":null} []
[2020-08-11T15:49:53.441759+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"robert de weiss","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Émilie","5":"Morin","6":"lleclercq@jourdan.net","7":"actif","8":null,"9":7,"10":"apprenant"} []
[2020-08-11T15:49:53.442213+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":21,"2":null} []
[2020-08-11T15:49:53.561949+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T15:49:53.562412+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"patricia gros","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Marcel","5":"Dupuy","6":"robert.sylvie@yahoo.fr","7":"actif","8":null,"9":8,"10":"user"} []
[2020-08-11T15:49:53.684382+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"charles daniel","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Margaud","5":"Perrin","6":"lucas.peron@dufour.fr","7":"actif","8":null,"9":8,"10":"user"} []
[2020-08-11T15:49:53.804880+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"claire-simone rocher","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"André","5":"Petit","6":"francois82@noos.fr","7":"actif","8":null,"9":8,"10":"user"} []
[2020-08-11T15:49:53.805556+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T15:49:53.806068+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T15:49:53.807733+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [8,23] []
[2020-08-11T15:49:53.808638+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T15:49:53.808892+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [8,24] []
[2020-08-11T15:49:53.809317+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T15:49:53.809611+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [8,25] []
[2020-08-11T15:49:53.810053+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T15:49:53.810308+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [8,26] []
[2020-08-11T15:49:53.810744+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T15:49:53.810990+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":9} []
[2020-08-11T15:49:53.812032+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":9} []
[2020-08-11T15:49:53.812556+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":9} []
[2020-08-11T15:49:53.813061+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T15:49:53.813319+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":10} []
[2020-08-11T15:49:53.813777+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":10} []
[2020-08-11T15:49:53.814386+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":10} []
[2020-08-11T15:49:53.815012+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T15:49:53.815268+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":11} []
[2020-08-11T15:49:53.815896+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":11} []
[2020-08-11T15:49:53.816444+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":11} []
[2020-08-11T15:49:53.816737+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T15:49:53.818977+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Too few arguments to function App\Entity\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 126 and exactly 1 expected" {"exception":"[object] (ArgumentCountError(code: 0): Too few arguments to function App\\Entity\\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 126 and exactly 1 expected at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Entity/Promo.php:184)","command":"doctrine:fixtures:load","message":"Too few arguments to function App\\Entity\\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 126 and exactly 1 expected"} []
[2020-08-11T15:49:53.819199+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T15:49:53.819620+00:00] php.CRITICAL: Uncaught Error: Too few arguments to function App\Entity\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 126 and exactly 1 expected {"exception":"[object] (ArgumentCountError(code: 0): Too few arguments to function App\\Entity\\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 126 and exactly 1 expected at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Entity/Promo.php:184)"} []
[2020-08-11T15:51:22.937347+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T15:51:22.965467+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T15:51:22.965912+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T15:51:22.966217+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T15:51:22.966414+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T15:51:22.966560+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T15:51:22.966811+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T15:51:22.968543+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T15:51:22.969729+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T15:51:22.969966+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T15:51:22.971527+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T15:51:22.972413+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T15:51:22.972562+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T15:51:22.972721+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T15:51:22.972884+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T15:51:22.975651+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T15:51:22.975817+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T15:51:22.975980+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T15:51:22.977408+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T15:51:22.979749+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T15:51:23.118219+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T15:51:23.119713+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"bernard vidal","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Margot","5":"Pichon","6":"agrenier@orange.fr","7":"actif","8":null,"9":9,"10":"formateur"} []
[2020-08-11T15:51:23.120029+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":25} []
[2020-08-11T15:51:23.242020+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"thierry-augustin olivier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Valérie","5":"Roy","6":"boulay.maurice@diaz.org","7":"actif","8":null,"9":9,"10":"formateur"} []
[2020-08-11T15:51:23.242477+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":26} []
[2020-08-11T15:51:23.363962+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"margaud mathieu","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Antoine","5":"Merle","6":"mary.susanne@fernandez.org","7":"actif","8":null,"9":9,"10":"formateur"} []
[2020-08-11T15:51:23.364410+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":27} []
[2020-08-11T15:51:23.485440+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T15:51:23.485973+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"Émilie de la charpentier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Denise","5":"Bouvier","6":"victoire.dupont@ifrance.com","7":"actif","8":null,"9":10,"10":"cm"} []
[2020-08-11T15:51:23.486280+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":28} []
[2020-08-11T15:51:23.607654+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"jeannine guyot","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Thomas","5":"Brunet","6":"lucy.sanchez@ifrance.com","7":"actif","8":null,"9":10,"10":"cm"} []
[2020-08-11T15:51:23.608083+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":29} []
[2020-08-11T15:51:23.729728+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"valérie-Élodie roy","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Patricia","5":"Caron","6":"odumas@laroche.fr","7":"actif","8":null,"9":10,"10":"cm"} []
[2020-08-11T15:51:23.730149+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":30} []
[2020-08-11T15:51:23.851046+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T15:51:23.851557+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"michelle joubert","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Dorothée","5":"Renaud","6":"diane72@leveque.fr","7":"actif","8":null,"9":11,"10":"apprenant"} []
[2020-08-11T15:51:23.851861+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":31,"2":null} []
[2020-08-11T15:51:23.979306+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"léon bruneau","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Grégoire","5":"Pascal","6":"arthur.gimenez@free.fr","7":"actif","8":null,"9":11,"10":"apprenant"} []
[2020-08-11T15:51:23.979739+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":32,"2":null} []
[2020-08-11T15:51:24.100831+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"eugène de lejeune","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Aurélie","5":"Mace","6":"rguillet@tele2.fr","7":"actif","8":null,"9":11,"10":"apprenant"} []
[2020-08-11T15:51:24.101269+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":33,"2":null} []
[2020-08-11T15:51:24.222406+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T15:51:24.222879+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"océane thibault","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Victor","5":"Julien","6":"mperez@live.com","7":"actif","8":null,"9":12,"10":"user"} []
[2020-08-11T15:51:24.343890+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"Étienne-jacques leduc","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Victor","5":"Martin","6":"pperrot@hotmail.fr","7":"actif","8":null,"9":12,"10":"user"} []
[2020-08-11T15:51:24.465122+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"aimé techer","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Martine","5":"Leclerc","6":"npicard@dupont.com","7":"actif","8":null,"9":12,"10":"user"} []
[2020-08-11T15:51:24.465857+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T15:51:24.466378+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T15:51:24.467646+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [9,27] []
[2020-08-11T15:51:24.468439+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T15:51:24.468734+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [9,28] []
[2020-08-11T15:51:24.470711+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T15:51:24.472525+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [9,29] []
[2020-08-11T15:51:24.473025+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T15:51:24.473311+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [9,30] []
[2020-08-11T15:51:24.473800+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T15:51:24.474066+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":12} []
[2020-08-11T15:51:24.474880+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":12} []
[2020-08-11T15:51:24.475275+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":12} []
[2020-08-11T15:51:24.475711+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T15:51:24.475906+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":13} []
[2020-08-11T15:51:24.476327+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":13} []
[2020-08-11T15:51:24.476721+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":13} []
[2020-08-11T15:51:24.477116+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T15:51:24.477325+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":14} []
[2020-08-11T15:51:24.477737+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":14} []
[2020-08-11T15:51:24.478138+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":14} []
[2020-08-11T15:51:24.478367+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T15:51:24.484023+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "DateTime::__construct(): Failed to parse time string (d/m/Y) at position 1 (/): Unexpected character" {"exception":"[object] (Exception(code: 0): DateTime::__construct(): Failed to parse time string (d/m/Y) at position 1 (/): Unexpected character at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:123)","command":"doctrine:fixtures:load","message":"DateTime::__construct(): Failed to parse time string (d/m/Y) at position 1 (/): Unexpected character"} []
[2020-08-11T15:51:24.484247+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T15:52:15.888362+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T15:52:15.936904+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T15:52:15.937335+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T15:52:15.937587+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T15:52:15.937795+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T15:52:15.937953+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T15:52:15.947054+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T15:52:15.948530+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T15:52:15.949669+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T15:52:15.949870+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T15:52:15.951251+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T15:52:15.951448+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T15:52:15.951582+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T15:52:15.951713+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T15:52:15.951890+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T15:52:15.955014+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T15:52:15.955199+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T15:52:15.955407+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T15:52:15.956641+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T15:52:15.959658+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T15:52:16.109296+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T15:52:16.110875+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"nicole jean","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Lorraine","5":"Leclercq","6":"eugene96@lecoq.fr","7":"actif","8":null,"9":13,"10":"formateur"} []
[2020-08-11T15:52:16.111204+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":37} []
[2020-08-11T15:52:16.233425+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"rémy pierre","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Michel","5":"Traore","6":"martine.pons@brunet.com","7":"actif","8":null,"9":13,"10":"formateur"} []
[2020-08-11T15:52:16.233892+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":38} []
[2020-08-11T15:52:16.357279+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"Étienne dias-le roux","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Gilles","5":"Marty","6":"paulette.gillet@noos.fr","7":"actif","8":null,"9":13,"10":"formateur"} []
[2020-08-11T15:52:16.357760+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":39} []
[2020-08-11T15:52:16.481085+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T15:52:16.481623+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"manon lesage-aubry","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Eugène","5":"Guilbert","6":"rey.denise@gmail.com","7":"actif","8":null,"9":14,"10":"cm"} []
[2020-08-11T15:52:16.481920+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":40} []
[2020-08-11T15:52:16.604957+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"laurent millet","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Alphonse","5":"Boulay","6":"theodore.brunel@cousin.com","7":"actif","8":null,"9":14,"10":"cm"} []
[2020-08-11T15:52:16.605412+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":41} []
[2020-08-11T15:52:16.727676+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"marcelle faure","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Vincent","5":"Bonneau","6":"nathalie80@lebon.com","7":"actif","8":null,"9":14,"10":"cm"} []
[2020-08-11T15:52:16.728137+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":42} []
[2020-08-11T15:52:16.850217+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T15:52:16.850698+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"paul lambert","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Roland","5":"Marin","6":"margaud72@marie.com","7":"actif","8":null,"9":15,"10":"apprenant"} []
[2020-08-11T15:52:16.850995+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":43,"2":null} []
[2020-08-11T15:52:16.973222+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"léon lelievre","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Audrey","5":"Gaudin","6":"ftanguy@tele2.fr","7":"actif","8":null,"9":15,"10":"apprenant"} []
[2020-08-11T15:52:16.973699+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":44,"2":null} []
[2020-08-11T15:52:17.102057+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"marc adam","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Simone","5":"Berthelot","6":"amelie.evrard@chauveau.fr","7":"actif","8":null,"9":15,"10":"apprenant"} []
[2020-08-11T15:52:17.102524+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":45,"2":null} []
[2020-08-11T15:52:17.222986+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T15:52:17.223457+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"claire cordier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Thibault","5":"Brun","6":"jacques41@lejeune.fr","7":"actif","8":null,"9":16,"10":"user"} []
[2020-08-11T15:52:17.344168+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"antoine thierry","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Théophile","5":"Gaudin","6":"aroy@free.fr","7":"actif","8":null,"9":16,"10":"user"} []
[2020-08-11T15:52:17.465613+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"joséphine lefebvre","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Mathilde","5":"Herve","6":"xlebon@dias.com","7":"actif","8":null,"9":16,"10":"user"} []
[2020-08-11T15:52:17.466312+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T15:52:17.466802+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T15:52:17.468119+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [10,31] []
[2020-08-11T15:52:17.468926+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T15:52:17.469212+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [10,32] []
[2020-08-11T15:52:17.469642+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T15:52:17.469900+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [10,33] []
[2020-08-11T15:52:17.470283+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T15:52:17.470483+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [10,34] []
[2020-08-11T15:52:17.470886+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T15:52:17.471187+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":15} []
[2020-08-11T15:52:17.471979+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":15} []
[2020-08-11T15:52:17.472506+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":15} []
[2020-08-11T15:52:17.472989+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T15:52:17.473262+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":16} []
[2020-08-11T15:52:17.473688+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":16} []
[2020-08-11T15:52:17.474096+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":16} []
[2020-08-11T15:52:17.474478+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T15:52:17.474649+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":17} []
[2020-08-11T15:52:17.475139+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":17} []
[2020-08-11T15:52:17.475651+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":17} []
[2020-08-11T15:52:17.475972+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T15:52:17.481087+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'Date' not found" {"exception":"[object] (Error(code: 0): Class 'Date' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:123)","command":"doctrine:fixtures:load","message":"Class 'Date' not found"} []
[2020-08-11T15:52:17.481301+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T15:52:17.481441+00:00] php.CRITICAL: Uncaught Error: Class 'Date' not found {"exception":"[object] (Error(code: 0): Class 'Date' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:123)"} []
[2020-08-11T15:52:29.381626+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T15:52:29.411274+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T15:52:29.411741+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T15:52:29.412009+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T15:52:29.412242+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T15:52:29.412449+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T15:52:29.413802+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T15:52:29.414147+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T15:52:29.414615+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T15:52:29.415009+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T15:52:29.415325+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T15:52:29.416960+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T15:52:29.417199+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T15:52:29.417381+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T15:52:29.417567+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T15:52:29.417990+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T15:52:29.418119+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T15:52:29.418330+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T15:52:29.419587+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T15:52:29.420955+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T15:52:29.571899+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T15:52:29.573353+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"odette godard","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Thibault","5":"Carpentier","6":"leon91@gmail.com","7":"actif","8":null,"9":17,"10":"formateur"} []
[2020-08-11T15:52:29.573594+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":49} []
[2020-08-11T15:52:29.695224+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"patrick simon","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Bertrand","5":"Sanchez","6":"xlebon@voila.fr","7":"actif","8":null,"9":17,"10":"formateur"} []
[2020-08-11T15:52:29.695684+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":50} []
[2020-08-11T15:52:29.825500+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"andré de andre","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Maurice","5":"Barre","6":"luc14@imbert.com","7":"actif","8":null,"9":17,"10":"formateur"} []
[2020-08-11T15:52:29.825949+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":51} []
[2020-08-11T15:52:29.948992+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T15:52:29.949513+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"olivier leblanc","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Alphonse","5":"Blanchet","6":"lacroix.marc@tele2.fr","7":"actif","8":null,"9":18,"10":"cm"} []
[2020-08-11T15:52:29.949811+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":52} []
[2020-08-11T15:52:30.073846+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"laetitia leclerc","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Christelle","5":"Chartier","6":"auguste.berthelot@letellier.org","7":"actif","8":null,"9":18,"10":"cm"} []
[2020-08-11T15:52:30.074302+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":53} []
[2020-08-11T15:52:30.197464+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"olivier toussaint-guillaume","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Célina","5":"Jean","6":"thierry.foucher@bouygtel.fr","7":"actif","8":null,"9":18,"10":"cm"} []
[2020-08-11T15:52:30.197924+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":54} []
[2020-08-11T15:52:30.320780+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T15:52:30.321306+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"julie thomas","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Alexandria","5":"Teixeira","6":"pierre.jules@collin.net","7":"actif","8":null,"9":19,"10":"apprenant"} []
[2020-08-11T15:52:30.321596+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":55,"2":null} []
[2020-08-11T15:52:30.444379+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"odette du monnier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Françoise","5":"Da Silva","6":"robert01@gmail.com","7":"actif","8":null,"9":19,"10":"apprenant"} []
[2020-08-11T15:52:30.444804+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":56,"2":null} []
[2020-08-11T15:52:30.568040+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"pénélope laurent","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Nicolas","5":"Legros","6":"julien21@bouygtel.fr","7":"actif","8":null,"9":19,"10":"apprenant"} []
[2020-08-11T15:52:30.568491+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":57,"2":null} []
[2020-08-11T15:52:30.691402+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T15:52:30.691888+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"anne-margaud roy","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Michel","5":"Neveu","6":"sabine88@sfr.fr","7":"actif","8":null,"9":20,"10":"user"} []
[2020-08-11T15:52:30.814165+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"christine de la samson","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Denis","5":"Francois","6":"sophie.launay@yahoo.fr","7":"actif","8":null,"9":20,"10":"user"} []
[2020-08-11T15:52:30.936514+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"aimé lucas","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Valérie","5":"Fouquet","6":"anouk63@garcia.net","7":"actif","8":null,"9":20,"10":"user"} []
[2020-08-11T15:52:30.937207+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T15:52:30.937680+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T15:52:30.938966+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [11,35] []
[2020-08-11T15:52:30.939724+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T15:52:30.939957+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [11,36] []
[2020-08-11T15:52:30.941706+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T15:52:30.942859+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [11,37] []
[2020-08-11T15:52:30.943284+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T15:52:30.943514+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [11,38] []
[2020-08-11T15:52:30.943915+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T15:52:30.944206+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":18} []
[2020-08-11T15:52:30.945006+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":18} []
[2020-08-11T15:52:30.945457+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":18} []
[2020-08-11T15:52:30.945844+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T15:52:30.946027+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":19} []
[2020-08-11T15:52:30.946404+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":19} []
[2020-08-11T15:52:30.946792+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":19} []
[2020-08-11T15:52:30.947184+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T15:52:30.947377+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":20} []
[2020-08-11T15:52:30.947954+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":20} []
[2020-08-11T15:52:30.948503+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":20} []
[2020-08-11T15:52:30.948752+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T15:52:30.956584+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'Date' not found" {"exception":"[object] (Error(code: 0): Class 'Date' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:123)","command":"doctrine:fixtures:load","message":"Class 'Date' not found"} []
[2020-08-11T15:52:30.956924+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T15:52:30.957110+00:00] php.CRITICAL: Uncaught Error: Class 'Date' not found {"exception":"[object] (Error(code: 0): Class 'Date' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:123)"} []
[2020-08-11T15:52:46.961268+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T15:52:46.989490+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T15:52:46.989875+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T15:52:46.990115+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T15:52:46.990255+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T15:52:46.990417+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T15:52:46.990715+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T15:52:46.991006+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T15:52:46.991348+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T15:52:46.991635+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T15:52:46.991841+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T15:52:47.048365+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T15:52:47.048866+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T15:52:47.049381+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T15:52:47.051683+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T15:52:47.052513+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T15:52:47.052941+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T15:52:47.053450+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T15:52:47.056003+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T15:52:47.057694+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T15:52:47.202421+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T15:52:47.203992+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"Élisabeth de la boyer","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Guillaume","5":"Ledoux","6":"bguillot@gmail.com","7":"actif","8":null,"9":21,"10":"formateur"} []
[2020-08-11T15:52:47.204349+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":61} []
[2020-08-11T15:52:47.326163+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"dominique seguin","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Emmanuel","5":"Gosselin","6":"traore.alexandrie@garnier.com","7":"actif","8":null,"9":21,"10":"formateur"} []
[2020-08-11T15:52:47.326625+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":62} []
[2020-08-11T15:52:47.461165+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"patricia tanguy","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Nathalie","5":"Roussel","6":"diaz.genevieve@bernier.com","7":"actif","8":null,"9":21,"10":"formateur"} []
[2020-08-11T15:52:47.461596+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":63} []
[2020-08-11T15:52:47.583560+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T15:52:47.584091+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"william parent","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Constance","5":"Caron","6":"vallet.margot@sfr.fr","7":"actif","8":null,"9":22,"10":"cm"} []
[2020-08-11T15:52:47.584383+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":64} []
[2020-08-11T15:52:47.707596+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"philippine navarro","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Alexandrie","5":"Leveque","6":"guichard.emile@fleury.fr","7":"actif","8":null,"9":22,"10":"cm"} []
[2020-08-11T15:52:47.708034+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":65} []
[2020-08-11T15:52:47.837719+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"philippe raynaud-jacob","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Yves","5":"Lacombe","6":"leon.leduc@rousseau.fr","7":"actif","8":null,"9":22,"10":"cm"} []
[2020-08-11T15:52:47.838162+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":66} []
[2020-08-11T15:52:47.960760+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T15:52:47.961241+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"suzanne coulon","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Frédéric","5":"Guyot","6":"caroline78@marin.fr","7":"actif","8":null,"9":23,"10":"apprenant"} []
[2020-08-11T15:52:47.961578+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":67,"2":null} []
[2020-08-11T15:52:48.083999+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"maurice marechal","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Éric","5":"Valentin","6":"arthur12@brunel.com","7":"actif","8":null,"9":23,"10":"apprenant"} []
[2020-08-11T15:52:48.084415+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":68,"2":null} []
[2020-08-11T15:52:48.207621+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"lucie de sousa","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Lucie","5":"Grondin","6":"deschamps.eugene@voila.fr","7":"actif","8":null,"9":23,"10":"apprenant"} []
[2020-08-11T15:52:48.208002+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":69,"2":null} []
[2020-08-11T15:52:48.330260+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T15:52:48.330716+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"danielle verdier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Hortense","5":"Seguin","6":"olivie41@yahoo.fr","7":"actif","8":null,"9":24,"10":"user"} []
[2020-08-11T15:52:48.453353+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"arnaude courtois","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Matthieu","5":"Dumont","6":"xlefort@club-internet.fr","7":"actif","8":null,"9":24,"10":"user"} []
[2020-08-11T15:52:48.576334+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"sabine maury","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Constance","5":"Delattre","6":"elisabeth.leroy@noos.fr","7":"actif","8":null,"9":24,"10":"user"} []
[2020-08-11T15:52:48.577013+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T15:52:48.577532+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T15:52:48.578862+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [12,39] []
[2020-08-11T15:52:48.579704+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T15:52:48.579994+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [12,40] []
[2020-08-11T15:52:48.581523+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T15:52:48.582775+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [12,41] []
[2020-08-11T15:52:48.583204+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T15:52:48.583425+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [12,42] []
[2020-08-11T15:52:48.583833+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T15:52:48.584062+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":21} []
[2020-08-11T15:52:48.584837+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":21} []
[2020-08-11T15:52:48.585258+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":21} []
[2020-08-11T15:52:48.585709+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T15:52:48.585956+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":22} []
[2020-08-11T15:52:48.586374+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":22} []
[2020-08-11T15:52:48.586774+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":22} []
[2020-08-11T15:52:48.587189+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T15:52:48.587398+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":23} []
[2020-08-11T15:52:48.587818+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":23} []
[2020-08-11T15:52:48.588247+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":23} []
[2020-08-11T15:52:48.588496+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T15:52:48.592917+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'Date' not found" {"exception":"[object] (Error(code: 0): Class 'Date' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:124)","command":"doctrine:fixtures:load","message":"Class 'Date' not found"} []
[2020-08-11T15:52:48.593136+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T15:52:48.593286+00:00] php.CRITICAL: Uncaught Error: Class 'Date' not found {"exception":"[object] (Error(code: 0): Class 'Date' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:124)"} []
[2020-08-11T15:53:04.944854+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T15:53:04.974810+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T15:53:04.975372+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T15:53:04.975723+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T15:53:04.976037+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T15:53:04.976303+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T15:53:04.976693+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T15:53:04.976979+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T15:53:04.977338+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T15:53:04.977620+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T15:53:04.977835+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T15:53:04.978026+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T15:53:04.978212+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T15:53:04.978419+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T15:53:04.978655+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T15:53:04.978985+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T15:53:04.979133+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T15:53:04.979355+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T15:53:04.979568+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T15:53:04.990242+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T15:53:05.149516+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T15:53:05.151125+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"isaac teixeira-brunet","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Benjamin","5":"Besnard","6":"manon28@pruvost.fr","7":"actif","8":null,"9":25,"10":"formateur"} []
[2020-08-11T15:53:05.151468+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":73} []
[2020-08-11T15:53:05.273120+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"yves hamel-leroux","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Juliette","5":"Barbe","6":"craynaud@tessier.fr","7":"actif","8":null,"9":25,"10":"formateur"} []
[2020-08-11T15:53:05.273505+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":74} []
[2020-08-11T15:53:05.395718+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"virginie fontaine","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Grégoire","5":"Bousquet","6":"vjacquet@dbmail.com","7":"actif","8":null,"9":25,"10":"formateur"} []
[2020-08-11T15:53:05.396174+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":75} []
[2020-08-11T15:53:05.518054+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T15:53:05.518596+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"véronique lebreton","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Élisabeth","5":"Chauvet","6":"goncalves.christophe@carpe [...]","7":"actif","8":null,"9":26,"10":"cm"} []
[2020-08-11T15:53:05.518916+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":76} []
[2020-08-11T15:53:05.640348+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"georges le roux","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Jacqueline","5":"Didier","6":"margaret.pereira@wanadoo.fr","7":"actif","8":null,"9":26,"10":"cm"} []
[2020-08-11T15:53:05.640772+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":77} []
[2020-08-11T15:53:05.770288+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"marianne marques","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Stéphanie","5":"Boulay","6":"catherine.legrand@moreau.com","7":"actif","8":null,"9":26,"10":"cm"} []
[2020-08-11T15:53:05.770724+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":78} []
[2020-08-11T15:53:05.904352+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T15:53:05.904861+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"suzanne morel","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Jacques","5":"Adam","6":"gregoire99@vaillant.fr","7":"actif","8":null,"9":27,"10":"apprenant"} []
[2020-08-11T15:53:05.905143+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":79,"2":null} []
[2020-08-11T15:53:06.026708+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"yves delannoy","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Hugues","5":"Guilbert","6":"tpetit@gmail.com","7":"actif","8":null,"9":27,"10":"apprenant"} []
[2020-08-11T15:53:06.027184+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":80,"2":null} []
[2020-08-11T15:53:06.148488+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"isaac payet-langlois","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Alexandre","5":"Lejeune","6":"virginie.loiseau@lopes.fr","7":"actif","8":null,"9":27,"10":"apprenant"} []
[2020-08-11T15:53:06.148907+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":81,"2":null} []
[2020-08-11T15:53:06.269006+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T15:53:06.269491+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"pénélope monnier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Amélie","5":"Boulay","6":"remy82@bouygtel.fr","7":"actif","8":null,"9":28,"10":"user"} []
[2020-08-11T15:53:06.389897+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"lucy-martine labbe","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Eugène","5":"Mathieu","6":"christophe.caron@sfr.fr","7":"actif","8":null,"9":28,"10":"user"} []
[2020-08-11T15:53:06.510450+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"thibaut-luc guillaume","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Dorothée","5":"Guillet","6":"daniel12@club-internet.fr","7":"actif","8":null,"9":28,"10":"user"} []
[2020-08-11T15:53:06.511174+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T15:53:06.511678+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T15:53:06.512979+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [13,43] []
[2020-08-11T15:53:06.513779+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T15:53:06.514071+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [13,44] []
[2020-08-11T15:53:06.516403+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T15:53:06.516710+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [13,45] []
[2020-08-11T15:53:06.517180+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T15:53:06.518187+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [13,46] []
[2020-08-11T15:53:06.518673+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T15:53:06.518999+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":24} []
[2020-08-11T15:53:06.519836+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":24} []
[2020-08-11T15:53:06.520254+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":24} []
[2020-08-11T15:53:06.520655+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T15:53:06.520862+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":25} []
[2020-08-11T15:53:06.521247+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":25} []
[2020-08-11T15:53:06.521650+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":25} []
[2020-08-11T15:53:06.522059+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T15:53:06.522301+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":26} []
[2020-08-11T15:53:06.522739+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":26} []
[2020-08-11T15:53:06.523190+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":26} []
[2020-08-11T15:53:06.523437+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T15:53:06.526812+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'Date' not found" {"exception":"[object] (Error(code: 0): Class 'Date' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:124)","command":"doctrine:fixtures:load","message":"Class 'Date' not found"} []
[2020-08-11T15:53:06.527018+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T15:53:06.527153+00:00] php.CRITICAL: Uncaught Error: Class 'Date' not found {"exception":"[object] (Error(code: 0): Class 'Date' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:124)"} []
[2020-08-11T15:53:43.935060+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T15:53:43.961705+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T15:53:43.962151+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T15:53:43.962479+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T15:53:43.962769+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T15:53:43.963213+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T15:53:43.963756+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T15:53:43.964191+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T15:53:44.020278+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T15:53:44.020686+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T15:53:44.021048+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T15:53:44.021349+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T15:53:44.021671+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T15:53:44.022006+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T15:53:44.022380+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T15:53:44.022920+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T15:53:44.023143+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T15:53:44.023468+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T15:53:44.025626+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T15:53:44.027139+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T15:53:44.172680+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T15:53:44.174241+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"frédéric-marc blanc","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Xavier","5":"Marchal","6":"odette26@cordier.fr","7":"actif","8":null,"9":29,"10":"formateur"} []
[2020-08-11T15:53:44.174528+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":85} []
[2020-08-11T15:53:44.308959+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"yves coulon-moulin","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Geneviève","5":"Pineau","6":"adele73@joseph.com","7":"actif","8":null,"9":29,"10":"formateur"} []
[2020-08-11T15:53:44.309339+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":86} []
[2020-08-11T15:53:44.436213+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"emmanuel diaz","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Alexandria","5":"Hamon","6":"grenier.celina@tele2.fr","7":"actif","8":null,"9":29,"10":"formateur"} []
[2020-08-11T15:53:44.436662+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":87} []
[2020-08-11T15:53:44.558903+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T15:53:44.559419+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"juliette moulin","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Timothée","5":"Bonnin","6":"desousa.edouard@delannoy.com","7":"actif","8":null,"9":30,"10":"cm"} []
[2020-08-11T15:53:44.559710+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":88} []
[2020-08-11T15:53:44.681724+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"capucine lambert","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Julien","5":"Merle","6":"wadam@rousset.net","7":"actif","8":null,"9":30,"10":"cm"} []
[2020-08-11T15:53:44.682179+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":89} []
[2020-08-11T15:53:44.804562+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"luc torres-mathieu","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Lorraine","5":"Baudry","6":"noel.pires@maillet.net","7":"actif","8":null,"9":30,"10":"cm"} []
[2020-08-11T15:53:44.805014+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":90} []
[2020-08-11T15:53:44.926185+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T15:53:44.926676+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"alex paris","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Thibaut","5":"Toussaint","6":"blanchet.alexandrie@wanadoo.fr","7":"actif","8":null,"9":31,"10":"apprenant"} []
[2020-08-11T15:53:44.926986+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":91,"2":null} []
[2020-08-11T15:53:45.048110+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"georges thibault","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Amélie","5":"Dos Santos","6":"alexandrie23@tele2.fr","7":"actif","8":null,"9":31,"10":"apprenant"} []
[2020-08-11T15:53:45.048556+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":92,"2":null} []
[2020-08-11T15:53:45.169884+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"zoé lefort","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Denise","5":"Gimenez","6":"bruneau.victor@sfr.fr","7":"actif","8":null,"9":31,"10":"apprenant"} []
[2020-08-11T15:53:45.170348+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":93,"2":null} []
[2020-08-11T15:53:45.291234+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T15:53:45.291705+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"célina francois","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Dominique","5":"Pages","6":"yves.guibert@gillet.com","7":"actif","8":null,"9":32,"10":"user"} []
[2020-08-11T15:53:45.413385+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"bernard le blot","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Adrien","5":"Le Gall","6":"ehubert@barbier.org","7":"actif","8":null,"9":32,"10":"user"} []
[2020-08-11T15:53:45.537762+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"christine schneider","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Danielle","5":"Bonneau","6":"blemonnier@marchal.fr","7":"actif","8":null,"9":32,"10":"user"} []
[2020-08-11T15:53:45.538441+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T15:53:45.538936+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T15:53:45.540273+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [14,47] []
[2020-08-11T15:53:45.541135+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T15:53:45.541460+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [14,48] []
[2020-08-11T15:53:45.543620+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T15:53:45.543942+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [14,49] []
[2020-08-11T15:53:45.544429+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T15:53:45.545422+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [14,50] []
[2020-08-11T15:53:45.546228+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T15:53:45.546799+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":27} []
[2020-08-11T15:53:45.548146+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":27} []
[2020-08-11T15:53:45.549115+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":27} []
[2020-08-11T15:53:45.550037+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T15:53:45.550474+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":28} []
[2020-08-11T15:53:45.551047+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":28} []
[2020-08-11T15:53:45.551730+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":28} []
[2020-08-11T15:53:45.552455+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T15:53:45.552912+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":29} []
[2020-08-11T15:53:45.553552+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":29} []
[2020-08-11T15:53:45.554079+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":29} []
[2020-08-11T15:53:45.554371+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T15:53:45.557752+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'Date' not found" {"exception":"[object] (Error(code: 0): Class 'Date' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:124)","command":"doctrine:fixtures:load","message":"Class 'Date' not found"} []
[2020-08-11T15:53:45.557999+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T15:53:45.558143+00:00] php.CRITICAL: Uncaught Error: Class 'Date' not found {"exception":"[object] (Error(code: 0): Class 'Date' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:124)"} []
[2020-08-11T16:02:48.604519+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T16:02:48.633339+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T16:02:48.633809+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T16:02:48.635787+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T16:02:48.636064+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T16:02:48.636278+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T16:02:48.636534+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T16:02:48.636772+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T16:02:48.638833+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T16:02:48.639215+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T16:02:48.641196+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T16:02:48.642060+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T16:02:48.642227+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T16:02:48.642392+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T16:02:48.642535+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T16:02:48.644191+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T16:02:48.644608+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T16:02:48.645042+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T16:02:48.646666+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T16:02:48.648097+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T16:02:48.787037+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T16:02:48.788599+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"nicolas bourgeois","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Sylvie","5":"Allain","6":"legendre.diane@francois.fr","7":"actif","8":null,"9":33,"10":"formateur"} []
[2020-08-11T16:02:48.788951+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":97} []
[2020-08-11T16:02:48.910969+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"christiane marques","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Sabine","5":"Lambert","6":"rodrigues.hortense@lebon.fr","7":"actif","8":null,"9":33,"10":"formateur"} []
[2020-08-11T16:02:48.911457+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":98} []
[2020-08-11T16:02:49.045822+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"vincent-denis moreno","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Margaud","5":"Fournier","6":"idacosta@tele2.fr","7":"actif","8":null,"9":33,"10":"formateur"} []
[2020-08-11T16:02:49.046284+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":99} []
[2020-08-11T16:02:49.168260+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T16:02:49.168775+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"marie du lejeune","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Virginie","5":"Dumas","6":"louis.manon@club-internet.fr","7":"actif","8":null,"9":34,"10":"cm"} []
[2020-08-11T16:02:49.169086+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":100} []
[2020-08-11T16:02:49.291851+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"claire gros","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Daniel","5":"Roger","6":"noel.lemoine@yahoo.fr","7":"actif","8":null,"9":34,"10":"cm"} []
[2020-08-11T16:02:49.292283+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":101} []
[2020-08-11T16:02:49.419895+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"henri cordier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Élodie","5":"Dijoux","6":"roger.martineau@maillard.com","7":"actif","8":null,"9":34,"10":"cm"} []
[2020-08-11T16:02:49.420375+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":102} []
[2020-08-11T16:02:49.541544+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T16:02:49.542079+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"guy ledoux","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Nath","5":"Fabre","6":"bbegue@guillon.net","7":"actif","8":null,"9":35,"10":"apprenant"} []
[2020-08-11T16:02:49.542385+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":103,"2":null} []
[2020-08-11T16:02:49.663544+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"anastasie bourdon","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Sébastien","5":"Mahe","6":"guy70@yahoo.fr","7":"actif","8":null,"9":35,"10":"apprenant"} []
[2020-08-11T16:02:49.664012+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":104,"2":null} []
[2020-08-11T16:02:49.784629+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"thibault martin","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Adèle","5":"Le Goff","6":"victor69@clement.net","7":"actif","8":null,"9":35,"10":"apprenant"} []
[2020-08-11T16:02:49.785079+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":105,"2":null} []
[2020-08-11T16:02:49.906137+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T16:02:49.906631+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"océane lambert-etienne","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Michèle","5":"Letellier","6":"picard.jacques@orange.fr","7":"actif","8":null,"9":36,"10":"user"} []
[2020-08-11T16:02:50.029209+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"isaac ollivier-gosselin","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Bernadette","5":"Guerin","6":"paul76@lecomte.com","7":"actif","8":null,"9":36,"10":"user"} []
[2020-08-11T16:02:50.150736+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"robert bouchet","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Susanne","5":"Guillon","6":"edossantos@dbmail.com","7":"actif","8":null,"9":36,"10":"user"} []
[2020-08-11T16:02:50.151420+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T16:02:50.151922+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T16:02:50.153205+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [15,51] []
[2020-08-11T16:02:50.153952+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T16:02:50.154215+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [15,52] []
[2020-08-11T16:02:50.154651+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T16:02:50.154923+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [15,53] []
[2020-08-11T16:02:50.155308+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T16:02:50.155520+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [15,54] []
[2020-08-11T16:02:50.155918+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T16:02:50.156156+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":30} []
[2020-08-11T16:02:50.156900+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":30} []
[2020-08-11T16:02:50.157322+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":30} []
[2020-08-11T16:02:50.157752+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T16:02:50.158000+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":31} []
[2020-08-11T16:02:50.158432+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":31} []
[2020-08-11T16:02:50.158851+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":31} []
[2020-08-11T16:02:50.159336+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T16:02:50.159612+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":32} []
[2020-08-11T16:02:50.160050+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":32} []
[2020-08-11T16:02:50.160476+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":32} []
[2020-08-11T16:02:50.160768+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T16:02:50.163017+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\DataFixtures\DateTime' not found" {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\DateTime' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:124)","command":"doctrine:fixtures:load","message":"Class 'App\\DataFixtures\\DateTime' not found"} []
[2020-08-11T16:02:50.163233+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T16:02:50.163375+00:00] php.CRITICAL: Uncaught Error: Class 'App\DataFixtures\DateTime' not found {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\DateTime' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:124)"} []
[2020-08-11T16:03:04.138303+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T16:03:04.166470+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T16:03:04.166951+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T16:03:04.176752+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T16:03:04.177154+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T16:03:04.177540+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T16:03:04.177860+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T16:03:04.179730+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T16:03:04.180145+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T16:03:04.180485+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T16:03:04.181710+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T16:03:04.181933+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T16:03:04.182090+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T16:03:04.182254+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T16:03:04.182386+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T16:03:04.182671+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T16:03:04.182773+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T16:03:04.182919+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T16:03:04.183072+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T16:03:04.184651+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T16:03:04.323018+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T16:03:04.324576+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"benoît giraud","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Benoît","5":"Riou","6":"duval.daniel@ifrance.com","7":"actif","8":null,"9":37,"10":"formateur"} []
[2020-08-11T16:03:04.324909+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":109} []
[2020-08-11T16:03:04.459913+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"benoît henry","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Thomas","5":"Rodrigues","6":"andree53@gmail.com","7":"actif","8":null,"9":37,"10":"formateur"} []
[2020-08-11T16:03:04.460383+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":110} []
[2020-08-11T16:03:04.583684+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"denis peltier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Adrien","5":"Hamel","6":"mallet.suzanne@live.com","7":"actif","8":null,"9":37,"10":"formateur"} []
[2020-08-11T16:03:04.584099+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":111} []
[2020-08-11T16:03:04.706510+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T16:03:04.706999+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"adélaïde michaud","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Gabrielle","5":"Chauvin","6":"pauline.renaud@diaz.org","7":"actif","8":null,"9":38,"10":"cm"} []
[2020-08-11T16:03:04.707293+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":112} []
[2020-08-11T16:03:04.829373+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"juliette pons","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Bernard","5":"Pineau","6":"jacquot.corinne@gaillard.fr","7":"actif","8":null,"9":38,"10":"cm"} []
[2020-08-11T16:03:04.829820+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":113} []
[2020-08-11T16:03:04.952160+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"jean-laurent vallee","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"David","5":"Bruneau","6":"cdumont@morin.fr","7":"actif","8":null,"9":38,"10":"cm"} []
[2020-08-11T16:03:04.952631+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":114} []
[2020-08-11T16:03:05.074006+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T16:03:05.074522+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"richard legros","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Margot","5":"Georges","6":"fguilbert@hotmail.fr","7":"actif","8":null,"9":39,"10":"apprenant"} []
[2020-08-11T16:03:05.074866+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":115,"2":null} []
[2020-08-11T16:03:05.197632+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"marthe-virginie bourgeois","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Tristan","5":"Delmas","6":"fernandez.elodie@roche.fr","7":"actif","8":null,"9":39,"10":"apprenant"} []
[2020-08-11T16:03:05.198074+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":116,"2":null} []
[2020-08-11T16:03:05.319758+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"luce-marine maillot","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Pénélope","5":"Vallee","6":"simone.cousin@allard.com","7":"actif","8":null,"9":39,"10":"apprenant"} []
[2020-08-11T16:03:05.320177+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":117,"2":null} []
[2020-08-11T16:03:05.441289+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T16:03:05.441733+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"jacques guillet","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Monique","5":"Regnier","6":"martins.victor@louis.org","7":"actif","8":null,"9":40,"10":"user"} []
[2020-08-11T16:03:05.563146+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"noël regnier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Thomas","5":"Loiseau","6":"laure12@voila.fr","7":"actif","8":null,"9":40,"10":"user"} []
[2020-08-11T16:03:05.684756+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"Éric hubert-lenoir","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Aurore","5":"Delmas","6":"bouchet.alfred@voila.fr","7":"actif","8":null,"9":40,"10":"user"} []
[2020-08-11T16:03:05.685484+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T16:03:05.685984+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T16:03:05.687262+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [16,55] []
[2020-08-11T16:03:05.688088+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T16:03:05.688365+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [16,56] []
[2020-08-11T16:03:05.688863+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T16:03:05.689105+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [16,57] []
[2020-08-11T16:03:05.689538+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T16:03:05.689767+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [16,58] []
[2020-08-11T16:03:05.690233+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T16:03:05.690497+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":33} []
[2020-08-11T16:03:05.691286+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":33} []
[2020-08-11T16:03:05.691761+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":33} []
[2020-08-11T16:03:05.692214+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T16:03:05.692456+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":34} []
[2020-08-11T16:03:05.694121+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":34} []
[2020-08-11T16:03:05.694685+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":34} []
[2020-08-11T16:03:05.695182+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T16:03:05.695422+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":35} []
[2020-08-11T16:03:05.695928+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":35} []
[2020-08-11T16:03:05.696410+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":35} []
[2020-08-11T16:03:05.696688+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T16:03:05.701803+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Too few arguments to function App\Entity\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 128 and exactly 1 expected" {"exception":"[object] (ArgumentCountError(code: 0): Too few arguments to function App\\Entity\\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 128 and exactly 1 expected at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Entity/Promo.php:184)","command":"doctrine:fixtures:load","message":"Too few arguments to function App\\Entity\\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 128 and exactly 1 expected"} []
[2020-08-11T16:03:05.702066+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T16:03:05.702252+00:00] php.CRITICAL: Uncaught Error: Too few arguments to function App\Entity\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 128 and exactly 1 expected {"exception":"[object] (ArgumentCountError(code: 0): Too few arguments to function App\\Entity\\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 128 and exactly 1 expected at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Entity/Promo.php:184)"} []
[2020-08-11T16:04:21.512876+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T16:04:21.544811+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T16:04:21.545271+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T16:04:21.601193+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T16:04:21.601474+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T16:04:21.601641+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T16:04:21.601881+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T16:04:21.602208+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T16:04:21.602533+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T16:04:21.604234+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T16:04:21.605940+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T16:04:21.607002+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T16:04:21.607221+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T16:04:21.607424+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T16:04:21.607632+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T16:04:21.610721+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T16:04:21.610966+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T16:04:21.611238+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T16:04:21.612854+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T16:04:21.613144+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T16:04:21.756522+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T16:04:21.758087+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"susan hardy","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Robert","5":"Aubry","6":"georges.weiss@free.fr","7":"actif","8":null,"9":41,"10":"formateur"} []
[2020-08-11T16:04:21.758394+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":121} []
[2020-08-11T16:04:21.881963+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"daniel laine-aubry","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Alex","5":"Pruvost","6":"audrey.bazin@boulay.fr","7":"actif","8":null,"9":41,"10":"formateur"} []
[2020-08-11T16:04:21.882387+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":122} []
[2020-08-11T16:04:22.003974+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"denise de la ferreira","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Agathe","5":"Schneider","6":"agathe49@morin.fr","7":"actif","8":null,"9":41,"10":"formateur"} []
[2020-08-11T16:04:22.004439+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":123} []
[2020-08-11T16:04:22.138985+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T16:04:22.139418+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"Élisabeth rocher","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Nath","5":"Brunel","6":"thierry.leroux@club-internet.fr","7":"actif","8":null,"9":42,"10":"cm"} []
[2020-08-11T16:04:22.139630+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":124} []
[2020-08-11T16:04:22.260664+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"andré boulanger","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Isabelle","5":"Ledoux","6":"oarnaud@free.fr","7":"actif","8":null,"9":42,"10":"cm"} []
[2020-08-11T16:04:22.261032+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":125} []
[2020-08-11T16:04:22.381505+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"suzanne le boulay","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Claude","5":"Didier","6":"kgaudin@bouchet.com","7":"actif","8":null,"9":42,"10":"cm"} []
[2020-08-11T16:04:22.381894+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":126} []
[2020-08-11T16:04:22.503240+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T16:04:22.503653+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"roland-Émile martinez","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Michelle","5":"Renault","6":"pboyer@hotmail.fr","7":"actif","8":null,"9":43,"10":"apprenant"} []
[2020-08-11T16:04:22.503880+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":127,"2":null} []
[2020-08-11T16:04:22.624621+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"christiane bernard-delahaye","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Alexandrie","5":"Jourdan","6":"susanne.gallet@auger.fr","7":"actif","8":null,"9":43,"10":"apprenant"} []
[2020-08-11T16:04:22.624984+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":128,"2":null} []
[2020-08-11T16:04:22.747173+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"margaret allain","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Agathe","5":"Moulin","6":"hernandez.xavier@wanadoo.fr","7":"actif","8":null,"9":43,"10":"apprenant"} []
[2020-08-11T16:04:22.747544+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":129,"2":null} []
[2020-08-11T16:04:22.868250+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T16:04:22.868658+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"louise mathieu","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Michelle","5":"Lombard","6":"zlanglois@dacosta.com","7":"actif","8":null,"9":44,"10":"user"} []
[2020-08-11T16:04:22.988945+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"laurent blanc","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Rémy","5":"Pierre","6":"jbourdon@pons.com","7":"actif","8":null,"9":44,"10":"user"} []
[2020-08-11T16:04:23.109709+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"sylvie albert","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Odette","5":"Wagner","6":"luc64@ferrand.net","7":"actif","8":null,"9":44,"10":"user"} []
[2020-08-11T16:04:23.110301+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T16:04:23.110685+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T16:04:23.111874+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [17,59] []
[2020-08-11T16:04:23.112551+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T16:04:23.112747+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [17,60] []
[2020-08-11T16:04:23.113078+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T16:04:23.113255+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [17,61] []
[2020-08-11T16:04:23.113581+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T16:04:23.113753+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [17,62] []
[2020-08-11T16:04:23.114111+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T16:04:23.114305+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":36} []
[2020-08-11T16:04:23.115031+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":36} []
[2020-08-11T16:04:23.115428+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":36} []
[2020-08-11T16:04:23.115803+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T16:04:23.115981+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":37} []
[2020-08-11T16:04:23.116351+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":37} []
[2020-08-11T16:04:23.116725+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":37} []
[2020-08-11T16:04:23.117105+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T16:04:23.117281+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":38} []
[2020-08-11T16:04:23.117666+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":38} []
[2020-08-11T16:04:23.118056+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":38} []
[2020-08-11T16:04:23.118266+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T16:04:23.123386+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Too few arguments to function App\Entity\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 128 and exactly 1 expected" {"exception":"[object] (ArgumentCountError(code: 0): Too few arguments to function App\\Entity\\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 128 and exactly 1 expected at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Entity/Promo.php:184)","command":"doctrine:fixtures:load","message":"Too few arguments to function App\\Entity\\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 128 and exactly 1 expected"} []
[2020-08-11T16:04:23.123605+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T16:04:23.123747+00:00] php.CRITICAL: Uncaught Error: Too few arguments to function App\Entity\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 128 and exactly 1 expected {"exception":"[object] (ArgumentCountError(code: 0): Too few arguments to function App\\Entity\\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 128 and exactly 1 expected at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Entity/Promo.php:184)"} []
[2020-08-11T16:05:07.068814+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T16:05:07.098983+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T16:05:07.099509+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T16:05:07.099782+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T16:05:07.099980+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T16:05:07.100136+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T16:05:07.100382+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T16:05:07.109674+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T16:05:07.111461+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T16:05:07.111775+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T16:05:07.113219+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T16:05:07.113450+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T16:05:07.113614+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T16:05:07.113795+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T16:05:07.113999+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T16:05:07.114441+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T16:05:07.114588+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T16:05:07.114841+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T16:05:07.116175+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T16:05:07.118271+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T16:05:07.256973+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T16:05:07.258499+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"gilles thierry","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Édith","5":"Andre","6":"jacquot.laurence@hotmail.fr","7":"actif","8":null,"9":45,"10":"formateur"} []
[2020-08-11T16:05:07.258815+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":133} []
[2020-08-11T16:05:07.393710+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"georges germain","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Stéphane","5":"Masse","6":"michaud.agnes@aubry.fr","7":"actif","8":null,"9":45,"10":"formateur"} []
[2020-08-11T16:05:07.394127+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":134} []
[2020-08-11T16:05:07.516031+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"virginie le levy","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Patricia","5":"Chauvet","6":"nathalie14@live.com","7":"actif","8":null,"9":45,"10":"formateur"} []
[2020-08-11T16:05:07.516536+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":135} []
[2020-08-11T16:05:07.638499+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T16:05:07.638979+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"danielle lucas","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Marcel","5":"Lombard","6":"constance.gillet@blin.org","7":"actif","8":null,"9":46,"10":"cm"} []
[2020-08-11T16:05:07.639267+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":136} []
[2020-08-11T16:05:07.761021+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"noémi foucher","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Joseph","5":"Richard","6":"frederic.rousseau@noos.fr","7":"actif","8":null,"9":46,"10":"cm"} []
[2020-08-11T16:05:07.761492+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":137} []
[2020-08-11T16:05:07.883998+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"valérie lemoine","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Clémence","5":"Roger","6":"collet.noel@imbert.net","7":"actif","8":null,"9":46,"10":"cm"} []
[2020-08-11T16:05:07.884464+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":138} []
[2020-08-11T16:05:08.005988+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T16:05:08.006458+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"auguste-joseph ferrand","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Léon","5":"Rousseau","6":"morin.madeleine@guibert.fr","7":"actif","8":null,"9":47,"10":"apprenant"} []
[2020-08-11T16:05:08.006745+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":139,"2":null} []
[2020-08-11T16:05:08.128216+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"philippe hoarau","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"David","5":"Monnier","6":"xbertrand@gonzalez.com","7":"actif","8":null,"9":47,"10":"apprenant"} []
[2020-08-11T16:05:08.128644+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":140,"2":null} []
[2020-08-11T16:05:08.249528+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"emmanuelle de la lagarde","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Dominique","5":"Picard","6":"muller.lorraine@blanchard.org","7":"actif","8":null,"9":47,"10":"apprenant"} []
[2020-08-11T16:05:08.249937+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":141,"2":null} []
[2020-08-11T16:05:08.378027+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T16:05:08.378469+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"constance martel","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Dominique","5":"Foucher","6":"timothee.navarro@pascal.com","7":"actif","8":null,"9":48,"10":"user"} []
[2020-08-11T16:05:08.498996+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"Éric-gilles mendes","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Thomas","5":"Bourgeois","6":"marcelle.vidal@yahoo.fr","7":"actif","8":null,"9":48,"10":"user"} []
[2020-08-11T16:05:08.619991+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"julien olivier-gros","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Agnès","5":"Merle","6":"rodriguez.lucie@masson.com","7":"actif","8":null,"9":48,"10":"user"} []
[2020-08-11T16:05:08.620643+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T16:05:08.621121+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T16:05:08.622394+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [18,63] []
[2020-08-11T16:05:08.623141+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T16:05:08.623374+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [18,64] []
[2020-08-11T16:05:08.623793+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T16:05:08.623997+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [18,65] []
[2020-08-11T16:05:08.624345+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T16:05:08.624530+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [18,66] []
[2020-08-11T16:05:08.624897+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T16:05:08.625098+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":39} []
[2020-08-11T16:05:08.625811+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":39} []
[2020-08-11T16:05:08.626207+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":39} []
[2020-08-11T16:05:08.626593+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T16:05:08.626818+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":40} []
[2020-08-11T16:05:08.627219+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":40} []
[2020-08-11T16:05:08.627603+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":40} []
[2020-08-11T16:05:08.627989+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T16:05:08.628170+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":41} []
[2020-08-11T16:05:08.628563+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":41} []
[2020-08-11T16:05:08.628955+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":41} []
[2020-08-11T16:05:08.629188+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T16:05:08.635638+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Too few arguments to function App\Entity\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 129 and exactly 1 expected" {"exception":"[object] (ArgumentCountError(code: 0): Too few arguments to function App\\Entity\\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 129 and exactly 1 expected at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Entity/Promo.php:184)","command":"doctrine:fixtures:load","message":"Too few arguments to function App\\Entity\\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 129 and exactly 1 expected"} []
[2020-08-11T16:05:08.635869+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T16:05:08.636027+00:00] php.CRITICAL: Uncaught Error: Too few arguments to function App\Entity\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 129 and exactly 1 expected {"exception":"[object] (ArgumentCountError(code: 0): Too few arguments to function App\\Entity\\Promo::setDateFinProvisoire(), 0 passed in /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php on line 129 and exactly 1 expected at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/Entity/Promo.php:184)"} []
[2020-08-11T16:05:27.060608+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T16:05:27.090410+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T16:05:27.090895+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T16:05:27.091376+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T16:05:27.091787+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T16:05:27.092134+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T16:05:27.093950+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T16:05:27.094241+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T16:05:27.096531+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T16:05:27.096820+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T16:05:27.097899+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T16:05:27.098067+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T16:05:27.098205+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T16:05:27.098366+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T16:05:27.099869+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T16:05:27.101239+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T16:05:27.101388+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T16:05:27.101570+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T16:05:27.102782+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T16:05:27.105589+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T16:05:27.244173+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T16:05:27.245623+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"louis nicolas","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Christelle","5":"Perrot","6":"juliette.thierry@guillot.net","7":"actif","8":null,"9":49,"10":"formateur"} []
[2020-08-11T16:05:27.245869+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":145} []
[2020-08-11T16:05:27.380128+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"jean vidal","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Georges","5":"Cohen","6":"veronique80@weber.com","7":"actif","8":null,"9":49,"10":"formateur"} []
[2020-08-11T16:05:27.380513+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":146} []
[2020-08-11T16:05:27.502232+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"emmanuelle muller","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"François","5":"Blanc","6":"margot.labbe@maury.fr","7":"actif","8":null,"9":49,"10":"formateur"} []
[2020-08-11T16:05:27.502608+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":147} []
[2020-08-11T16:05:27.624080+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T16:05:27.624508+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"rémy de bonnet","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Jules","5":"Menard","6":"gfischer@baudry.org","7":"actif","8":null,"9":50,"10":"cm"} []
[2020-08-11T16:05:27.624711+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":148} []
[2020-08-11T16:05:27.753000+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"susan salmon","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Joséphine","5":"Schneider","6":"martine94@wanadoo.fr","7":"actif","8":null,"9":50,"10":"cm"} []
[2020-08-11T16:05:27.753378+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":149} []
[2020-08-11T16:05:27.875066+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"daniel lemaitre-le gall","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Guillaume","5":"Aubry","6":"richard.gerard@guerin.net","7":"actif","8":null,"9":50,"10":"cm"} []
[2020-08-11T16:05:27.875452+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":150} []
[2020-08-11T16:05:27.996285+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T16:05:27.996714+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"margaux perrin","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Lucy","5":"Valette","6":"lemaire.noemi@bouygtel.fr","7":"actif","8":null,"9":51,"10":"apprenant"} []
[2020-08-11T16:05:27.996917+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":151,"2":null} []
[2020-08-11T16:05:28.117788+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"aimée le robin","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Georges","5":"Grenier","6":"renee55@wanadoo.fr","7":"actif","8":null,"9":51,"10":"apprenant"} []
[2020-08-11T16:05:28.118151+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":152,"2":null} []
[2020-08-11T16:05:28.238596+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"marthe antoine","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Jules","5":"Traore","6":"roger.durand@besnard.fr","7":"actif","8":null,"9":51,"10":"apprenant"} []
[2020-08-11T16:05:28.238967+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":153,"2":null} []
[2020-08-11T16:05:28.367603+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T16:05:28.367999+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"victor gomes","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Benoît","5":"Chevallier","6":"alfred.jacob@mercier.org","7":"actif","8":null,"9":52,"10":"user"} []
[2020-08-11T16:05:28.488966+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"margaud mahe-prevost","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Camille","5":"Benoit","6":"fernandez.alexandria@dasilva.com","7":"actif","8":null,"9":52,"10":"user"} []
[2020-08-11T16:05:28.609537+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"gabrielle de la brun","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Paul","5":"Fernandez","6":"zcolas@voila.fr","7":"actif","8":null,"9":52,"10":"user"} []
[2020-08-11T16:05:28.610128+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T16:05:28.610520+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T16:05:28.611724+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [19,67] []
[2020-08-11T16:05:28.612405+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T16:05:28.612606+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [19,68] []
[2020-08-11T16:05:28.612948+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T16:05:28.613128+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [19,69] []
[2020-08-11T16:05:28.613463+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T16:05:28.613635+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [19,70] []
[2020-08-11T16:05:28.613996+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T16:05:28.614217+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":42} []
[2020-08-11T16:05:28.614924+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":42} []
[2020-08-11T16:05:28.615314+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":42} []
[2020-08-11T16:05:28.615694+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T16:05:28.615882+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":43} []
[2020-08-11T16:05:28.616262+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":43} []
[2020-08-11T16:05:28.616651+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":43} []
[2020-08-11T16:05:28.617036+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T16:05:28.617213+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":44} []
[2020-08-11T16:05:28.617603+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":44} []
[2020-08-11T16:05:28.617997+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":44} []
[2020-08-11T16:05:28.619051+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T16:05:28.623836+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "A new entity was found through the relationship 'App\Entity\Groupecompetence#user' that was not configured to cascade persist operations for entity: App\Entity\User@000000005f8019660000000013a7e2b8. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={"persist"}). If you cannot find out which entity causes the problem implement 'App\Entity\User#__toString()' to get a clue." {"exception":"[object] (Doctrine\\ORM\\ORMInvalidArgumentException(code: 0): A new entity was found through the relationship 'App\\Entity\\Groupecompetence#user' that was not configured to cascade persist operations for entity: App\\Entity\\User@000000005f8019660000000013a7e2b8. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={\"persist\"}). If you cannot find out which entity causes the problem implement 'App\\Entity\\User#__toString()' to get a clue. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/orm/lib/Doctrine/ORM/ORMInvalidArgumentException.php:102)","command":"doctrine:fixtures:load","message":"A new entity was found through the relationship 'App\\Entity\\Groupecompetence#user' that was not configured to cascade persist operations for entity: App\\Entity\\User@000000005f8019660000000013a7e2b8. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={\"persist\"}). If you cannot find out which entity causes the problem implement 'App\\Entity\\User#__toString()' to get a clue."} []
[2020-08-11T16:05:28.624062+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T16:06:33.742760+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T16:06:33.765635+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T16:06:33.766715+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T16:06:33.767634+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T16:06:33.768256+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T16:06:33.768572+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T16:06:33.777619+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T16:06:33.777966+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T16:06:33.779677+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T16:06:33.779946+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T16:06:33.780218+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T16:06:33.781685+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T16:06:33.781895+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T16:06:33.782131+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T16:06:33.782355+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T16:06:33.786112+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T16:06:33.786387+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T16:06:33.786753+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T16:06:33.788156+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T16:06:33.792106+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T16:06:33.951039+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T16:06:33.952578+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"daniel garnier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Étienne","5":"Fleury","6":"guyot.elisabeth@bouygtel.fr","7":"actif","8":null,"9":53,"10":"formateur"} []
[2020-08-11T16:06:33.952907+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":157} []
[2020-08-11T16:06:34.078710+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"gérard mallet","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Stéphane","5":"Vallee","6":"adele.colas@laposte.net","7":"actif","8":null,"9":53,"10":"formateur"} []
[2020-08-11T16:06:34.079172+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":158} []
[2020-08-11T16:06:34.203431+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"jacqueline rousseau-leveque","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Sophie","5":"Colas","6":"suzanne.ferreira@noos.fr","7":"actif","8":null,"9":53,"10":"formateur"} []
[2020-08-11T16:06:34.203906+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":159} []
[2020-08-11T16:06:34.327868+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T16:06:34.328386+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"honoré-lucas valette","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Olivier","5":"Bonnet","6":"honore.mathieu@bouygtel.fr","7":"actif","8":null,"9":54,"10":"cm"} []
[2020-08-11T16:06:34.328678+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":160} []
[2020-08-11T16:06:34.454072+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"benjamin de delmas","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Grégoire","5":"Traore","6":"agnes.menard@ifrance.com","7":"actif","8":null,"9":54,"10":"cm"} []
[2020-08-11T16:06:34.454499+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":161} []
[2020-08-11T16:06:34.576705+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"laurent pineau","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Claire","5":"Guyot","6":"agathe75@orange.fr","7":"actif","8":null,"9":54,"10":"cm"} []
[2020-08-11T16:06:34.577250+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":162} []
[2020-08-11T16:06:34.698604+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T16:06:34.699106+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"valentine guillaume","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Benoît","5":"Da Silva","6":"matthieu.rolland@noos.fr","7":"actif","8":null,"9":55,"10":"apprenant"} []
[2020-08-11T16:06:34.699401+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":163,"2":null} []
[2020-08-11T16:06:34.821579+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"Étienne dubois","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Laure","5":"Noel","6":"roland50@pichon.net","7":"actif","8":null,"9":55,"10":"apprenant"} []
[2020-08-11T16:06:34.822017+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":164,"2":null} []
[2020-08-11T16:06:34.944755+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"joseph roger","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Benjamin","5":"Lopez","6":"eric.pichon@bousquet.com","7":"actif","8":null,"9":55,"10":"apprenant"} []
[2020-08-11T16:06:34.945218+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":165,"2":null} []
[2020-08-11T16:06:35.065879+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T16:06:35.066334+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"alexandria gillet","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Noémi","5":"Brun","6":"tristan43@lamy.net","7":"actif","8":null,"9":56,"10":"user"} []
[2020-08-11T16:06:35.187602+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"marine bertin","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Antoine","5":"Mathieu","6":"klein.rene@turpin.com","7":"actif","8":null,"9":56,"10":"user"} []
[2020-08-11T16:06:35.308122+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"daniel dupont-texier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Aimée","5":"Gallet","6":"thomas.ledoux@tiscali.fr","7":"actif","8":null,"9":56,"10":"user"} []
[2020-08-11T16:06:35.308801+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T16:06:35.309297+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T16:06:35.310505+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [20,71] []
[2020-08-11T16:06:35.311243+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T16:06:35.311495+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [20,72] []
[2020-08-11T16:06:35.311955+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T16:06:35.313356+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [20,73] []
[2020-08-11T16:06:35.313729+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T16:06:35.313944+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [20,74] []
[2020-08-11T16:06:35.314355+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T16:06:35.314533+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":45} []
[2020-08-11T16:06:35.315301+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":45} []
[2020-08-11T16:06:35.315793+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":45} []
[2020-08-11T16:06:35.316254+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T16:06:35.316473+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":46} []
[2020-08-11T16:06:35.316888+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":46} []
[2020-08-11T16:06:35.317301+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":46} []
[2020-08-11T16:06:35.317715+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T16:06:35.317931+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":47} []
[2020-08-11T16:06:35.318376+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":47} []
[2020-08-11T16:06:35.318769+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":47} []
[2020-08-11T16:06:35.319430+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":"user"} []
[2020-08-11T16:06:35.321165+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T16:06:35.326972+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)' with params [null, null, null, null, null, null, null, null, null, "user"]:  SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'username' cannot be null" {"exception":"[object] (Doctrine\\DBAL\\Exception\\NotNullConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)' with params [null, null, null, null, null, null, null, null, null, \"user\"]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1048 Column 'username' cannot be null at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:103)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'username' cannot be null at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'username' cannot be null at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)","command":"doctrine:fixtures:load","message":"An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)' with params [null, null, null, null, null, null, null, null, null, \"user\"]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1048 Column 'username' cannot be null"} []
[2020-08-11T16:06:35.327243+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T16:07:05.681251+00:00] console.DEBUG: Command "doctrine:database:drop" exited with code "2" {"command":"doctrine:database:drop","code":2} []
[2020-08-11T16:07:54.879774+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T16:07:54.909284+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T16:07:54.964609+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T16:07:54.966503+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "An exception occurred while executing 'DELETE FROM groupecompetence_competence':  SQLSTATE[42S02]: Base table or view not found: 1146 Table 'fil_rouge.groupecompetence_competence' doesn't exist" {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableNotFoundException(code: 0): An exception occurred while executing 'DELETE FROM groupecompetence_competence':\n\nSQLSTATE[42S02]: Base table or view not found: 1146 Table 'fil_rouge.groupecompetence_competence' doesn't exist at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:42)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'fil_rouge.groupecompetence_competence' doesn't exist at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:43)\n[previous exception] [object] (PDOException(code: 42S02): SQLSTATE[42S02]: Base table or view not found: 1146 Table 'fil_rouge.groupecompetence_competence' doesn't exist at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:41)","command":"doctrine:fixtures:load","message":"An exception occurred while executing 'DELETE FROM groupecompetence_competence':\n\nSQLSTATE[42S02]: Base table or view not found: 1146 Table 'fil_rouge.groupecompetence_competence' doesn't exist"} []
[2020-08-11T16:07:54.966948+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T16:08:09.939454+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:09.942597+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:13.081075+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:30.459262+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:30.465883+00:00] doctrine.DEBUG: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.487472+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:30.488210+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:30.490301+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:30.492328+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:30.493505+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:30.494224+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-11T16:08:30.495571+00:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-11T16:08:30.496480+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:30.496957+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:30.497444+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:30.498675+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:30.499331+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:30.499937+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-11T16:08:30.500598+00:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-11T16:08:30.501220+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:30.501753+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:30.502256+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:30.503504+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:30.504020+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:30.504505+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-11T16:08:30.504969+00:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-11T16:08:30.512589+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T16:08:30.533269+00:00] doctrine.DEBUG: CREATE TABLE apprenant (id INT NOT NULL, profilsortie_id INT DEFAULT NULL, INDEX IDX_C4EB462EFE5BE99E (profilsortie_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.538726+00:00] doctrine.DEBUG: CREATE TABLE apprenant_groupe (apprenant_id INT NOT NULL, groupe_id INT NOT NULL, INDEX IDX_1D224F8DC5697D6D (apprenant_id), INDEX IDX_1D224F8D7A45358C (groupe_id), PRIMARY KEY(apprenant_id, groupe_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.544685+00:00] doctrine.DEBUG: CREATE TABLE cm (id INT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.548337+00:00] doctrine.DEBUG: CREATE TABLE competence (id INT AUTO_INCREMENT NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.552676+00:00] doctrine.DEBUG: CREATE TABLE formateur (id INT NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.557240+00:00] doctrine.DEBUG: CREATE TABLE formateur_groupe (formateur_id INT NOT NULL, groupe_id INT NOT NULL, INDEX IDX_2C668E09155D8F51 (formateur_id), INDEX IDX_2C668E097A45358C (groupe_id), PRIMARY KEY(formateur_id, groupe_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.562863+00:00] doctrine.DEBUG: CREATE TABLE groupe (id INT AUTO_INCREMENT NOT NULL, promo_id INT NOT NULL, nom VARCHAR(255) NOT NULL, date_creation DATE NOT NULL, statut VARCHAR(255) DEFAULT NULL, type VARCHAR(255) DEFAULT NULL, INDEX IDX_4B98C21D0C07AFF (promo_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.567940+00:00] doctrine.DEBUG: CREATE TABLE groupecompetence (id INT AUTO_INCREMENT NOT NULL, user_id INT NOT NULL, libelle VARCHAR(255) NOT NULL, descriptif VARCHAR(255) NOT NULL, INDEX IDX_89DC1A55A76ED395 (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.572635+00:00] doctrine.DEBUG: CREATE TABLE groupecompetence_competence (groupecompetence_id INT NOT NULL, competence_id INT NOT NULL, INDEX IDX_70BDD49C337E4DC6 (groupecompetence_id), INDEX IDX_70BDD49C15761DAB (competence_id), PRIMARY KEY(groupecompetence_id, competence_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.578098+00:00] doctrine.DEBUG: CREATE TABLE groupetag (id INT AUTO_INCREMENT NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.582073+00:00] doctrine.DEBUG: CREATE TABLE groupetag_tag (groupetag_id INT NOT NULL, tag_id INT NOT NULL, INDEX IDX_905A3638654741DD (groupetag_id), INDEX IDX_905A3638BAD26311 (tag_id), PRIMARY KEY(groupetag_id, tag_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.587619+00:00] doctrine.DEBUG: CREATE TABLE niveau (id INT AUTO_INCREMENT NOT NULL, competence_id INT DEFAULT NULL, libelle VARCHAR(255) NOT NULL, critere_evaluation VARCHAR(255) NOT NULL, groupe_action VARCHAR(255) NOT NULL, INDEX IDX_4BDFF36B15761DAB (competence_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.593213+00:00] doctrine.DEBUG: CREATE TABLE profil (id INT AUTO_INCREMENT NOT NULL, libelle VARCHAR(255) NOT NULL, last_update DATETIME DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.596898+00:00] doctrine.DEBUG: CREATE TABLE profilsortie (id INT AUTO_INCREMENT NOT NULL, libelle VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.606199+00:00] doctrine.DEBUG: CREATE TABLE promo (id INT AUTO_INCREMENT NOT NULL, user_id INT DEFAULT NULL, referentiel_id INT NOT NULL, langue VARCHAR(255) NOT NULL, titre VARCHAR(255) NOT NULL, description VARCHAR(255) NOT NULL, lieu VARCHAR(255) NOT NULL, reference_agate VARCHAR(255) NOT NULL, date_debut DATE NOT NULL, date_fin_provisoire DATE NOT NULL, fabrique VARCHAR(255) NOT NULL, date_fin_reelle DATE DEFAULT NULL, etat VARCHAR(255) NOT NULL, INDEX IDX_B0139AFBA76ED395 (user_id), INDEX IDX_B0139AFB805DB139 (referentiel_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.612753+00:00] doctrine.DEBUG: CREATE TABLE referentiel (id INT AUTO_INCREMENT NOT NULL, libelle VARCHAR(255) NOT NULL, presentation VARCHAR(255) NOT NULL, programme VARCHAR(255) NOT NULL, critere_admission VARCHAR(255) NOT NULL, critere_evaluation VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.617194+00:00] doctrine.DEBUG: CREATE TABLE referentiel_groupecompetence (referentiel_id INT NOT NULL, groupecompetence_id INT NOT NULL, INDEX IDX_32944F2A805DB139 (referentiel_id), INDEX IDX_32944F2A337E4DC6 (groupecompetence_id), PRIMARY KEY(referentiel_id, groupecompetence_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.622953+00:00] doctrine.DEBUG: CREATE TABLE tag (id INT AUTO_INCREMENT NOT NULL, libelle VARCHAR(255) NOT NULL, descriptif VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.627459+00:00] doctrine.DEBUG: CREATE TABLE user (id INT AUTO_INCREMENT NOT NULL, profil_id INT NOT NULL, username VARCHAR(180) NOT NULL, password VARCHAR(255) NOT NULL, avatar LONGBLOB DEFAULT NULL, prenom VARCHAR(255) NOT NULL, nom VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, statut VARCHAR(255) NOT NULL, last_login DATETIME DEFAULT NULL, type VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_8D93D649F85E0677 (username), INDEX IDX_8D93D649275ED078 (profil_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.632986+00:00] doctrine.DEBUG: ALTER TABLE apprenant ADD CONSTRAINT FK_C4EB462EFE5BE99E FOREIGN KEY (profilsortie_id) REFERENCES profilsortie (id) [] []
[2020-08-11T16:08:30.645512+00:00] doctrine.DEBUG: ALTER TABLE apprenant ADD CONSTRAINT FK_C4EB462EBF396750 FOREIGN KEY (id) REFERENCES user (id) ON DELETE CASCADE [] []
[2020-08-11T16:08:30.657250+00:00] doctrine.DEBUG: ALTER TABLE apprenant_groupe ADD CONSTRAINT FK_1D224F8DC5697D6D FOREIGN KEY (apprenant_id) REFERENCES apprenant (id) ON DELETE CASCADE [] []
[2020-08-11T16:08:30.670360+00:00] doctrine.DEBUG: ALTER TABLE apprenant_groupe ADD CONSTRAINT FK_1D224F8D7A45358C FOREIGN KEY (groupe_id) REFERENCES groupe (id) ON DELETE CASCADE [] []
[2020-08-11T16:08:30.682966+00:00] doctrine.DEBUG: ALTER TABLE cm ADD CONSTRAINT FK_3C0A377EBF396750 FOREIGN KEY (id) REFERENCES user (id) ON DELETE CASCADE [] []
[2020-08-11T16:08:30.693570+00:00] doctrine.DEBUG: ALTER TABLE formateur ADD CONSTRAINT FK_ED767E4FBF396750 FOREIGN KEY (id) REFERENCES user (id) ON DELETE CASCADE [] []
[2020-08-11T16:08:30.705342+00:00] doctrine.DEBUG: ALTER TABLE formateur_groupe ADD CONSTRAINT FK_2C668E09155D8F51 FOREIGN KEY (formateur_id) REFERENCES formateur (id) ON DELETE CASCADE [] []
[2020-08-11T16:08:30.718304+00:00] doctrine.DEBUG: ALTER TABLE formateur_groupe ADD CONSTRAINT FK_2C668E097A45358C FOREIGN KEY (groupe_id) REFERENCES groupe (id) ON DELETE CASCADE [] []
[2020-08-11T16:08:30.730906+00:00] doctrine.DEBUG: ALTER TABLE groupe ADD CONSTRAINT FK_4B98C21D0C07AFF FOREIGN KEY (promo_id) REFERENCES promo (id) [] []
[2020-08-11T16:08:30.742552+00:00] doctrine.DEBUG: ALTER TABLE groupecompetence ADD CONSTRAINT FK_89DC1A55A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) [] []
[2020-08-11T16:08:30.754111+00:00] doctrine.DEBUG: ALTER TABLE groupecompetence_competence ADD CONSTRAINT FK_70BDD49C337E4DC6 FOREIGN KEY (groupecompetence_id) REFERENCES groupecompetence (id) ON DELETE CASCADE [] []
[2020-08-11T16:08:30.766733+00:00] doctrine.DEBUG: ALTER TABLE groupecompetence_competence ADD CONSTRAINT FK_70BDD49C15761DAB FOREIGN KEY (competence_id) REFERENCES competence (id) ON DELETE CASCADE [] []
[2020-08-11T16:08:30.779383+00:00] doctrine.DEBUG: ALTER TABLE groupetag_tag ADD CONSTRAINT FK_905A3638654741DD FOREIGN KEY (groupetag_id) REFERENCES groupetag (id) ON DELETE CASCADE [] []
[2020-08-11T16:08:30.792639+00:00] doctrine.DEBUG: ALTER TABLE groupetag_tag ADD CONSTRAINT FK_905A3638BAD26311 FOREIGN KEY (tag_id) REFERENCES tag (id) ON DELETE CASCADE [] []
[2020-08-11T16:08:30.825290+00:00] doctrine.DEBUG: ALTER TABLE niveau ADD CONSTRAINT FK_4BDFF36B15761DAB FOREIGN KEY (competence_id) REFERENCES competence (id) [] []
[2020-08-11T16:08:30.837256+00:00] doctrine.DEBUG: ALTER TABLE promo ADD CONSTRAINT FK_B0139AFBA76ED395 FOREIGN KEY (user_id) REFERENCES user (id) [] []
[2020-08-11T16:08:30.850957+00:00] doctrine.DEBUG: ALTER TABLE promo ADD CONSTRAINT FK_B0139AFB805DB139 FOREIGN KEY (referentiel_id) REFERENCES referentiel (id) [] []
[2020-08-11T16:08:30.865334+00:00] doctrine.DEBUG: ALTER TABLE referentiel_groupecompetence ADD CONSTRAINT FK_32944F2A805DB139 FOREIGN KEY (referentiel_id) REFERENCES referentiel (id) ON DELETE CASCADE [] []
[2020-08-11T16:08:30.878134+00:00] doctrine.DEBUG: ALTER TABLE referentiel_groupecompetence ADD CONSTRAINT FK_32944F2A337E4DC6 FOREIGN KEY (groupecompetence_id) REFERENCES groupecompetence (id) ON DELETE CASCADE [] []
[2020-08-11T16:08:30.891359+00:00] doctrine.DEBUG: ALTER TABLE user ADD CONSTRAINT FK_8D93D649275ED078 FOREIGN KEY (profil_id) REFERENCES profil (id) [] []
[2020-08-11T16:08:30.904520+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:30.905078+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:30.905600+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:30.905857+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:30.906105+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-11T16:08:30.906407+00:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2020-08-11T16:08:30+00:00",391.0] []
[2020-08-11T16:08:30.907778+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-11T16:08:30.907883+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T16:08:30.907973+00:00] doctrine.DEBUG: ALTER TABLE groupetag ADD last_update DATETIME DEFAULT NULL [] []
[2020-08-11T16:08:30.909639+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:30.910066+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:30.910568+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:30.910840+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:30.911092+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-11T16:08:30.911346+00:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2020-08-11T16:08:30+00:00",2.0] []
[2020-08-11T16:08:30.912292+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-11T16:08:30.912396+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T16:08:30.912506+00:00] doctrine.DEBUG: CREATE TABLE apprenant (id INT NOT NULL, profilsortie_id INT DEFAULT NULL, INDEX IDX_C4EB462EFE5BE99E (profilsortie_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-08-11T16:08:30.913701+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T16:08:30.914679+00:00] console.ERROR: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'CREATE TABLE apprenant (id INT NOT NULL, profilsortie_id INT DEFAULT NULL, INDEX IDX_C4EB462EFE5BE99E (profilsortie_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB':  SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'apprenant' already exists" {"exception":"[object] (Doctrine\\DBAL\\Exception\\TableExistsException(code: 0): An exception occurred while executing 'CREATE TABLE apprenant (id INT NOT NULL, profilsortie_id INT DEFAULT NULL, INDEX IDX_C4EB462EFE5BE99E (profilsortie_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB':\n\nSQLSTATE[42S01]: Base table or view already exists: 1050 Table 'apprenant' already exists at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:38)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 42S01): SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'apprenant' already exists at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:43)\n[previous exception] [object] (PDOException(code: 42S01): SQLSTATE[42S01]: Base table or view already exists: 1050 Table 'apprenant' already exists at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:41)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'CREATE TABLE apprenant (id INT NOT NULL, profilsortie_id INT DEFAULT NULL, INDEX IDX_C4EB462EFE5BE99E (profilsortie_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB':\n\nSQLSTATE[42S01]: Base table or view already exists: 1050 Table 'apprenant' already exists"} []
[2020-08-11T16:08:30.914926+00:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2020-08-11T16:08:54.492422+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:54.493477+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:54.497600+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:54.498552+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:54.498947+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:54.499294+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-11T16:08:54.499752+00:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-11T16:08:54.501101+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:54.501514+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:54.501871+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:54.502405+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:54.502698+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:54.502947+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-11T16:08:54.503233+00:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-11T16:08:57.232555+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:08:57.234226+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'apprenant' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.236431+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'apprenant' */ WHERE k.table_name = 'apprenant' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.238270+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'apprenant' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.238901+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'apprenant' [] []
[2020-08-11T16:08:57.239336+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'apprenant_groupe' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.240098+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'apprenant_groupe' */ WHERE k.table_name = 'apprenant_groupe' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.240828+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'apprenant_groupe' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.241373+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'apprenant_groupe' [] []
[2020-08-11T16:08:57.241753+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'cm' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.242400+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'cm' */ WHERE k.table_name = 'cm' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.243025+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'cm' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.243478+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'cm' [] []
[2020-08-11T16:08:57.243934+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'competence' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.244699+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'competence' */ WHERE k.table_name = 'competence' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.245554+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'competence' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.246088+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'competence' [] []
[2020-08-11T16:08:57.246543+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.247530+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.248058+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.248624+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-11T16:08:57.249043+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'formateur' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.249896+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'formateur' */ WHERE k.table_name = 'formateur' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.250717+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'formateur' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.251401+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'formateur' [] []
[2020-08-11T16:08:57.251776+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'formateur_groupe' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.252515+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'formateur_groupe' */ WHERE k.table_name = 'formateur_groupe' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.253256+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'formateur_groupe' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.253784+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'formateur_groupe' [] []
[2020-08-11T16:08:57.254162+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'groupe' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.254859+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'groupe' */ WHERE k.table_name = 'groupe' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.255421+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'groupe' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.255785+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'groupe' [] []
[2020-08-11T16:08:57.256047+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'groupecompetence' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.256631+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'groupecompetence' */ WHERE k.table_name = 'groupecompetence' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.257112+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'groupecompetence' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.257436+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'groupecompetence' [] []
[2020-08-11T16:08:57.257673+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'groupecompetence_competence' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.258241+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'groupecompetence_competence' */ WHERE k.table_name = 'groupecompetence_competence' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.258752+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'groupecompetence_competence' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.259100+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'groupecompetence_competence' [] []
[2020-08-11T16:08:57.259336+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'groupetag' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.259868+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'groupetag' */ WHERE k.table_name = 'groupetag' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.260173+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'groupetag' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.260443+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'groupetag' [] []
[2020-08-11T16:08:57.260656+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'groupetag_tag' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.261147+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'groupetag_tag' */ WHERE k.table_name = 'groupetag_tag' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.261594+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'groupetag_tag' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.261925+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'groupetag_tag' [] []
[2020-08-11T16:08:57.262155+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'niveau' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.262705+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'niveau' */ WHERE k.table_name = 'niveau' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.263134+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'niveau' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.263437+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'niveau' [] []
[2020-08-11T16:08:57.263657+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'profil' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.264222+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'profil' */ WHERE k.table_name = 'profil' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.264692+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'profil' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.265053+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'profil' [] []
[2020-08-11T16:08:57.265279+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'profilsortie' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.265861+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'profilsortie' */ WHERE k.table_name = 'profilsortie' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.266342+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'profilsortie' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.266634+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'profilsortie' [] []
[2020-08-11T16:08:57.266846+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'promo' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.267492+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'promo' */ WHERE k.table_name = 'promo' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.267929+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'promo' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.268231+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'promo' [] []
[2020-08-11T16:08:57.268438+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'referentiel' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.268949+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'referentiel' */ WHERE k.table_name = 'referentiel' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.269332+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'referentiel' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.269582+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'referentiel' [] []
[2020-08-11T16:08:57.269786+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'referentiel_groupecompetence' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.270247+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'referentiel_groupecompetence' */ WHERE k.table_name = 'referentiel_groupecompetence' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.270674+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'referentiel_groupecompetence' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.270975+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'referentiel_groupecompetence' [] []
[2020-08-11T16:08:57.271191+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'tag' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.271666+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'tag' */ WHERE k.table_name = 'tag' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.272026+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.272272+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'tag' [] []
[2020-08-11T16:08:57.272471+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:08:57.273002+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:08:57.273406+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:08:57.273694+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-08-11T16:09:00.684464+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:09:00.692295+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:09:00.693717+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:09:00.694202+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:09:00.694666+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-11T16:09:00.697164+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:09:00.697845+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:09:00.698608+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:09:00.699694+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:09:00.700172+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:09:00.700700+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-11T16:09:00.701349+00:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-11T16:09:00.702257+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:09:00.702864+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:09:00.703388+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:09:00.704264+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:09:00.704840+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:09:00.705412+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-11T16:09:00.705788+00:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-11T16:09:11.407433+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:09:11.408401+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:09:11.409334+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:09:11.411077+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:09:11.412037+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:09:11.412904+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-11T16:09:11.413722+00:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-11T16:09:11.417559+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T16:09:11.429892+00:00] doctrine.DEBUG: ALTER TABLE promo CHANGE referentiel_id referentiel_id INT DEFAULT NULL, CHANGE reference_agate reference_agate VARCHAR(255) DEFAULT NULL [] []
[2020-08-11T16:09:11.497838+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-11T16:09:11.498530+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-11T16:09:11.499565+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-11T16:09:11.500137+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-11T16:09:11.500754+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-11T16:09:11.501398+00:00] doctrine.DEBUG: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) ["DoctrineMigrations\\Version [...]","2020-08-11T16:09:11+00:00",80.0] []
[2020-08-11T16:09:11.503462+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-11T16:09:17.017346+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T16:09:17.044331+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T16:09:17.044719+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T16:09:17.044975+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T16:09:17.045253+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T16:09:17.045694+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T16:09:17.046156+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T16:09:17.046495+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T16:09:17.047008+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T16:09:17.047489+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T16:09:17.047794+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T16:09:17.048110+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T16:09:17.048415+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T16:09:17.048749+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T16:09:17.049035+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T16:09:17.049265+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T16:09:17.049458+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T16:09:17.049643+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T16:09:17.049835+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T16:09:17.050004+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T16:09:17.191112+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T16:09:17.192673+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"Édith colin","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Michelle","5":"Dupuy","6":"nicole.huet@ifrance.com","7":"actif","8":null,"9":1,"10":"formateur"} []
[2020-08-11T16:09:17.193018+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":1} []
[2020-08-11T16:09:17.313616+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"hélène-monique perez","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Anaïs","5":"Legrand","6":"zbouvet@laposte.net","7":"actif","8":null,"9":1,"10":"formateur"} []
[2020-08-11T16:09:17.314091+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":2} []
[2020-08-11T16:09:17.446318+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"guillaume moreno","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Nathalie","5":"Fouquet","6":"cvincent@tiscali.fr","7":"actif","8":null,"9":1,"10":"formateur"} []
[2020-08-11T16:09:17.446746+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":3} []
[2020-08-11T16:09:17.568150+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T16:09:17.568682+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"thérèse hamon-roy","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Dominique","5":"Brunel","6":"cboulay@tiscali.fr","7":"actif","8":null,"9":2,"10":"cm"} []
[2020-08-11T16:09:17.570219+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":4} []
[2020-08-11T16:09:17.704060+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"anne aubert","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Julien","5":"Payet","6":"edouard89@noos.fr","7":"actif","8":null,"9":2,"10":"cm"} []
[2020-08-11T16:09:17.704533+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":5} []
[2020-08-11T16:09:17.825650+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"frédérique diallo","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Charlotte","5":"Descamps","6":"moreno.louis@begue.com","7":"actif","8":null,"9":2,"10":"cm"} []
[2020-08-11T16:09:17.826090+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":6} []
[2020-08-11T16:09:17.947834+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T16:09:17.948349+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"martin-vincent vallee","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Alphonse","5":"Brunet","6":"gregoire.clemence@gmail.com","7":"actif","8":null,"9":3,"10":"apprenant"} []
[2020-08-11T16:09:17.948650+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":7,"2":null} []
[2020-08-11T16:09:18.069506+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"aimée charpentier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Andrée","5":"Lemonnier","6":"camille48@schmitt.com","7":"actif","8":null,"9":3,"10":"apprenant"} []
[2020-08-11T16:09:18.069923+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":8,"2":null} []
[2020-08-11T16:09:18.190805+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"diane descamps-brun","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Gabriel","5":"Bouvet","6":"leroy.aurelie@yahoo.fr","7":"actif","8":null,"9":3,"10":"apprenant"} []
[2020-08-11T16:09:18.191259+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":9,"2":null} []
[2020-08-11T16:09:18.311387+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T16:09:18.311862+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"roger hardy","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Henri","5":"Techer","6":"baudry.constance@sfr.fr","7":"actif","8":null,"9":4,"10":"user"} []
[2020-08-11T16:09:18.432019+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"susanne denis","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Valentine","5":"Diallo","6":"idupuis@laposte.net","7":"actif","8":null,"9":4,"10":"user"} []
[2020-08-11T16:09:18.552463+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"andré cohen","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Rémy","5":"Perrot","6":"gomes.david@guichard.fr","7":"actif","8":null,"9":4,"10":"user"} []
[2020-08-11T16:09:18.553172+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T16:09:18.553646+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T16:09:18.554953+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [1,1] []
[2020-08-11T16:09:18.555739+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T16:09:18.555980+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [1,2] []
[2020-08-11T16:09:18.557792+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T16:09:18.558059+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [1,3] []
[2020-08-11T16:09:18.558452+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T16:09:18.558705+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [1,4] []
[2020-08-11T16:09:18.559179+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T16:09:18.559467+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":1} []
[2020-08-11T16:09:18.560360+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":1} []
[2020-08-11T16:09:18.560879+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":1} []
[2020-08-11T16:09:18.561344+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T16:09:18.561612+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":2} []
[2020-08-11T16:09:18.563611+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":2} []
[2020-08-11T16:09:18.564100+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":2} []
[2020-08-11T16:09:18.564528+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T16:09:18.564746+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":3} []
[2020-08-11T16:09:18.565169+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":3} []
[2020-08-11T16:09:18.565635+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":3} []
[2020-08-11T16:09:18.566247+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":null,"2":null,"3":null,"4":null,"5":null,"6":null,"7":null,"8":null,"9":null,"10":"user"} []
[2020-08-11T16:09:18.567265+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T16:09:18.571770+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)' with params [null, null, null, null, null, null, null, null, null, "user"]:  SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'username' cannot be null" {"exception":"[object] (Doctrine\\DBAL\\Exception\\NotNullConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)' with params [null, null, null, null, null, null, null, null, null, \"user\"]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1048 Column 'username' cannot be null at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:103)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'username' cannot be null at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:129)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'username' cannot be null at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:127)","command":"doctrine:fixtures:load","message":"An exception occurred while executing 'INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)' with params [null, null, null, null, null, null, null, null, null, \"user\"]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1048 Column 'username' cannot be null"} []
[2020-08-11T16:09:18.572015+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T16:35:21.789288+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T16:35:21.813362+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T16:35:21.813767+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T16:35:21.814066+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T16:35:21.814349+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T16:35:21.814620+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T16:35:21.814902+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T16:35:21.815177+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T16:35:21.815464+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T16:35:21.815658+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T16:35:21.816003+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T16:35:21.816299+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T16:35:21.816529+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T16:35:21.816843+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T16:35:21.817164+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T16:35:21.817459+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T16:35:21.817745+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T16:35:21.817969+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T16:35:21.818178+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T16:35:21.818344+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T16:35:21.956782+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T16:35:21.958295+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"Édith teixeira","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Henriette","5":"Clerc","6":"oguilbert@ferreira.fr","7":"actif","8":null,"9":5,"10":"formateur"} []
[2020-08-11T16:35:21.958613+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":13} []
[2020-08-11T16:35:22.078662+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"michèle guillaume","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Paul","5":"Chauvet","6":"jacquot.alexandria@wanadoo.fr","7":"actif","8":null,"9":5,"10":"formateur"} []
[2020-08-11T16:35:22.079127+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":14} []
[2020-08-11T16:35:22.208498+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"thierry barre-alexandre","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Tristan","5":"David","6":"chantal.guyot@laposte.net","7":"actif","8":null,"9":5,"10":"formateur"} []
[2020-08-11T16:35:22.208975+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":15} []
[2020-08-11T16:35:22.342315+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T16:35:22.342816+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"andré-raymond fischer","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Stéphanie","5":"Sauvage","6":"gregoire.guillon@mahe.fr","7":"actif","8":null,"9":6,"10":"cm"} []
[2020-08-11T16:35:22.344556+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":16} []
[2020-08-11T16:35:22.465235+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"gilles dupre","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Anaïs","5":"Barbe","6":"normand.margot@guerin.net","7":"actif","8":null,"9":6,"10":"cm"} []
[2020-08-11T16:35:22.465683+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":17} []
[2020-08-11T16:35:22.586534+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"louis lamy-breton","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Élise","5":"Renaud","6":"kadam@sfr.fr","7":"actif","8":null,"9":6,"10":"cm"} []
[2020-08-11T16:35:22.587019+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":18} []
[2020-08-11T16:35:22.708223+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T16:35:22.709830+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"laetitia bouvet","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Jean","5":"Maillet","6":"audrey25@delaunay.fr","7":"actif","8":null,"9":7,"10":"apprenant"} []
[2020-08-11T16:35:22.710238+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":19,"2":null} []
[2020-08-11T16:35:22.829768+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"isaac toussaint","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Céline","5":"Huet","6":"oaubry@dbmail.com","7":"actif","8":null,"9":7,"10":"apprenant"} []
[2020-08-11T16:35:22.830220+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":20,"2":null} []
[2020-08-11T16:35:22.950314+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"honoré david","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Victor","5":"Lelievre","6":"qmarie@dbmail.com","7":"actif","8":null,"9":7,"10":"apprenant"} []
[2020-08-11T16:35:22.950790+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":21,"2":null} []
[2020-08-11T16:35:23.070847+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T16:35:23.071342+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"caroline besson-imbert","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Sabine","5":"Thierry","6":"pruvost.danielle@valette.fr","7":"actif","8":null,"9":8,"10":"user"} []
[2020-08-11T16:35:23.193669+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"jules ribeiro","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Alexandria","5":"Bertin","6":"retienne@live.com","7":"actif","8":null,"9":8,"10":"user"} []
[2020-08-11T16:35:23.314263+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"margaud rousset","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Vincent","5":"Blondel","6":"ppons@toussaint.fr","7":"actif","8":null,"9":8,"10":"user"} []
[2020-08-11T16:35:23.314977+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T16:35:23.315463+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T16:35:23.316723+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [2,5] []
[2020-08-11T16:35:23.317475+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T16:35:23.317709+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [2,6] []
[2020-08-11T16:35:23.319726+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T16:35:23.320038+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [2,7] []
[2020-08-11T16:35:23.320488+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T16:35:23.320722+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [2,8] []
[2020-08-11T16:35:23.321121+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T16:35:23.321355+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":4} []
[2020-08-11T16:35:23.322144+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":4} []
[2020-08-11T16:35:23.322581+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":4} []
[2020-08-11T16:35:23.323027+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T16:35:23.323249+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":5} []
[2020-08-11T16:35:23.324870+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":5} []
[2020-08-11T16:35:23.325318+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":5} []
[2020-08-11T16:35:23.325742+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T16:35:23.326004+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":6} []
[2020-08-11T16:35:23.326433+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":6} []
[2020-08-11T16:35:23.326858+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":6} []
[2020-08-11T16:35:23.327806+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T16:35:23.330809+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "A new entity was found through the relationship 'App\Entity\Groupecompetence#user' that was not configured to cascade persist operations for entity: App\Entity\User@000000005e6aec5a000000005e1cdaf1. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={"persist"}). If you cannot find out which entity causes the problem implement 'App\Entity\User#__toString()' to get a clue." {"exception":"[object] (Doctrine\\ORM\\ORMInvalidArgumentException(code: 0): A new entity was found through the relationship 'App\\Entity\\Groupecompetence#user' that was not configured to cascade persist operations for entity: App\\Entity\\User@000000005e6aec5a000000005e1cdaf1. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={\"persist\"}). If you cannot find out which entity causes the problem implement 'App\\Entity\\User#__toString()' to get a clue. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/orm/lib/Doctrine/ORM/ORMInvalidArgumentException.php:102)","command":"doctrine:fixtures:load","message":"A new entity was found through the relationship 'App\\Entity\\Groupecompetence#user' that was not configured to cascade persist operations for entity: App\\Entity\\User@000000005e6aec5a000000005e1cdaf1. To solve this issue: Either explicitly call EntityManager#persist() on this unknown entity or configure cascade persist this association in the mapping for example @ManyToOne(..,cascade={\"persist\"}). If you cannot find out which entity causes the problem implement 'App\\Entity\\User#__toString()' to get a clue."} []
[2020-08-11T16:35:23.331066+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T16:38:53.021730+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T16:38:53.048578+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T16:38:53.048861+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T16:38:53.048999+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T16:38:53.049143+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T16:38:53.049277+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T16:38:53.049420+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T16:38:53.049544+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T16:38:53.049683+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T16:38:53.049803+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T16:38:53.049920+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T16:38:53.050065+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T16:38:53.050274+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T16:38:53.050483+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T16:38:53.050787+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T16:38:53.051269+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T16:38:53.051627+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T16:38:53.051942+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T16:38:53.052241+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T16:38:53.052509+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T16:38:53.186637+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-11T16:38:53.187763+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Notice: Undefined variable: referentiel" {"exception":"[object] (ErrorException(code: 0): Notice: Undefined variable: referentiel at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:66)","command":"doctrine:fixtures:load","message":"Notice: Undefined variable: referentiel"} []
[2020-08-11T16:38:53.187982+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-11T16:40:16.045143+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-11T16:40:16.070298+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-11T16:40:16.070599+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-11T16:40:16.070765+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-11T16:40:16.070960+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-11T16:40:16.071196+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-11T16:40:16.071388+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-11T16:40:16.071513+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-11T16:40:16.071635+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-11T16:40:16.071760+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-11T16:40:16.071879+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-11T16:40:16.071995+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-11T16:40:16.072110+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-11T16:40:16.072227+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-11T16:40:16.072357+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-11T16:40:16.072492+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-11T16:40:16.072629+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-11T16:40:16.072764+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-11T16:40:16.072886+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-11T16:40:16.073042+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-11T16:40:16.222728+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-11T16:40:16.223440+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-11T16:40:16.224649+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"thomas bonnet","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Roger","5":"Descamps","6":"francois53@grondin.net","7":"actif","8":null,"9":9,"10":"formateur"} []
[2020-08-11T16:40:16.224917+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":25} []
[2020-08-11T16:40:16.225194+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":25} []
[2020-08-11T16:40:16.226375+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [1,1] []
[2020-08-11T16:40:16.346555+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-11T16:40:16.347044+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"thierry martins","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"André","5":"Durand","6":"ndumas@dijoux.fr","7":"actif","8":null,"9":9,"10":"formateur"} []
[2020-08-11T16:40:16.348605+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":26} []
[2020-08-11T16:40:16.349951+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":26} []
[2020-08-11T16:40:16.350958+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [2,2] []
[2020-08-11T16:40:16.472269+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-11T16:40:16.472692+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"thibaut perrot","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Auguste","5":"Cousin","6":"bnicolas@gmail.com","7":"actif","8":null,"9":9,"10":"formateur"} []
[2020-08-11T16:40:16.472895+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":27} []
[2020-08-11T16:40:16.473077+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":27} []
[2020-08-11T16:40:16.473261+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [3,3] []
[2020-08-11T16:40:16.593827+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-11T16:40:16.594236+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-11T16:40:16.594475+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"inès de la lenoir","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Claire","5":"Dupre","6":"nicolas.patrick@deschamps.fr","7":"actif","8":null,"9":10,"10":"cm"} []
[2020-08-11T16:40:16.594701+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":28} []
[2020-08-11T16:40:16.596217+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":28} []
[2020-08-11T16:40:16.596422+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [4,4] []
[2020-08-11T16:40:16.720448+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-11T16:40:16.720869+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"clémence hoarau","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Audrey","5":"Lecomte","6":"henriette16@leblanc.com","7":"actif","8":null,"9":10,"10":"cm"} []
[2020-08-11T16:40:16.721086+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":29} []
[2020-08-11T16:40:16.721269+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":29} []
[2020-08-11T16:40:16.721453+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [5,5] []
[2020-08-11T16:40:16.842252+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-11T16:40:16.842675+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"françois-michel jean","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Isabelle","5":"Alves","6":"roger.texier@fernandez.com","7":"actif","8":null,"9":10,"10":"cm"} []
[2020-08-11T16:40:16.842878+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":30} []
[2020-08-11T16:40:16.843056+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":30} []
[2020-08-11T16:40:16.843241+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [6,6] []
[2020-08-11T16:40:16.963006+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-11T16:40:16.963388+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-11T16:40:16.963633+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"grégoire dumont","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Marine","5":"Lelievre","6":"guillou.arnaude@legoff.fr","7":"actif","8":null,"9":11,"10":"apprenant"} []
[2020-08-11T16:40:16.963832+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":31,"2":null} []
[2020-08-11T16:40:16.964041+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":31} []
[2020-08-11T16:40:16.964229+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [7,7] []
[2020-08-11T16:40:17.083523+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-11T16:40:17.083932+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"agnès robert","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Émile","5":"Blondel","6":"yves40@lelievre.fr","7":"actif","8":null,"9":11,"10":"apprenant"} []
[2020-08-11T16:40:17.084132+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":32,"2":null} []
[2020-08-11T16:40:17.084323+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":32} []
[2020-08-11T16:40:17.084505+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [8,8] []
[2020-08-11T16:40:17.204226+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-11T16:40:17.204640+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"arthur mahe","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Camille","5":"Maillard","6":"jerome30@lenoir.net","7":"actif","8":null,"9":11,"10":"apprenant"} []
[2020-08-11T16:40:17.204852+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":33,"2":null} []
[2020-08-11T16:40:17.205042+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":33} []
[2020-08-11T16:40:17.205241+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [9,9] []
[2020-08-11T16:40:17.325094+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-11T16:40:17.325476+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-11T16:40:17.325710+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"léon pelletier-joly","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Valérie","5":"Marion","6":"nath97@albert.com","7":"actif","8":null,"9":12,"10":"user"} []
[2020-08-11T16:40:17.325934+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":34} []
[2020-08-11T16:40:17.326118+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [10,10] []
[2020-08-11T16:40:17.445758+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-11T16:40:17.446180+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"martin raynaud","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Hortense","5":"Barbier","6":"margaux.marques@free.fr","7":"actif","8":null,"9":12,"10":"user"} []
[2020-08-11T16:40:17.446420+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":35} []
[2020-08-11T16:40:17.446621+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [11,11] []
[2020-08-11T16:40:17.566381+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-11T16:40:17.566818+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"nicolas-julien herve","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Monique","5":"Marchal","6":"thomas03@legros.com","7":"actif","8":null,"9":12,"10":"user"} []
[2020-08-11T16:40:17.567056+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":36} []
[2020-08-11T16:40:17.567240+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [12,12] []
[2020-08-11T16:40:17.567728+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-11T16:40:17.568221+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-11T16:40:17.568406+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [3,9] []
[2020-08-11T16:40:17.568893+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-11T16:40:17.569070+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [3,10] []
[2020-08-11T16:40:17.569550+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-11T16:40:17.570633+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [3,11] []
[2020-08-11T16:40:17.571127+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-11T16:40:17.571306+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [3,12] []
[2020-08-11T16:40:17.571808+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-11T16:40:17.572011+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":7} []
[2020-08-11T16:40:17.572911+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":7} []
[2020-08-11T16:40:17.573441+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":7} []
[2020-08-11T16:40:17.573994+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-11T16:40:17.574177+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":8} []
[2020-08-11T16:40:17.575963+00:00] doctrine.DEBUG: INSERT INTO groupecompetence_competence (groupecompetence_id, competence_id) VALUES (?, ?) [12,7] []
[2020-08-11T16:40:17.576552+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":8} []
[2020-08-11T16:40:17.577121+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":8} []
[2020-08-11T16:40:17.577684+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-11T16:40:17.577871+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":9} []
[2020-08-11T16:40:17.578062+00:00] doctrine.DEBUG: INSERT INTO groupecompetence_competence (groupecompetence_id, competence_id) VALUES (?, ?) [12,8] []
[2020-08-11T16:40:17.578620+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":9} []
[2020-08-11T16:40:17.579185+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":9} []
[2020-08-11T16:40:17.579850+00:00] doctrine.DEBUG: INSERT INTO promo (langue, titre, description, lieu, reference_agate, date_debut, date_fin_provisoire, fabrique, date_fin_reelle, etat, user_id, referentiel_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"FR","2":"Cohorte 3","3":"Promo Dev Web","4":"Dakar","5":null,"6":"2020-02-17T00:00:00+00:00","7":"2020-02-17T00:00:00+00:00","8":"fabrique","9":"2020-02-17T00:00:00+00:00","10":"en cours","11":null,"12":null} []
[2020-08-11T16:40:17.580106+00:00] doctrine.DEBUG: INSERT INTO groupecompetence_competence (groupecompetence_id, competence_id) VALUES (?, ?) [12,9] []
[2020-08-11T16:40:17.580285+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-12T22:12:51.374988+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Config\Exception\LoaderLoadException: "An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type." at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php line 173 {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-12T22:12:51.538916+00:00] request.CRITICAL: Exception thrown when handling an exception (Symfony\Component\Config\Exception\LoaderLoadException: An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php line 173) {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-12T22:12:51.539344+00:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-12T22:12:51.541392+00:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Config\Exception\LoaderLoadException: "An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type." at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php line 173 {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-12T22:12:51.831931+00:00] request.CRITICAL: Exception thrown when handling an exception (Symfony\Component\Config\Exception\LoaderLoadException: An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php line 173) {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-12T22:12:51.832049+00:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from "/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused in . (which is being imported from \"/opt/lampp/htdocs/file_rouge_gp1-ldab/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 2002): SQLSTATE[HY000] [2002] Connection refused at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-08-12T22:19:50.504929+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-08-12T22:19:50.519122+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T22:19:50.519180+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T22:19:50.519220+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T22:19:50.524494+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-12T22:30:53.522506+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-08-12T22:30:53.523484+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T22:30:53.523522+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T22:30:53.523550+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T22:30:53.523790+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-12T22:49:30.664484+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-12T22:49:30.691669+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-12T22:49:30.692204+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-12T22:49:30.694498+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-12T22:49:30.694878+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-12T22:49:30.695161+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-12T22:49:30.696803+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-12T22:49:30.697063+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-12T22:49:30.697240+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-12T22:49:30.699044+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-12T22:49:30.699266+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-12T22:49:30.700465+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-12T22:49:30.700616+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-12T22:49:30.700766+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-12T22:49:30.702346+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-12T22:49:30.704118+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-12T22:49:30.704298+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-12T22:49:30.704550+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-12T22:49:30.705745+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-12T22:49:30.706779+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-12T22:49:32.238475+00:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-08-12T22:49:32.241908+00:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\DataFixtures\Profilsortie' not found" {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\Profilsortie' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:142)","command":"doctrine:fixtures:load","message":"Class 'App\\DataFixtures\\Profilsortie' not found"} []
[2020-08-12T22:49:32.242217+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-08-12T22:49:32.242433+00:00] php.CRITICAL: Uncaught Error: Class 'App\DataFixtures\Profilsortie' not found {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\Profilsortie' not found at /opt/lampp/htdocs/file_rouge_gp1-ldab/src/DataFixtures/AppFixtures.php:142)"} []
[2020-08-12T22:49:54.413076+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-12T22:49:54.460041+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-12T22:49:54.460470+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-12T22:49:54.460733+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-12T22:49:54.460916+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-12T22:49:54.461079+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-12T22:49:54.461287+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-12T22:49:54.461453+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-12T22:49:54.461618+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-12T22:49:54.461743+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-12T22:49:54.461868+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-12T22:49:54.461983+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-12T22:49:54.462099+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-12T22:49:54.462263+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-12T22:49:54.462480+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-12T22:49:54.464385+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-12T22:49:54.464709+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-12T22:49:54.465011+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-12T22:49:54.466425+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-12T22:49:54.468096+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-12T22:49:55.970763+00:00] doctrine.DEBUG: INSERT INTO promo (langue, titre, description, lieu, reference_agate, date_debut, date_fin_provisoire, fabrique, date_fin_reelle, etat, user_id, referentiel_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"FR","2":"Cohorte 3","3":"Promo Dev Web","4":"Dakar","5":null,"6":"2020-02-17T00:00:00+00:00","7":"2020-02-17T00:00:00+00:00","8":"fabrique","9":"2020-02-17T00:00:00+00:00","10":"en cours","11":null,"12":null} []
[2020-08-12T22:49:55.971883+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-12T22:50:25.296978+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-12T22:50:25.298065+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-12T22:50:25.303510+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:25.304575+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:25.305973+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:25.306347+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-12T22:50:25.306952+00:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-12T22:50:25.309498+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-12T22:50:25.309860+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-12T22:50:25.310167+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:25.310706+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:25.310995+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:25.311276+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-12T22:50:25.311542+00:00] doctrine.DEBUG: SELECT * FROM doctrine_migration_versions [] []
[2020-08-12T22:50:27.507534+00:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-08-12T22:50:27.508821+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'apprenant' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.510626+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'apprenant' */ WHERE k.table_name = 'apprenant' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.513256+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'apprenant' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.514661+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'apprenant' [] []
[2020-08-12T22:50:27.515694+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'apprenant_groupe' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.517547+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'apprenant_groupe' */ WHERE k.table_name = 'apprenant_groupe' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.518904+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'apprenant_groupe' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.520402+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'apprenant_groupe' [] []
[2020-08-12T22:50:27.521424+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'cm' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.524042+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'cm' */ WHERE k.table_name = 'cm' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.525321+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'cm' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.526831+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'cm' [] []
[2020-08-12T22:50:27.528053+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'competence' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.530468+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'competence' */ WHERE k.table_name = 'competence' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.531704+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'competence' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.532814+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'competence' [] []
[2020-08-12T22:50:27.533681+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'doctrine_migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.535478+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'doctrine_migration_versions' */ WHERE k.table_name = 'doctrine_migration_versions' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.536465+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'doctrine_migration_versions' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.537359+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'doctrine_migration_versions' [] []
[2020-08-12T22:50:27.538046+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'formateur' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.540234+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'formateur' */ WHERE k.table_name = 'formateur' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.540993+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'formateur' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.541612+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'formateur' [] []
[2020-08-12T22:50:27.541976+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'formateur_groupe' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.542573+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'formateur_groupe' */ WHERE k.table_name = 'formateur_groupe' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.542930+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'formateur_groupe' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.543400+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'formateur_groupe' [] []
[2020-08-12T22:50:27.543747+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'groupe' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.544485+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'groupe' */ WHERE k.table_name = 'groupe' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.544924+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'groupe' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.545353+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'groupe' [] []
[2020-08-12T22:50:27.545669+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'groupecompetence' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.546277+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'groupecompetence' */ WHERE k.table_name = 'groupecompetence' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.546755+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'groupecompetence' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.547236+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'groupecompetence' [] []
[2020-08-12T22:50:27.547575+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'groupecompetence_competence' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.548238+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'groupecompetence_competence' */ WHERE k.table_name = 'groupecompetence_competence' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.548692+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'groupecompetence_competence' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.549103+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'groupecompetence_competence' [] []
[2020-08-12T22:50:27.549317+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'groupetag' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.549804+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'groupetag' */ WHERE k.table_name = 'groupetag' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.550104+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'groupetag' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.550364+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'groupetag' [] []
[2020-08-12T22:50:27.550540+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'groupetag_tag' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.551052+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'groupetag_tag' */ WHERE k.table_name = 'groupetag_tag' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.551339+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'groupetag_tag' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.551627+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'groupetag_tag' [] []
[2020-08-12T22:50:27.551811+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'niveau' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.552288+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'niveau' */ WHERE k.table_name = 'niveau' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.552536+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'niveau' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.552781+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'niveau' [] []
[2020-08-12T22:50:27.552955+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'profil' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.553356+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'profil' */ WHERE k.table_name = 'profil' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.553570+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'profil' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.553776+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'profil' [] []
[2020-08-12T22:50:27.553988+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'profilsortie' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.554383+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'profilsortie' */ WHERE k.table_name = 'profilsortie' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.554591+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'profilsortie' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.554831+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'profilsortie' [] []
[2020-08-12T22:50:27.555018+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'promo' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.555521+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'promo' */ WHERE k.table_name = 'promo' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.555795+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'promo' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.556101+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'promo' [] []
[2020-08-12T22:50:27.556299+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'referentiel' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.556765+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'referentiel' */ WHERE k.table_name = 'referentiel' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.556991+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'referentiel' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.557253+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'referentiel' [] []
[2020-08-12T22:50:27.557453+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'referentiel_groupecompetence' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.557844+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'referentiel_groupecompetence' */ WHERE k.table_name = 'referentiel_groupecompetence' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.558100+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'referentiel_groupecompetence' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.558366+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'referentiel_groupecompetence' [] []
[2020-08-12T22:50:27.558550+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'tag' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.558977+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'tag' */ WHERE k.table_name = 'tag' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.559196+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'tag' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.559397+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'tag' [] []
[2020-08-12T22:50:27.559564+00:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'fil_rouge' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-08-12T22:50:27.560027+00:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'fil_rouge' /*!50116 AND c.constraint_schema = 'fil_rouge' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-08-12T22:50:27.560260+00:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'fil_rouge' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-08-12T22:50:27.560491+00:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-08-12T22:51:22.031560+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-12T22:51:22.059118+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-12T22:51:22.059510+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-12T22:51:22.059690+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-12T22:51:22.059882+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-12T22:51:22.060084+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-12T22:51:22.060305+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-12T22:51:22.060436+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-12T22:51:22.060538+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-12T22:51:22.060637+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-12T22:51:22.060742+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-12T22:51:22.060840+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-12T22:51:22.060984+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-12T22:51:22.061084+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-12T22:51:22.061190+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-12T22:51:22.061309+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-12T22:51:22.061403+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-12T22:51:22.061497+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-12T22:51:22.061590+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-12T22:51:22.061688+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-12T22:51:23.552188+00:00] doctrine.DEBUG: INSERT INTO profilsortie (libelle) VALUES (?) {"1":"Developpeur Front"} []
[2020-08-12T22:51:23.552833+00:00] doctrine.DEBUG: INSERT INTO profilsortie (libelle) VALUES (?) {"1":"Developpeur Back"} []
[2020-08-12T22:51:23.553117+00:00] doctrine.DEBUG: INSERT INTO profilsortie (libelle) VALUES (?) {"1":"Developpeur Fullstack"} []
[2020-08-12T22:51:23.554644+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-12T22:53:22.503022+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-12T22:53:22.514596+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["david de lucas"] []
[2020-08-12T22:53:22.522356+00:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"david de lucas\" not found. at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-08-12T22:54:50.474533+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-12T22:54:50.500649+00:00] doctrine.DEBUG: DELETE FROM groupecompetence_competence [] []
[2020-08-12T22:54:50.501010+00:00] doctrine.DEBUG: DELETE FROM referentiel_groupecompetence [] []
[2020-08-12T22:54:50.501236+00:00] doctrine.DEBUG: DELETE FROM apprenant_groupe [] []
[2020-08-12T22:54:50.501380+00:00] doctrine.DEBUG: DELETE FROM formateur_groupe [] []
[2020-08-12T22:54:50.501521+00:00] doctrine.DEBUG: DELETE FROM groupetag_tag [] []
[2020-08-12T22:54:50.501670+00:00] doctrine.DEBUG: DELETE FROM groupetag [] []
[2020-08-12T22:54:50.501813+00:00] doctrine.DEBUG: DELETE FROM tag [] []
[2020-08-12T22:54:50.501954+00:00] doctrine.DEBUG: DELETE FROM formateur [] []
[2020-08-12T22:54:50.502072+00:00] doctrine.DEBUG: DELETE FROM apprenant [] []
[2020-08-12T22:54:50.502187+00:00] doctrine.DEBUG: DELETE FROM groupe [] []
[2020-08-12T22:54:50.502324+00:00] doctrine.DEBUG: DELETE FROM promo [] []
[2020-08-12T22:54:50.502439+00:00] doctrine.DEBUG: DELETE FROM referentiel [] []
[2020-08-12T22:54:50.502573+00:00] doctrine.DEBUG: DELETE FROM groupecompetence [] []
[2020-08-12T22:54:50.502713+00:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-08-12T22:54:50.502872+00:00] doctrine.DEBUG: DELETE FROM cm [] []
[2020-08-12T22:54:50.502981+00:00] doctrine.DEBUG: DELETE FROM profil [] []
[2020-08-12T22:54:50.503107+00:00] doctrine.DEBUG: DELETE FROM niveau [] []
[2020-08-12T22:54:50.503252+00:00] doctrine.DEBUG: DELETE FROM competence [] []
[2020-08-12T22:54:50.503389+00:00] doctrine.DEBUG: DELETE FROM profilsortie [] []
[2020-08-12T22:54:50.657749+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-12T22:54:50.658432+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"FORMATEUR","2":null} []
[2020-08-12T22:54:50.659663+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"arthur perrier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Margot","5":"Nguyen","6":"dasilva.jacques@mace.com","7":"actif","8":null,"9":13,"10":"formateur"} []
[2020-08-12T22:54:50.659937+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":37} []
[2020-08-12T22:54:50.660246+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":37} []
[2020-08-12T22:54:50.662116+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [13,13] []
[2020-08-12T22:54:50.785372+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-12T22:54:50.785864+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"paul didier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Raymond","5":"Rousset","6":"tmunoz@turpin.com","7":"actif","8":null,"9":13,"10":"formateur"} []
[2020-08-12T22:54:50.787671+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":38} []
[2020-08-12T22:54:50.789291+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":38} []
[2020-08-12T22:54:50.790165+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [14,14] []
[2020-08-12T22:54:50.914658+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-12T22:54:50.915163+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"jeanne daniel","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Éléonore","5":"Lambert","6":"thierry93@monnier.fr","7":"actif","8":null,"9":13,"10":"formateur"} []
[2020-08-12T22:54:50.915501+00:00] doctrine.DEBUG: INSERT INTO formateur (id) VALUES (?) {"1":39} []
[2020-08-12T22:54:50.915811+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":39} []
[2020-08-12T22:54:50.916106+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [15,15] []
[2020-08-12T22:54:51.039690+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-12T22:54:51.040146+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"CM","2":null} []
[2020-08-12T22:54:51.040475+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"victoire herve","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Frédéric","5":"Bernier","6":"hsauvage@orange.fr","7":"actif","8":null,"9":14,"10":"cm"} []
[2020-08-12T22:54:51.040787+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":40} []
[2020-08-12T22:54:51.042179+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":40} []
[2020-08-12T22:54:51.042420+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [16,16] []
[2020-08-12T22:54:51.165518+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-12T22:54:51.165997+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"nicolas leblanc","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Frédéric","5":"Texier","6":"ncarlier@orange.fr","7":"actif","8":null,"9":14,"10":"cm"} []
[2020-08-12T22:54:51.166243+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":41} []
[2020-08-12T22:54:51.166485+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":41} []
[2020-08-12T22:54:51.166683+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [17,17] []
[2020-08-12T22:54:51.289676+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-12T22:54:51.290119+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"alice de la grenier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Hugues","5":"Petit","6":"valette.adele@bourdon.fr","7":"actif","8":null,"9":14,"10":"cm"} []
[2020-08-12T22:54:51.290357+00:00] doctrine.DEBUG: INSERT INTO cm (id) VALUES (?) {"1":42} []
[2020-08-12T22:54:51.290594+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":42} []
[2020-08-12T22:54:51.290867+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [18,18] []
[2020-08-12T22:54:51.414045+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-12T22:54:51.414510+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"APPRENANT","2":null} []
[2020-08-12T22:54:51.414788+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"gérard blot","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Aimée","5":"Hebert","6":"auger.claire@dupont.com","7":"actif","8":null,"9":15,"10":"apprenant"} []
[2020-08-12T22:54:51.415088+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":43,"2":null} []
[2020-08-12T22:54:51.415417+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":43} []
[2020-08-12T22:54:51.415648+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [19,19] []
[2020-08-12T22:54:51.538768+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-12T22:54:51.539254+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"laure le lemonnier","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Yves","5":"Courtois","6":"joubert.pierre@laposte.net","7":"actif","8":null,"9":15,"10":"apprenant"} []
[2020-08-12T22:54:51.539583+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":44,"2":null} []
[2020-08-12T22:54:51.539884+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":44} []
[2020-08-12T22:54:51.540162+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [20,20] []
[2020-08-12T22:54:51.663258+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-12T22:54:51.663711+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"susanne-anouk pichon","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Catherine","5":"Bousquet","6":"pmaillard@delahaye.org","7":"actif","8":null,"9":15,"10":"apprenant"} []
[2020-08-12T22:54:51.663964+00:00] doctrine.DEBUG: INSERT INTO apprenant (id, profilsortie_id) VALUES (?, ?) {"1":45,"2":null} []
[2020-08-12T22:54:51.664215+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":45} []
[2020-08-12T22:54:51.664496+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [21,21] []
[2020-08-12T22:54:51.786472+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-12T22:54:51.786931+00:00] doctrine.DEBUG: INSERT INTO profil (libelle, last_update) VALUES (?, ?) {"1":"ADMIN","2":null} []
[2020-08-12T22:54:51.787260+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"sabine jacob","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Marthe","5":"Humbert","6":"richard.hoareau@raymond.com","7":"actif","8":null,"9":16,"10":"user"} []
[2020-08-12T22:54:51.787580+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":46} []
[2020-08-12T22:54:51.787819+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [22,22] []
[2020-08-12T22:54:51.910900+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-12T22:54:51.911341+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"patrick gallet-guyon","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Hortense","5":"Hamon","6":"helene.dacosta@morvan.com","7":"actif","8":null,"9":16,"10":"user"} []
[2020-08-12T22:54:51.911635+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":47} []
[2020-08-12T22:54:51.911946+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [23,23] []
[2020-08-12T22:54:52.034415+00:00] doctrine.DEBUG: INSERT INTO referentiel (libelle, presentation, programme, critere_admission, critere_evaluation) VALUES (?, ?, ?, ?, ?) {"1":"DEV WEB MOBILE","2":"developpement d'applicatio [...]","3":"Programme de ce referentiel","4":"Critère d'admission de ce  [...]","5":"Critère d'évaluation de ce [...]"} []
[2020-08-12T22:54:52.034927+00:00] doctrine.DEBUG: INSERT INTO user (username, password, avatar, prenom, nom, email, statut, last_login, profil_id, type) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"aimée-marcelle jacquot","2":"$argon2id$v=19$m=65536,t=4 [...]","3":"https://lorempixel.com/640 [...]","4":"Jeannine","5":"Maury","6":"lambert.pauline@boyer.org","7":"actif","8":null,"9":16,"10":"user"} []
[2020-08-12T22:54:52.035260+00:00] doctrine.DEBUG: INSERT INTO groupecompetence (libelle, descriptif, user_id) VALUES (?, ?, ?) {"1":"Developper le backend d'un [...]","2":"Le descriptif pour develop [...]","3":48} []
[2020-08-12T22:54:52.035530+00:00] doctrine.DEBUG: INSERT INTO referentiel_groupecompetence (referentiel_id, groupecompetence_id) VALUES (?, ?) [24,24] []
[2020-08-12T22:54:52.036138+00:00] doctrine.DEBUG: INSERT INTO groupetag (libelle, last_update) VALUES (?, ?) {"1":"FrontEnd","2":null} []
[2020-08-12T22:54:52.036731+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"PHP","2":"Descriptif de ce tag"} []
[2020-08-12T22:54:52.036912+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"JavaScript","2":"Descriptif de ce tag"} []
[2020-08-12T22:54:52.037071+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Ajax","2":"Descriptif de ce tag"} []
[2020-08-12T22:54:52.037213+00:00] doctrine.DEBUG: INSERT INTO tag (libelle, descriptif) VALUES (?, ?) {"1":"Json","2":"Descriptif de ce tag"} []
[2020-08-12T22:54:52.037404+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"Connaissances solide en PHP"} []
[2020-08-12T22:54:52.037645+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":10} []
[2020-08-12T22:54:52.038525+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [4,13] []
[2020-08-12T22:54:52.038805+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [4,14] []
[2020-08-12T22:54:52.039021+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [4,15] []
[2020-08-12T22:54:52.040369+00:00] doctrine.DEBUG: INSERT INTO groupetag_tag (groupetag_id, tag_id) VALUES (?, ?) [4,16] []
[2020-08-12T22:54:52.041047+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":10} []
[2020-08-12T22:54:52.041646+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation1","3":"Action A, Action B, Action C","4":10} []
[2020-08-12T22:54:52.042234+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"excellent niveau en Bootsrap"} []
[2020-08-12T22:54:52.042463+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":11} []
[2020-08-12T22:54:52.043937+00:00] doctrine.DEBUG: INSERT INTO groupecompetence_competence (groupecompetence_id, competence_id) VALUES (?, ?) [24,10] []
[2020-08-12T22:54:52.044553+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":11} []
[2020-08-12T22:54:52.045108+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation2","3":"Action A, Action B, Action C","4":11} []
[2020-08-12T22:54:52.045646+00:00] doctrine.DEBUG: INSERT INTO competence (libelle) VALUES (?) {"1":"bon niveux en Ajax"} []
[2020-08-12T22:54:52.045801+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau1","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":12} []
[2020-08-12T22:54:52.045953+00:00] doctrine.DEBUG: INSERT INTO groupecompetence_competence (groupecompetence_id, competence_id) VALUES (?, ?) [24,11] []
[2020-08-12T22:54:52.046456+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau2","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":12} []
[2020-08-12T22:54:52.046964+00:00] doctrine.DEBUG: INSERT INTO niveau (libelle, critere_evaluation, groupe_action, competence_id) VALUES (?, ?, ?, ?) {"1":"Niveau3","2":"CritereEvaluation3","3":"Action A, Action B, Action C","4":12} []
[2020-08-12T22:54:52.047503+00:00] doctrine.DEBUG: INSERT INTO profilsortie (libelle) VALUES (?) {"1":"Developpeur Front"} []
[2020-08-12T22:54:52.047666+00:00] doctrine.DEBUG: INSERT INTO groupecompetence_competence (groupecompetence_id, competence_id) VALUES (?, ?) [24,12] []
[2020-08-12T22:54:52.048144+00:00] doctrine.DEBUG: INSERT INTO profilsortie (libelle) VALUES (?) {"1":"Developpeur Back"} []
[2020-08-12T22:54:52.048616+00:00] doctrine.DEBUG: INSERT INTO profilsortie (libelle) VALUES (?) {"1":"Developpeur Fullstack"} []
[2020-08-12T22:54:52.049193+00:00] doctrine.DEBUG: INSERT INTO promo (langue, titre, description, lieu, reference_agate, date_debut, date_fin_provisoire, fabrique, date_fin_reelle, etat, user_id, referentiel_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) {"1":"FR","2":"Cohorte 3","3":"Promo Dev Web","4":"Dakar","5":null,"6":"2020-02-17T00:00:00+00:00","7":"2020-02-17T00:00:00+00:00","8":"fabrique","9":"2020-02-17T00:00:00+00:00","10":"en cours","11":null,"12":null} []
[2020-08-12T22:54:52.049409+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-12T22:55:14.552256+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-12T22:55:14.556781+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T22:55:14.696476+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T22:55:14.696993+00:00] security.INFO: User has been authenticated successfully. {"username":"sabine jacob"} []
[2020-08-12T22:56:03.485361+00:00] request.INFO: Matched route "api_profilsorties_get_collection". {"route":"api_profilsorties_get_collection","route_parameters":{"_route":"api_profilsorties_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Profilsortie","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/profilsorties","method":"GET"} []
[2020-08-12T22:56:03.486562+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T22:56:03.486616+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T22:56:03.486656+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T22:56:03.490203+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T22:56:03.490815+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T22:57:12.816647+00:00] request.INFO: Matched route "api_profilsorties_get_collection". {"route":"api_profilsorties_get_collection","route_parameters":{"_route":"api_profilsorties_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Profilsortie","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/profilsorties","method":"GET"} []
[2020-08-12T22:57:12.817277+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T22:57:12.817320+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T22:57:12.817357+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T22:57:12.818402+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T22:57:12.822598+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T22:57:12.827446+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T22:57:12.828292+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T22:57:12.828401+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T22:57:12.828429+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T22:57:12.875626+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.libelle AS libelle_1 FROM profilsortie p0_ ORDER BY p0_.id ASC LIMIT 10 [] []
[2020-08-12T22:57:12.881873+00:00] doctrine.DEBUG: SELECT count(p0_.id) AS sclr_0 FROM profilsortie p0_ [] []
[2020-08-12T23:00:32.207666+00:00] request.INFO: Matched route "api_profilsorties_get_collection". {"route":"api_profilsorties_get_collection","route_parameters":{"_route":"api_profilsorties_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Profilsortie","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/profilsorties","method":"GET"} []
[2020-08-12T23:00:32.208672+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T23:00:32.208720+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:00:32.208760+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:00:32.209361+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:00:32.210185+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T23:00:32.212007+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T23:00:32.212486+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:00:32.212574+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:00:32.212599+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:00:32.218492+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.libelle AS libelle_1 FROM profilsortie p0_ ORDER BY p0_.id ASC LIMIT 10 [] []
[2020-08-12T23:00:32.220216+00:00] doctrine.DEBUG: SELECT count(p0_.id) AS sclr_0 FROM profilsortie p0_ [] []
[2020-08-12T23:23:27.700631+00:00] request.INFO: Matched route "api_profilsorties_get_collection". {"route":"api_profilsorties_get_collection","route_parameters":{"_route":"api_profilsorties_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Profilsortie","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/admin/profilsorties","method":"GET"} []
[2020-08-12T23:23:27.701661+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T23:23:27.701711+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:23:27.701754+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:23:27.702457+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:23:27.703208+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T23:23:27.704602+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T23:23:27.704988+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:23:27.705067+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:23:27.705093+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:23:27.711665+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.libelle AS libelle_1 FROM profilsortie p0_ ORDER BY p0_.id ASC LIMIT 10 [] []
[2020-08-12T23:23:27.714052+00:00] doctrine.DEBUG: SELECT count(p0_.id) AS sclr_0 FROM profilsortie p0_ [] []
[2020-08-12T23:24:01.987218+00:00] request.INFO: Matched route "api_profilsorties_get_item". {"route":"api_profilsorties_get_item","route_parameters":{"_route":"api_profilsorties_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Profilsortie","_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/profilsorties/1","method":"GET"} []
[2020-08-12T23:24:01.988738+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T23:24:01.988805+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:24:01.988845+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:24:01.989393+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:24:01.994358+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T23:24:01.998267+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T23:24:01.999002+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:24:01.999117+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:24:01.999147+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:24:02.007297+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.libelle AS libelle_1 FROM profilsortie p0_ WHERE p0_.id = ? [1] []
[2020-08-12T23:24:02.009431+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-12T23:29:54.793861+00:00] request.INFO: Matched route "api_profilsorties_get_item". {"route":"api_profilsorties_get_item","route_parameters":{"_route":"api_profilsorties_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Profilsortie","_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/profilsorties/1","method":"GET"} []
[2020-08-12T23:29:54.795000+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T23:29:54.795048+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:29:54.795090+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:29:54.796567+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:29:54.797289+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T23:29:54.798858+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T23:29:54.799301+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:29:54.799392+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:29:54.799418+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:29:54.802129+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.libelle AS libelle_1 FROM profilsortie p0_ WHERE p0_.id = ? [1] []
[2020-08-12T23:29:54.803439+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-12T23:31:18.420632+00:00] request.INFO: Matched route "api_profilsorties_get_item". {"route":"api_profilsorties_get_item","route_parameters":{"_route":"api_profilsorties_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Profilsortie","_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/profilsorties/1","method":"GET"} []
[2020-08-12T23:31:18.421625+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T23:31:18.421663+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:31:18.421702+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:31:18.422225+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:31:18.422881+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T23:31:18.424224+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T23:31:18.424616+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:31:18.424701+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:31:18.424737+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:31:18.426808+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.libelle AS libelle_1 FROM profilsortie p0_ WHERE p0_.id = ? [1] []
[2020-08-12T23:31:18.427759+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-12T23:31:29.901545+00:00] request.INFO: Matched route "api_profilsorties_get_item". {"route":"api_profilsorties_get_item","route_parameters":{"_route":"api_profilsorties_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Profilsortie","_api_item_operation_name":"get","id":"1"},"request_uri":"http://127.0.0.1:8000/api/admin/profilsorties/1","method":"GET"} []
[2020-08-12T23:31:29.903468+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T23:31:29.903528+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:31:29.903573+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:31:29.904212+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:31:29.909733+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T23:31:29.914074+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T23:31:29.914770+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:31:29.914928+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:31:29.914973+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:31:29.929311+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.libelle AS libelle_1 FROM profilsortie p0_ WHERE p0_.id = ? [1] []
[2020-08-12T23:31:29.930732+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Not Found" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php line 116 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Not Found at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/api-platform/core/src/EventListener/ReadListener.php:116)"} []
[2020-08-12T23:32:06.200295+00:00] request.INFO: Matched route "api_profilsorties_get_item". {"route":"api_profilsorties_get_item","route_parameters":{"_route":"api_profilsorties_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Profilsortie","_api_item_operation_name":"get","id":"4"},"request_uri":"http://127.0.0.1:8000/api/admin/profilsorties/4","method":"GET"} []
[2020-08-12T23:32:06.201439+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T23:32:06.201489+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:06.201530+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:06.202037+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:06.202745+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T23:32:06.204295+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T23:32:06.204781+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:06.204872+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:06.204899+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:06.207353+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.libelle AS libelle_1 FROM profilsortie p0_ WHERE p0_.id = ? [4] []
[2020-08-12T23:32:14.505316+00:00] request.INFO: Matched route "api_profilsorties_get_item". {"route":"api_profilsorties_get_item","route_parameters":{"_route":"api_profilsorties_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Profilsortie","_api_item_operation_name":"get","id":"4"},"request_uri":"http://127.0.0.1:8000/api/admin/profilsorties/4","method":"GET"} []
[2020-08-12T23:32:14.506267+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T23:32:14.506309+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:14.506348+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:14.506852+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:14.507473+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T23:32:14.508835+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T23:32:14.509194+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:14.509273+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:14.509298+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:14.511500+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.libelle AS libelle_1 FROM profilsortie p0_ WHERE p0_.id = ? [4] []
[2020-08-12T23:32:17.789817+00:00] request.INFO: Matched route "api_profilsorties_get_item". {"route":"api_profilsorties_get_item","route_parameters":{"_route":"api_profilsorties_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Profilsortie","_api_item_operation_name":"get","id":"5"},"request_uri":"http://127.0.0.1:8000/api/admin/profilsorties/5","method":"GET"} []
[2020-08-12T23:32:17.792346+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T23:32:17.792428+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:17.792499+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:17.793347+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:17.801133+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T23:32:17.805620+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T23:32:17.806215+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:17.806326+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:17.806354+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:17.808819+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.libelle AS libelle_1 FROM profilsortie p0_ WHERE p0_.id = ? [5] []
[2020-08-12T23:32:21.143890+00:00] request.INFO: Matched route "api_profilsorties_get_item". {"route":"api_profilsorties_get_item","route_parameters":{"_route":"api_profilsorties_get_item","_controller":"api_platform.action.get_item","_format":null,"_api_resource_class":"App\\Entity\\Profilsortie","_api_item_operation_name":"get","id":"6"},"request_uri":"http://127.0.0.1:8000/api/admin/profilsorties/6","method":"GET"} []
[2020-08-12T23:32:21.145351+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T23:32:21.145431+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:21.145497+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:21.146321+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:21.153422+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T23:32:21.159381+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T23:32:21.160085+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:21.160245+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:21.160286+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:32:21.162814+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.libelle AS libelle_1 FROM profilsortie p0_ WHERE p0_.id = ? [6] []
[2020-08-12T23:33:11.881568+00:00] request.INFO: Matched route "api_profilsorties_post_collection". {"route":"api_profilsorties_post_collection","route_parameters":{"_route":"api_profilsorties_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Profilsortie","_api_collection_operation_name":"post"},"request_uri":"http://127.0.0.1:8000/api/admin/profilsorties","method":"POST"} []
[2020-08-12T23:33:11.882219+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T23:33:11.882271+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:33:11.882313+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:33:11.883106+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:33:11.889956+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T23:33:11.894987+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T23:33:11.895562+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:33:11.895694+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:33:11.895744+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:33:11.908287+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-12T23:33:11.909095+00:00] doctrine.DEBUG: INSERT INTO profilsortie (libelle) VALUES (?) {"1":"Developpeur JAVA"} []
[2020-08-12T23:33:11.909813+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-12T23:33:11.910861+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM profilsortie t0 WHERE t0.id = ? [7] []
[2020-08-12T23:38:30.486274+00:00] request.INFO: Matched route "api_profilsorties_put_item". {"route":"api_profilsorties_put_item","route_parameters":{"_route":"api_profilsorties_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Profilsortie","_api_item_operation_name":"put","id":"7"},"request_uri":"http://127.0.0.1:8000/api/admin/profilsorties/7","method":"PUT"} []
[2020-08-12T23:38:30.487097+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T23:38:30.487157+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:38:30.487203+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:38:30.487935+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:38:30.493787+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T23:38:30.499518+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T23:38:30.500250+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:38:30.500415+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:38:30.500462+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:38:30.503958+00:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.libelle AS libelle_1 FROM profilsortie p0_ WHERE p0_.id = ? [7] []
[2020-08-12T23:38:30.508975+00:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-08-12T23:38:30.509179+00:00] doctrine.DEBUG: UPDATE profilsortie SET libelle = ? WHERE id = ? ["Developpeur Mobile",7] []
[2020-08-12T23:38:30.509778+00:00] doctrine.DEBUG: "COMMIT" [] []
[2020-08-12T23:38:30.510996+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2 FROM profilsortie t0 WHERE t0.id = ? [7] []
[2020-08-12T23:40:17.312168+00:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-08-12T23:40:17.313357+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T23:40:17.313397+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:40:17.313425+00:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:40:17.313697+00:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-08-12T23:41:07.979138+00:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET //api/profilsorties/4/apprenants"" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET //api/profilsorties/4/apprenants\" at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"//api/profilsorties/4/apprenants/\". at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-08-12T23:41:15.391842+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"4"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/4/apprenants","method":"GET"} []
[2020-08-12T23:41:15.393576+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T23:41:15.393644+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:41:15.393693+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:41:15.394307+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:41:15.399913+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T23:41:15.404007+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T23:41:15.404598+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:41:15.404735+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:41:15.404776+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:41:15.425799+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.last_login AS last_login_8, u0_.type AS type_9, u0_.profil_id AS profil_id_10, a1_.profilsortie_id AS profilsortie_id_11 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? ORDER BY u0_.id ASC LIMIT 10 [4] []
[2020-08-12T23:41:15.429480+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN apprenant_groupe ON t0.id = apprenant_groupe.groupe_id WHERE apprenant_groupe.apprenant_id = ? [44] []
[2020-08-12T23:41:15.430178+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [15] []
[2020-08-12T23:41:15.431660+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [44] []
[2020-08-12T23:41:15.432263+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [44] []
[2020-08-12T23:41:15.433904+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? [4] []
[2020-08-12T23:41:34.309264+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"5"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/5/apprenants","method":"GET"} []
[2020-08-12T23:41:34.310643+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-12T23:41:34.310913+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:41:34.310987+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:41:34.312022+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:41:34.317285+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-12T23:41:34.323171+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-12T23:41:34.323871+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:41:34.324016+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:41:34.324059+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-12T23:41:34.342389+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.last_login AS last_login_8, u0_.type AS type_9, u0_.profil_id AS profil_id_10, a1_.profilsortie_id AS profilsortie_id_11 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? ORDER BY u0_.id ASC LIMIT 10 [5] []
[2020-08-12T23:41:34.345411+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN apprenant_groupe ON t0.id = apprenant_groupe.groupe_id WHERE apprenant_groupe.apprenant_id = ? [43] []
[2020-08-12T23:41:34.345965+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [15] []
[2020-08-12T23:41:34.347005+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [43] []
[2020-08-12T23:41:34.347427+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [43] []
[2020-08-12T23:41:34.348521+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? [5] []
[2020-08-13T00:01:11.528991+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"5"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/5/apprenants","method":"GET"} []
[2020-08-13T00:01:11.530662+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-13T00:01:11.530718+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:01:11.530758+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:01:11.531076+00:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /opt/lampp/htdocs/file_rouge_gp1-ldab/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:118)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:01:11.531274+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:01:16.136002+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-13T00:01:16.148805+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-13T00:01:16.293442+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-13T00:01:16.294078+00:00] security.INFO: User has been authenticated successfully. {"username":"sabine jacob"} []
[2020-08-13T00:01:36.979804+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"5"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/5/apprenants","method":"GET"} []
[2020-08-13T00:01:36.980830+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-13T00:01:36.980907+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:01:36.980967+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:01:36.981657+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:01:36.990196+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-13T00:01:36.995145+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-13T00:01:36.995750+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:01:36.995865+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:01:36.995904+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:01:37.014299+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.last_login AS last_login_8, u0_.type AS type_9, u0_.profil_id AS profil_id_10, a1_.profilsortie_id AS profilsortie_id_11 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? ORDER BY u0_.id ASC LIMIT 10 [5] []
[2020-08-13T00:01:37.017471+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN apprenant_groupe ON t0.id = apprenant_groupe.groupe_id WHERE apprenant_groupe.apprenant_id = ? [43] []
[2020-08-13T00:01:37.018023+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [15] []
[2020-08-13T00:01:37.019791+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [43] []
[2020-08-13T00:01:37.020369+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [43] []
[2020-08-13T00:01:37.022488+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? [5] []
[2020-08-13T00:02:11.637734+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"5"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/5/apprenants","method":"GET"} []
[2020-08-13T00:02:11.639432+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-13T00:02:11.639518+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:02:11.639565+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:02:11.640139+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:02:11.641291+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-13T00:02:11.642872+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-13T00:02:11.643330+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:02:11.643435+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:02:11.643467+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:02:11.650743+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.last_login AS last_login_8, u0_.type AS type_9, u0_.profil_id AS profil_id_10, a1_.profilsortie_id AS profilsortie_id_11 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? ORDER BY u0_.id ASC LIMIT 10 [5] []
[2020-08-13T00:02:11.652858+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN apprenant_groupe ON t0.id = apprenant_groupe.groupe_id WHERE apprenant_groupe.apprenant_id = ? [43] []
[2020-08-13T00:02:11.653339+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [15] []
[2020-08-13T00:02:11.654249+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [43] []
[2020-08-13T00:02:11.654610+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [43] []
[2020-08-13T00:02:11.655778+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? [5] []
[2020-08-13T00:05:43.971763+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"5"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/5/apprenants","method":"GET"} []
[2020-08-13T00:05:43.973461+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-13T00:05:43.973510+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:05:43.973553+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:05:43.974105+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:05:43.975296+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-13T00:05:43.977190+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-13T00:05:43.978057+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:05:43.978222+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:05:43.978256+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:05:43.989400+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.last_login AS last_login_8, u0_.type AS type_9, u0_.profil_id AS profil_id_10, a1_.profilsortie_id AS profilsortie_id_11 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? ORDER BY u0_.id ASC LIMIT 10 [5] []
[2020-08-13T00:05:43.992109+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN apprenant_groupe ON t0.id = apprenant_groupe.groupe_id WHERE apprenant_groupe.apprenant_id = ? [43] []
[2020-08-13T00:05:43.992834+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [15] []
[2020-08-13T00:05:43.994186+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [43] []
[2020-08-13T00:05:43.994822+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [43] []
[2020-08-13T00:05:43.996626+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? [5] []
[2020-08-13T00:06:22.590959+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"5"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/5/apprenants","method":"GET"} []
[2020-08-13T00:06:22.592546+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-13T00:06:22.592590+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:06:22.592627+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:06:22.593122+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:06:22.594223+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-13T00:06:22.595919+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-13T00:06:22.596729+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:06:22.596879+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:06:22.596912+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T00:06:22.606338+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.last_login AS last_login_8, u0_.type AS type_9, u0_.profil_id AS profil_id_10, a1_.profilsortie_id AS profilsortie_id_11 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? ORDER BY u0_.id ASC LIMIT 10 [5] []
[2020-08-13T00:06:22.608821+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN apprenant_groupe ON t0.id = apprenant_groupe.groupe_id WHERE apprenant_groupe.apprenant_id = ? [43] []
[2020-08-13T00:06:22.609391+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [15] []
[2020-08-13T00:06:22.610462+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [43] []
[2020-08-13T00:06:22.611050+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [43] []
[2020-08-13T00:06:22.612950+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? [5] []
[2020-08-13T12:33:28.824088+00:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-08-13T12:33:28.897288+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-13T12:33:29.046184+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-13T12:33:29.047504+00:00] security.INFO: User has been authenticated successfully. {"username":"sabine jacob"} []
[2020-08-13T12:33:53.160509+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"5"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/5/apprenants","method":"GET"} []
[2020-08-13T12:33:53.165603+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-13T12:33:53.165649+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:33:53.165685+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:33:53.168516+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:33:53.176940+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-13T12:33:53.180833+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-13T12:33:53.181481+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:33:53.181595+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:33:53.181636+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:33:53.230262+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.last_login AS last_login_8, u0_.type AS type_9, u0_.profil_id AS profil_id_10, a1_.profilsortie_id AS profilsortie_id_11 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? ORDER BY u0_.id ASC LIMIT 10 [5] []
[2020-08-13T12:33:53.237847+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN apprenant_groupe ON t0.id = apprenant_groupe.groupe_id WHERE apprenant_groupe.apprenant_id = ? [43] []
[2020-08-13T12:33:53.239092+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [15] []
[2020-08-13T12:33:53.240428+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [43] []
[2020-08-13T12:33:53.241398+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [43] []
[2020-08-13T12:33:53.244603+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? [5] []
[2020-08-13T12:37:44.386608+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"5"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/5/apprenants","method":"GET"} []
[2020-08-13T12:37:44.388080+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-13T12:37:44.388140+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:37:44.388198+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:37:44.388977+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:37:44.390000+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-13T12:37:44.391954+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-13T12:37:44.392512+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:37:44.392641+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:37:44.392679+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:37:44.398909+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.last_login AS last_login_8, u0_.type AS type_9, u0_.profil_id AS profil_id_10, a1_.profilsortie_id AS profilsortie_id_11 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? ORDER BY u0_.id ASC LIMIT 10 [5] []
[2020-08-13T12:37:44.400988+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN apprenant_groupe ON t0.id = apprenant_groupe.groupe_id WHERE apprenant_groupe.apprenant_id = ? [43] []
[2020-08-13T12:37:44.401422+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [15] []
[2020-08-13T12:37:44.402254+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [43] []
[2020-08-13T12:37:44.402595+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [43] []
[2020-08-13T12:37:44.403793+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? [5] []
[2020-08-13T12:39:54.481033+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"5"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/5/apprenants","method":"GET"} []
[2020-08-13T12:39:54.481953+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-13T12:39:54.481990+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:39:54.482029+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:39:54.482526+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:39:54.483167+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-13T12:39:54.484482+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-13T12:39:54.484849+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:39:54.484931+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:39:54.484957+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:39:54.493724+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.last_login AS last_login_8, u0_.type AS type_9, u0_.profil_id AS profil_id_10, a1_.profilsortie_id AS profilsortie_id_11 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? ORDER BY u0_.id ASC LIMIT 10 [5] []
[2020-08-13T12:39:54.497115+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? [5] []
[2020-08-13T12:40:24.126057+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"5"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/5/apprenants","method":"GET"} []
[2020-08-13T12:40:24.127068+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-13T12:40:24.127113+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:40:24.127153+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:40:24.127655+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:40:24.128309+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-13T12:40:24.129672+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-13T12:40:24.130072+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:40:24.130149+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:40:24.130174+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:40:24.135498+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.last_login AS last_login_8, u0_.type AS type_9, u0_.profil_id AS profil_id_10, a1_.profilsortie_id AS profilsortie_id_11 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? ORDER BY u0_.id ASC LIMIT 10 [5] []
[2020-08-13T12:40:24.138135+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.nom AS nom_2, t0.date_creation AS date_creation_3, t0.statut AS statut_4, t0.type AS type_5, t0.promo_id AS promo_id_6 FROM groupe t0 INNER JOIN apprenant_groupe ON t0.id = apprenant_groupe.groupe_id WHERE apprenant_groupe.apprenant_id = ? [43] []
[2020-08-13T12:40:24.138749+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [15] []
[2020-08-13T12:40:24.139823+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.langue AS langue_2, t0.titre AS titre_3, t0.description AS description_4, t0.lieu AS lieu_5, t0.reference_agate AS reference_agate_6, t0.date_debut AS date_debut_7, t0.date_fin_provisoire AS date_fin_provisoire_8, t0.fabrique AS fabrique_9, t0.date_fin_reelle AS date_fin_reelle_10, t0.etat AS etat_11, t0.user_id AS user_id_12, t0.referentiel_id AS referentiel_id_13 FROM promo t0 WHERE t0.user_id = ? [43] []
[2020-08-13T12:40:24.140279+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.descriptif AS descriptif_3, t0.user_id AS user_id_4 FROM groupecompetence t0 WHERE t0.user_id = ? [43] []
[2020-08-13T12:40:24.141533+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? [5] []
[2020-08-13T12:40:38.760796+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"5"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/5/apprenants","method":"GET"} []
[2020-08-13T12:40:38.761732+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-13T12:40:38.761772+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:40:38.761811+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:40:38.762291+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:40:38.762944+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-13T12:40:38.764460+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-13T12:40:38.764947+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:40:38.765062+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:40:38.765096+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:40:38.774823+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.last_login AS last_login_8, u0_.type AS type_9, u0_.profil_id AS profil_id_10, a1_.profilsortie_id AS profilsortie_id_11 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? ORDER BY u0_.id ASC LIMIT 10 [5] []
[2020-08-13T12:40:38.778209+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? [5] []
[2020-08-13T12:41:05.079291+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"5"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/5/apprenants","method":"GET"} []
[2020-08-13T12:41:05.080689+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-13T12:41:05.080729+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:41:05.080766+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:41:05.081270+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:41:05.088677+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-13T12:41:05.091926+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-13T12:41:05.092305+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:41:05.092399+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:41:05.092428+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:41:05.097784+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.last_login AS last_login_8, u0_.type AS type_9, u0_.profil_id AS profil_id_10, a1_.profilsortie_id AS profilsortie_id_11 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? ORDER BY u0_.id ASC LIMIT 10 [5] []
[2020-08-13T12:41:05.099817+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? [5] []
[2020-08-13T12:47:21.627428+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"'"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/'/apprenants","method":"GET"} []
[2020-08-13T12:47:21.628019+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-13T12:47:21.628060+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:47:21.628094+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:47:21.628558+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:47:21.635002+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-13T12:47:21.638731+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-13T12:47:21.639261+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:47:21.639354+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:47:21.639380+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:47:21.653036+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.last_login AS last_login_8, u0_.type AS type_9, u0_.profil_id AS profil_id_10, a1_.profilsortie_id AS profilsortie_id_11 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? ORDER BY u0_.id ASC LIMIT 10 [0] []
[2020-08-13T12:47:21.654202+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? [0] []
[2020-08-13T12:47:25.380100+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"4"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/4/apprenants","method":"GET"} []
[2020-08-13T12:47:25.380945+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-13T12:47:25.381019+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:47:25.381075+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:47:25.381752+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:47:25.389199+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-13T12:47:25.392590+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-13T12:47:25.393149+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:47:25.393266+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:47:25.393310+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:47:25.404635+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.last_login AS last_login_8, u0_.type AS type_9, u0_.profil_id AS profil_id_10, a1_.profilsortie_id AS profilsortie_id_11 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? ORDER BY u0_.id ASC LIMIT 10 [4] []
[2020-08-13T12:47:25.407308+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? [4] []
[2020-08-13T12:50:41.410729+00:00] request.INFO: Matched route "api_profilsorties_apprenants_get_subresource". {"route":"api_profilsorties_apprenants_get_subresource","route_parameters":{"_route":"api_profilsorties_apprenants_get_subresource","_controller":"api_platform.action.get_subresource","_format":null,"_api_resource_class":"App\\Entity\\Apprenant","_api_subresource_operation_name":"api_profilsorties_apprenants_get_subresource","_api_subresource_context":{"property":"apprenants","identifiers":[["id","App\\Entity\\Profilsortie",true]],"collection":true,"operationId":"api_profilsorties_apprenants_get_subresource"},"id":"6"},"request_uri":"http://127.0.0.1:8000/api/profilsorties/6/apprenants","method":"GET"} []
[2020-08-13T12:50:41.411359+00:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-08-13T12:50:41.411404+00:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:50:41.411443+00:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:50:41.412007+00:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:50:41.418628+00:00] doctrine.DEBUG: SELECT t0.id AS id_4, t0.username AS username_5, t0.password AS password_6, t0.avatar AS avatar_7, t0.prenom AS prenom_8, t0.nom AS nom_9, t0.email AS email_10, t0.statut AS statut_11, t0.last_login AS last_login_12, t0.profil_id AS profil_id_13, t0.type, t1.profilsortie_id AS profilsortie_id_14 FROM user t0 LEFT JOIN apprenant t1 ON t0.id = t1.id LEFT JOIN formateur t2 ON t0.id = t2.id LEFT JOIN cm t3 ON t0.id = t3.id WHERE t0.username = ? LIMIT 1 ["sabine jacob"] []
[2020-08-13T12:50:41.421779+00:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.libelle AS libelle_2, t0.last_update AS last_update_3 FROM profil t0 WHERE t0.id = ? [16] []
[2020-08-13T12:50:41.422218+00:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"sabine jacob\", authenticated=true, roles=\"ROLE_ADMIN\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:50:41.422335+00:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:50:41.422375+00:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-08-13T12:50:41.434073+00:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.username AS username_1, u0_.password AS password_2, u0_.avatar AS avatar_3, u0_.prenom AS prenom_4, u0_.nom AS nom_5, u0_.email AS email_6, u0_.statut AS statut_7, u0_.last_login AS last_login_8, u0_.type AS type_9, u0_.profil_id AS profil_id_10, a1_.profilsortie_id AS profilsortie_id_11 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? ORDER BY u0_.id ASC LIMIT 10 [6] []
[2020-08-13T12:50:41.436103+00:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM apprenant a1_ INNER JOIN user u0_ ON a1_.id = u0_.id WHERE a1_.profilsortie_id = ? [6] []
